<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerrylou&#39;s Notes</title>
  
  <subtitle>labor for reward</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jerrylou.me/"/>
  <updated>2018-07-29T11:18:15.292Z</updated>
  <id>http://www.jerrylou.me/</id>
  
  <author>
    <name>luoji</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Vagrant搭建Kubernetes集群</title>
    <link href="http://www.jerrylou.me/k8s/vagrant-k8s-20180729.html"/>
    <id>http://www.jerrylou.me/k8s/vagrant-k8s-20180729.html</id>
    <published>2018-07-29T10:47:35.000Z</published>
    <updated>2018-07-29T11:18:15.292Z</updated>
    
    <content type="html"><![CDATA[<p>Vagrant是用来管理虚拟机的，如VirtualBox、VMware、AWS等，主要好处是可以提供一个可配置、可移植和复用的软件环境，可以使用shell、chef、puppet等工具部署。所以vagrant不能单独使用，如果你用它来管理自己的开发环境的话，必须在自己的电脑里安装了虚拟机软件，这里使用virtualbox。 virtualbox是免费使用，VMware使用需要购买license。使用Vagrant方便快捷的搭建kubernetes集群.</p><a id="more"></a><h3 id="安装Vagrant"><a href="#安装Vagrant" class="headerlink" title="安装Vagrant"></a>安装Vagrant</h3><ul><li>下载安装VirtualBox: <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></li><li>下载安装Vagrant:    <a href="http://downloads.vagrantup.com" target="_blank" rel="noopener">http://downloads.vagrantup.com</a></li></ul><h3 id="安装Vagrant插件"><a href="#安装Vagrant插件" class="headerlink" title="安装Vagrant插件"></a>安装Vagrant插件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin <span class="keyword">install</span> vagrant-vbguest</span><br><span class="line">vagrant <span class="keyword">plugin</span> <span class="keyword">install</span> vagrant-vbox-<span class="keyword">snapshot</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 保存快照</span></span><br><span class="line">vagrant snapshot take</span><br><span class="line">vagrant snapshot list</span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复快照</span></span><br><span class="line">vagrant snapshot go</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除快照</span></span><br><span class="line">vagrant snapshot delete</span><br></pre></td></tr></table></figure><h3 id="编写Vagrantfile"><a href="#编写Vagrantfile" class="headerlink" title="编写Vagrantfile"></a>编写Vagrantfile</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="built_in">do</span> |<span class="type">config</span>|<span class="type"></span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">  config</span>.vm.define <span class="string">"master"</span> <span class="built_in">do</span> |<span class="type">master</span>|<span class="type"></span></span><br><span class="line"><span class="type">    master</span>.vm.box = <span class="string">"geerlingguy/centos7"</span></span><br><span class="line">    master.vm.hostname = <span class="string">"master"</span></span><br><span class="line"></span><br><span class="line">    master.vm.provider <span class="string">"virtualbox"</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">"2048"</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    master.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"10.0.100.2"</span></span><br><span class="line">    master.vm.synced_folder <span class="string">"./data"</span>, <span class="string">"/share"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">"node01"</span> <span class="built_in">do</span> |<span class="type">node01</span>|<span class="type"></span></span><br><span class="line"><span class="type">    node01</span>.vm.box = <span class="string">"geerlingguy/centos7"</span></span><br><span class="line">    node01.vm.hostname = <span class="string">"node01"</span></span><br><span class="line"></span><br><span class="line">    node01.vm.provider <span class="string">"virtualbox"</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">"2048"</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    node01.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"10.0.100.3"</span></span><br><span class="line">    node01.vm.synced_folder <span class="string">"./data"</span>, <span class="string">"/share"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">"node02"</span> <span class="built_in">do</span> |<span class="type">node02</span>|<span class="type"></span></span><br><span class="line"><span class="type">    node02</span>.vm.box = <span class="string">"geerlingguy/centos7"</span></span><br><span class="line">    node02.vm.hostname = <span class="string">"node02"</span></span><br><span class="line"></span><br><span class="line">    node02.vm.provider <span class="string">"virtualbox"</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">"2048"</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    node02.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"10.0.100.4"</span></span><br><span class="line">    node02.vm.synced_folder <span class="string">"./data"</span>, <span class="string">"/share"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vagrant up</span></span><br></pre></td></tr></table></figure><h3 id="安装kubernetes"><a href="#安装kubernetes" class="headerlink" title="安装kubernetes"></a>安装kubernetes</h3><p>参考：<a href="k8s/k8s-install-on-centos7-20180609.html">here</a></p><h3 id="kubernetes-v1-11-1"><a href="#kubernetes-v1-11-1" class="headerlink" title="kubernetes v1.11.1"></a>kubernetes v1.11.1</h3><p>kubernetes更新到v1.11.1版本，dns服务使用corends替代原有dns插件。其他插件镜像也升级了，国内无法下载，可提前下载Dokcer镜像，如果你机器有科学上网请忽略这一步。我提前将Docker镜像下载到国内私有hub中。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ARCH</span>=amd64</span><br><span class="line"><span class="attribute">mversion</span>=v1.11.1</span><br><span class="line"><span class="attribute">username</span>=luoji</span><br><span class="line"><span class="attribute">password</span>=password</span><br><span class="line"><span class="attribute">repo</span>=k8s.gcr.io</span><br><span class="line"><span class="attribute">store_repo</span>=r.xiaozhou.net</span><br><span class="line"><span class="attribute">store_repo_path</span>=r.xiaozhou.net/kubernetes</span><br><span class="line"></span><br><span class="line">images=(<span class="variable">$&#123;repo&#125;</span>/kube-apiserver-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-controller-manager-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-scheduler-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-proxy-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/coredns:1.1.3 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/etcd-<span class="variable">$&#123;ARCH&#125;</span>:3.2.18 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/pause:3.1 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kubernetes-dashboard-<span class="variable">$&#123;ARCH&#125;</span>:v1.8.3 \</span><br><span class="line">    quay.io/coreos/flannel:v0.10.0-amd64 \</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">docker login -u <span class="variable">$username</span> -p <span class="variable">$password</span> <span class="variable">$store_repo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="attribute">sub</span>=<span class="variable">$&#123;url%/*&#125;</span></span><br><span class="line">    <span class="attribute">idx</span>=<span class="variable">$&#123;#sub&#125;</span></span><br><span class="line">    <span class="attribute">image</span>=<span class="variable">$&#123;url:$idx+1&#125;</span></span><br><span class="line">    echo -e <span class="string">"download -&gt; <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> -&gt; <span class="variable">$url</span>"</span></span><br><span class="line">docker pull <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">docker tag <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> <span class="variable">$url</span></span><br><span class="line">docker rmi <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset ARCH mversion images username password repo store_repo store_repo_path</span><br></pre></td></tr></table></figure><p>配置Hosts<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/hosts</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.2</span> master</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.3</span> node01</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.4</span> node02</span><br></pre></td></tr></table></figure></p><p>主节点初始化命令：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --kubernetes-version=v1<span class="number">.11</span><span class="number">.1</span> --pod-network-cidr=<span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">16</span> --apiserver-advertise-address=<span class="number">10.0</span><span class="number">.100</span><span class="number">.2</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vagrant是用来管理虚拟机的，如VirtualBox、VMware、AWS等，主要好处是可以提供一个可配置、可移植和复用的软件环境，可以使用shell、chef、puppet等工具部署。所以vagrant不能单独使用，如果你用它来管理自己的开发环境的话，必须在自己的电脑里安装了虚拟机软件，这里使用virtualbox。 virtualbox是免费使用，VMware使用需要购买license。使用Vagrant方便快捷的搭建kubernetes集群.&lt;/p&gt;
    
    </summary>
    
      <category term="k8s" scheme="http://www.jerrylou.me/categories/k8s/"/>
    
    
      <category term="kubernetes" scheme="http://www.jerrylou.me/tags/kubernetes/"/>
    
      <category term="k8s" scheme="http://www.jerrylou.me/tags/k8s/"/>
    
      <category term="kubeadm" scheme="http://www.jerrylou.me/tags/kubeadm/"/>
    
      <category term="vagrant" scheme="http://www.jerrylou.me/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>使用Let’s Encrypt为你的网站开启HTTPS</title>
    <link href="http://www.jerrylou.me/%E5%B7%A5%E5%85%B7/websit-enable-https-20180623.html"/>
    <id>http://www.jerrylou.me/工具/websit-enable-https-20180623.html</id>
    <published>2018-06-22T18:11:27.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前使用Let’s Encrypt没有记录步骤，服务器到期迁移Blog又花了1个多小时。最终决定记录下步骤，真是好记性不如烂笔头。</p><a id="more"></a><h3 id="下载Certbot"><a href="#下载Certbot" class="headerlink" title="下载Certbot"></a>下载Certbot</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/certbot/certbot</span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>生成证书前要先配置好DNS和关闭Nginx。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> certbot</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./letsencrypt-auto certonly -d www.jerrylou.me -d jerrylou.me</span></span><br></pre></td></tr></table></figure></p><p>选择standalone选择，证书生成在/etc/letsencrypt/live/www.jerrylou.me/</p><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  www.jerrylou.me blog.jerrylou.me jerrylou.me;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/www.jerrylou.me/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/www.jerrylou.me/privkey.pem;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span>         /var/www/gunsluo.github.io;</span><br><span class="line">    <span class="attribute">index</span>        index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span>  www.jerrylou.me blog.jerrylou.me jerrylou.me;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置Cron"><a href="#配置Cron" class="headerlink" title="配置Cron"></a>配置Cron</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat <span class="string">/etc/crontab</span></span><br><span class="line">0  0    1 *<span class="string">/2</span> * root    systemctl stop nginx &amp;&amp; <span class="string">/root/certbot/certbot-auto</span> renew <span class="params">--post-hook</span> <span class="string">"systemctl start nginx"</span></span><br><span class="line"></span><br><span class="line">$ <span class="string">/etc/init.d/cron</span> <span class="keyword">reload</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前使用Let’s Encrypt没有记录步骤，服务器到期迁移Blog又花了1个多小时。最终决定记录下步骤，真是好记性不如烂笔头。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://www.jerrylou.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="ssl" scheme="http://www.jerrylou.me/tags/ssl/"/>
    
      <category term="https" scheme="http://www.jerrylou.me/tags/https/"/>
    
      <category term="websit" scheme="http://www.jerrylou.me/tags/websit/"/>
    
      <category term="let&#39;s encrypt" scheme="http://www.jerrylou.me/tags/let-s-encrypt/"/>
    
  </entry>
  
  <entry>
    <title>在Centos7上安装Kubernetes</title>
    <link href="http://www.jerrylou.me/k8s/k8s-install-on-centos7-20180609.html"/>
    <id>http://www.jerrylou.me/k8s/k8s-install-on-centos7-20180609.html</id>
    <published>2018-06-09T13:28:27.000Z</published>
    <updated>2018-07-29T10:50:11.085Z</updated>
    
    <content type="html"><![CDATA[<p>使用KubeAdm官方工具在Centos7上安装kubernetes.</p><a id="more"></a><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>OS:          Centos7<br>K8s Version: v1.10.4</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>更新系统<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum update -y</span></span><br></pre></td></tr></table></figure></p><p>时区<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="string">timedatectl </span><span class="built_in">set-timezone</span> <span class="string">Asia/</span><span class="string">Shanghai</span></span><br></pre></td></tr></table></figure></p><p>配置Hosts<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/hosts</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.2</span> k8smaster</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.3</span> k8snode01</span><br><span class="line"><span class="number">10.0</span><span class="number">.100</span><span class="number">.4</span> k8snode02</span><br></pre></td></tr></table></figure></p><p>关闭防火墙<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl stop firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl status firewalld</span></span><br></pre></td></tr></table></figure></p><p>关闭内存交换分区<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> swapoff -a</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/fstab</span></span><br><span class="line"><span class="meta">#</span><span class="bash">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span></span><br></pre></td></tr></table></figure></p><p>禁用SELINUX<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 0</span><br><span class="line">$ cat /etc/selinux/config</span><br><span class="line"><span class="attribute">SELINUX</span>=disabled</span><br></pre></td></tr></table></figure></p><p>配置网络<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-ip6tables</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-iptables</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_forward</span> = <span class="number">1</span></span><br><span class="line">EOF</span><br><span class="line">$ modprobe br_netfilter</span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure></p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install -y docker</span></span><br></pre></td></tr></table></figure><p>配置cgroupdriver为cgroupfs<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">"s/native.cgroupdriver=systemd/native.cgroupdriver=cgroupfs/g"</span> /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span></span></span><br><span class="line">$ cat /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span></span></span><br><span class="line"></span><br><span class="line">$ systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line">$ docker info | grep Cgroup</span><br></pre></td></tr></table></figure></p><h3 id="安装kubeadm-kubelet-kubectl"><a href="#安装kubeadm-kubelet-kubectl" class="headerlink" title="安装kubeadm kubelet kubectl"></a>安装kubeadm kubelet kubectl</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ yum install -y kubelet kubeadm kubectl</span><br><span class="line">$ systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure><p>Note: kubelet在这里启动时不会成功的，它会定时检查重启。后面程序安装后，kubectl会启动成功。</p><h3 id="配置kubeadm的cgroup-driver为Cgroupfs"><a href="#配置kubeadm的cgroup-driver为Cgroupfs" class="headerlink" title="配置kubeadm的cgroup driver为Cgroupfs"></a>配置kubeadm的cgroup driver为Cgroupfs</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed -<span class="selector-tag">i</span> <span class="string">"s/cgroup-driver=systemd/cgroup-driver=cgroupfs --runtime-cgroups=\/systemd\/system.slice --kubelet-cgroups=\/systemd\/system.slice/g"</span> /etc/systemd/system/kubelet<span class="selector-class">.service</span><span class="selector-class">.d</span>/<span class="number">10</span>-kubeadm.conf</span><br><span class="line">$ cat /etc/systemd/system/kubelet<span class="selector-class">.service</span><span class="selector-class">.d</span>/<span class="number">10</span>-kubeadm.conf</span><br><span class="line"></span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><p>查看kubelet日志<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> journalctl -u kubelet -f</span></span><br></pre></td></tr></table></figure></p><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>提前下载Dokcer镜像，如果你机器有科学上网请忽略这一步。我提前将Docker镜像下载到国内私有hub中。下面是下载脚本<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ARCH</span>=amd64</span><br><span class="line"><span class="attribute">mversion</span>=v1.10.4</span><br><span class="line"><span class="attribute">nversion</span>=1.14.8</span><br><span class="line"><span class="attribute">username</span>=luoji</span><br><span class="line"><span class="attribute">password</span>=password</span><br><span class="line"><span class="attribute">repo</span>=k8s.gcr.io</span><br><span class="line"><span class="attribute">store_repo</span>=r.xiaozhou.net</span><br><span class="line"><span class="attribute">store_repo_path</span>=r.xiaozhou.net/kubernetes</span><br><span class="line"></span><br><span class="line">images=(<span class="variable">$&#123;repo&#125;</span>/kube-apiserver-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-controller-manager-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-scheduler-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-proxy-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/etcd-<span class="variable">$&#123;ARCH&#125;</span>:3.1.12 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/pause-<span class="variable">$&#123;ARCH&#125;</span>:3.1 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-sidecar-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-kube-dns-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-dnsmasq-nanny-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kubernetes-dashboard-<span class="variable">$&#123;ARCH&#125;</span>:v1.8.3 \</span><br><span class="line">    quay.io/coreos/flannel:v0.10.0-amd64 \</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">docker login -u <span class="variable">$username</span> -p <span class="variable">$password</span> <span class="variable">$store_repo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="attribute">sub</span>=<span class="variable">$&#123;url%/*&#125;</span></span><br><span class="line">    <span class="attribute">idx</span>=<span class="variable">$&#123;#sub&#125;</span></span><br><span class="line">    <span class="attribute">image</span>=<span class="variable">$&#123;url:$idx+1&#125;</span></span><br><span class="line">    echo -e <span class="string">"download -&gt; <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> -&gt; <span class="variable">$url</span>"</span></span><br><span class="line">docker pull <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">docker tag <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> <span class="variable">$url</span></span><br><span class="line">docker rmi <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset ARCH mversion nversion images username password repo store_repo store_repo_path</span><br></pre></td></tr></table></figure></p><p>上传脚本可以在这里找到：<a href="https://github.com/gunsluo/k8s-example/tree/master/version" target="_blank" rel="noopener">https://github.com/gunsluo/k8s-example/tree/master/version</a></p><h3 id="初始化主节点"><a href="#初始化主节点" class="headerlink" title="初始化主节点"></a>初始化主节点</h3><p>$ kubeadm init –kubernetes-version v1.10.4 –service-cidr 10.96.0.0/16 –pod-network-cidr 10.244.0.0/16 –apiserver-advertise-address 10.0.100.2<br>$ kubeadm init –config kubeadm.yaml –service-cidr 10.96.0.0/16 –pod-network-cidr 10.244.0.0/16<br>$ cat kubeadm.yaml<br>apiVersion: kubeadm.k8s.io/v1alpha1<br>kind: MasterConfiguration<br>kubernetesVersion: v1.10.4<br>api:<br>  advertiseAddress: ‘10.0.100.2’<br>etcd:<br>  extraArgs:<br>    ‘listen-peer-urls’: ‘<a href="http://127.0.0.1:2380" target="_blank" rel="noopener">http://127.0.0.1:2380</a>‘</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">$ cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">$ chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h3 id="主节点初始化网络"><a href="#主节点初始化网络" class="headerlink" title="主节点初始化网络"></a>主节点初始化网络</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/coreos/</span>flannel<span class="regexp">/v0.10.0/</span>Documentation<span class="regexp">/kube-flannel.yml</span></span><br></pre></td></tr></table></figure><p>flanneld启动参数加上–iface=<iface-name><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">command:</span><br><span class="line">-<span class="ruby"> /opt/bin/flanneld</span></span><br><span class="line"><span class="ruby"><span class="symbol">args:</span></span></span><br><span class="line"><span class="ruby">- --ip-masq</span></span><br><span class="line"><span class="ruby">- --kube-subnet-mgr</span></span><br><span class="line"><span class="ruby">- --iface=eth1</span></span><br></pre></td></tr></table></figure></iface-name></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f kube-flannel.yml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get nodes</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods --all-namespaces</span></span><br></pre></td></tr></table></figure><h3 id="加入工作节点"><a href="#加入工作节点" class="headerlink" title="加入工作节点"></a>加入工作节点</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm <span class="keyword">join</span> --token <span class="symbol">&lt;token&gt;</span> <span class="symbol">&lt;master-ip&gt;</span>:<span class="symbol">&lt;master-port&gt;</span> --discovery-token-<span class="keyword">ca</span>-cert-hash <span class="built_in">sha256</span>:<span class="symbol">&lt;hash&gt;</span></span><br></pre></td></tr></table></figure><h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>curl -O <span class="symbol">https:</span>/<span class="regexp">/raw.githubusercontent.com/kubernetes</span><span class="regexp">/dashboard/master</span><span class="regexp">/src/deploy</span><span class="regexp">/recommended/kubernetes</span>-dashboard.yaml</span><br><span class="line"><span class="variable">$ </span>kubectl create -f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>$ kubectl apply -f kubernetes-dashboard-admin.yaml<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="attribute">kind</span>: ClusterRoleBinding</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">k8s-app</span>: kubernetes-dashboard</span><br><span class="line"><span class="attribute">roleRef</span>:</span><br><span class="line">  <span class="attribute">apiGroup</span>: rbac.authorization.k8s.io</span><br><span class="line">  <span class="attribute">kind</span>: ClusterRole</span><br><span class="line">  <span class="attribute">name</span>: cluster-admin</span><br><span class="line"><span class="attribute">subjects</span>:</span><br><span class="line">- <span class="attribute">kind</span>: ServiceAccount</span><br><span class="line">  <span class="attribute">name</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">namespace</span>: kube-system</span><br></pre></td></tr></table></figure></p><p>配置代理</p><p>将Master节点的/etc/kubernetes/admin.conf拷贝到本机的$HOME/.kube目录下，然后运行<code>kubectl proxy</code>。最后在浏览器中输入：<a href="http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noopener">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a> 现在可以登录dashboard</p><p>配置远程访问dashboard，上面方法需要在本机启动代理。我们可以直接使用IP进行访问，这需要修改kubernetes-dashboard-admin.yaml配置。<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: Service</span><br><span class="line"><span class="attribute">apiVersion</span>: v1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">k8s-app</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">name</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">namespace</span>: kube-system</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">type</span>: NodePort</span><br><span class="line">  <span class="attribute">ports</span>:</span><br><span class="line">    - <span class="attribute">port</span>: <span class="number">443</span></span><br><span class="line">      <span class="attribute">targetPort</span>: <span class="number">8443</span></span><br><span class="line">      <span class="attribute">nodePort</span>: <span class="number">31000</span></span><br><span class="line">  <span class="attribute">selector</span>:</span><br><span class="line">    <span class="attribute">k8s-app</span>: kubernetes-dashboard</span><br></pre></td></tr></table></figure></p><p>指定NodePort类型和对外提供端口31000。 使用命令<code>kubectl replace -f kubernetes-dashboard.yaml --force</code>重启服务。浏览器中输入: <a href="https://ip:31000/" target="_blank" rel="noopener">https://ip:31000/</a> 即可访问。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用KubeAdm官方工具在Centos7上安装kubernetes.&lt;/p&gt;
    
    </summary>
    
      <category term="k8s" scheme="http://www.jerrylou.me/categories/k8s/"/>
    
    
      <category term="kubernetes" scheme="http://www.jerrylou.me/tags/kubernetes/"/>
    
      <category term="k8s" scheme="http://www.jerrylou.me/tags/k8s/"/>
    
      <category term="centos" scheme="http://www.jerrylou.me/tags/centos/"/>
    
      <category term="kubeadm" scheme="http://www.jerrylou.me/tags/kubeadm/"/>
    
  </entry>
  
  <entry>
    <title>使用Dnsmasq在Mac上搭建私有网络开发环境</title>
    <link href="http://www.jerrylou.me/%E5%B7%A5%E5%85%B7/dnsmasq-install-for-mac-20180605.html"/>
    <id>http://www.jerrylou.me/工具/dnsmasq-install-for-mac-20180605.html</id>
    <published>2018-06-05T13:15:30.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于经常移动办公的童鞋，网络环境也随之改变，开发过程中部署的本地环境也需要重新配置IP地址等，或者虚拟机（使用桥接方式，桥接好处在于局域网内其它电脑方便访问，虚拟机系统访问外网不需要额外配置）时系统IP改变。我在这样的环境下痛苦针扎了一段时间，决定在本机组建一个私有网络不随连接Internet网络的改变而变动。</p><blockquote><p>先说说我的想法：在电脑上模拟新的一张网卡，用此网卡组建一个网络，此网卡IP使用静态配置。如果想在同一局域网中共享该私有网络要使用dnsmasq，只是本机使用可以不使用dnsmasq。我使用的Mac电脑，由于mac不支持创建虚拟网卡，我只能使用虚拟IP来实现。</p></blockquote><a id="more"></a><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Mac: 宿主机 (通常使用wifi的网卡)<br>CentOS7 1: 虚拟机(VMware Fusion) (双网卡 桥接模式)<br>CentOS7 2: 虚拟机(VMware Fusion) (双网卡 桥接模式)<br>CentOS7 3: 虚拟机(VMware Fusion) (双网卡 桥接模式)</p><h3 id="配置宿主机网络"><a href="#配置宿主机网络" class="headerlink" title="配置宿主机网络"></a>配置宿主机网络</h3><p>由于Mac不支持创建虚拟网卡，使用虚拟IP。给en0网卡添加虚拟IP<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">ifconfig</span> <span class="selector-tag">en0</span> <span class="selector-tag">alias</span> 10<span class="selector-class">.0</span><span class="selector-class">.100</span><span class="selector-class">.1</span></span><br><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">ifconfig</span> <span class="selector-tag">en0</span> <span class="selector-tag">-alias</span> 10<span class="selector-class">.0</span><span class="selector-class">.100</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure></p><p>linux系统命令：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0:1 10.0.100.2 netmask 255.255.255.0</span><br><span class="line">ip addr del 10.0.100.2/24 dev eth0</span><br></pre></td></tr></table></figure></p><h3 id="配置虚拟机网络"><a href="#配置虚拟机网络" class="headerlink" title="配置虚拟机网络"></a>配置虚拟机网络</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/i</span>fcfg-eth0 <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/i</span>fcfg-eth1</span><br><span class="line">uuidgen eth1</span><br></pre></td></tr></table></figure><p>配置eth1网卡 <code>vi /etc/sysconfig/network-scripts/ifcfg-eth1</code> (uuid使用uuidgen命令生成)<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">PROXY_METHOD</span>=none</span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class="line"><span class="attr">NAME</span>=eth1</span><br><span class="line"><span class="attr">UUID</span>=<span class="number">123</span>a9032-c938-<span class="number">4404</span>-bc95-<span class="number">7103</span>accbdcc3</span><br><span class="line"><span class="attr">DEVICE</span>=eth1</span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">10.0</span>.<span class="number">100.2</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">10.0</span>.<span class="number">100.1</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure></p><p>其他虚拟机的IP<code>10.0.100.3</code> <code>10.0.100.4</code></p><h3 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h3><p>宿主机: <code>ping 10.0.100.2</code><br>虚拟机: <code>ping 10.0.100.1</code></p><h3 id="安装dnsmasq"><a href="#安装dnsmasq" class="headerlink" title="安装dnsmasq"></a>安装dnsmasq</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>dnsmasq</span><br></pre></td></tr></table></figure><p>配置 <code>vim /usr/local/etc/dnsmasq.conf</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strict-order</span><br><span class="line"><span class="section">listen</span>-address=<span class="number">10.0</span><span class="number">.100</span><span class="number">.1</span>,<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">conf-dir=/usr/local/etc/dnsmasq.d/,*.conf</span><br></pre></td></tr></table></figure></p><p>添加<code>/usr/local/etc/dnsmasq.d/k8s.conf</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">address=/k8s-master.lan/<span class="number">10.0</span><span class="number">.100</span><span class="number">.2</span></span><br><span class="line">address=/k8s-node1.lan/<span class="number">10.0</span><span class="number">.100</span><span class="number">.3</span></span><br><span class="line">address=/k8s-node2.lan/<span class="number">10.0</span><span class="number">.100</span><span class="number">.4</span></span><br></pre></td></tr></table></figure></p><p>启动:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sudo</span> <span class="keyword">brew </span>services start dnsmasq</span><br></pre></td></tr></table></figure></p><p>开机启动<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl start homebrew<span class="selector-class">.mxcl</span><span class="selector-class">.dnsmasq</span></span><br></pre></td></tr></table></figure></p><p>清除DNS缓存<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo killall -HUP mDNSResponder</span></span><br></pre></td></tr></table></figure></p><p>如果使用该dns服务，修改dns<br>vi /etc/rsyslog.conf<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nameserver</span> 10<span class="selector-class">.0</span><span class="selector-class">.100</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure></p><p>测试<br>宿主机中修改/etc/rsyslog.conf<br><code>ping k8s-master.lan</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于经常移动办公的童鞋，网络环境也随之改变，开发过程中部署的本地环境也需要重新配置IP地址等，或者虚拟机（使用桥接方式，桥接好处在于局域网内其它电脑方便访问，虚拟机系统访问外网不需要额外配置）时系统IP改变。我在这样的环境下痛苦针扎了一段时间，决定在本机组建一个私有网络不随连接Internet网络的改变而变动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先说说我的想法：在电脑上模拟新的一张网卡，用此网卡组建一个网络，此网卡IP使用静态配置。如果想在同一局域网中共享该私有网络要使用dnsmasq，只是本机使用可以不使用dnsmasq。我使用的Mac电脑，由于mac不支持创建虚拟网卡，我只能使用虚拟IP来实现。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工具" scheme="http://www.jerrylou.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac" scheme="http://www.jerrylou.me/tags/mac/"/>
    
      <category term="dns" scheme="http://www.jerrylou.me/tags/dns/"/>
    
      <category term="dnsmasq" scheme="http://www.jerrylou.me/tags/dnsmasq/"/>
    
  </entry>
  
  <entry>
    <title>Jitsi开源Web视频会议-安全认证</title>
    <link href="http://www.jerrylou.me/video/jitsi-auth-20180507.html"/>
    <id>http://www.jerrylou.me/video/jitsi-auth-20180507.html</id>
    <published>2018-05-07T03:47:35.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jerrylou.me/video/jitsi-install-20180426.html">Jitsi安装教程</a>、之前安装Jitsi后所有人都能访问，当实际情况是需要认证后才能访问。通过配置jitsi提供了认证方式。</p><a id="more"></a><h3 id="Prosody认证配置"><a href="#Prosody认证配置" class="headerlink" title="Prosody认证配置"></a>Prosody认证配置</h3><p>配置<code>/etc/prosody/conf.d/meet.demo.com.cfg.lua</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-- Plugins path gets uncommented during jitsi-meet-tokens package install - that<span class="string">'s where token plugin is located</span></span><br><span class="line"><span class="string">--plugin_paths = &#123; "/usr/share/jitsi-meet/prosody-plugins/" &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost "meet.demo.com"</span></span><br><span class="line"><span class="string">    authentication = "internal_plain"</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = "/var/lib/prosody/meet.demo.com.key";</span></span><br><span class="line"><span class="string">        certificate = "/var/lib/prosody/meet.demo.com.crt";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    modules_enabled = &#123;</span></span><br><span class="line"><span class="string">        "bosh";</span></span><br><span class="line"><span class="string">        "pubsub";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost "guest.meet.demo.com"</span></span><br><span class="line"><span class="string">    authentication = "anonymous"</span></span><br><span class="line"><span class="string">    c2s_require_encryption = false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">admins = &#123; "focus@auth.meet.demo.com" &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component "conference.meet.demo.com" "muc"</span></span><br><span class="line"><span class="string">Component "jitsi-videobridge.meet.demo.com"</span></span><br><span class="line"><span class="string">    component_secret = "password1"</span></span><br><span class="line"><span class="string">Component "focus.meet.demo.com"</span></span><br><span class="line"><span class="string">    component_secret = "password2"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component "callcontrol.meet.demo.com"</span></span><br><span class="line"><span class="string">    component_secret = "password4"</span></span><br></pre></td></tr></table></figure></p><h3 id="Nginx认证配置"><a href="#Nginx认证配置" class="headerlink" title="Nginx认证配置"></a>Nginx认证配置</h3><p>配置<code>/etc/nginx/sites-enabled/meet.demo.com</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line"></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_ciphers <span class="string">"EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED"</span>;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /var/lib/prosody/meet.demo.com.crt;</span><br><span class="line">    ssl_certificate_key /var/lib/prosody/meet.demo.com.key;</span><br><span class="line"></span><br><span class="line">    root /var/www/jitsi-meet;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    <span class="comment"># error_page 404 /static/404.html;</span></span><br><span class="line"></span><br><span class="line">    location ~ ^/([a-zA-Z0-9=\?]+)$ &#123;</span><br><span class="line">        rewrite ^/(.*)$ / <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        ssi on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BOSH</span></span><br><span class="line">    location /http-bind &#123;</span><br><span class="line">        proxy_pass      http://localhost:5280/http-bind;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="videobridge认证配置"><a href="#videobridge认证配置" class="headerlink" title="videobridge认证配置"></a>videobridge认证配置</h3><p>参数start.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=videobridge -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/videobridge -Djava.util.logging.config.file=/etc/jitsi/videobridge/logging.properties -Dlog4j.configurationFile=/etc/jitsi/videobridge/log4j2.xml"</span></span><br><span class="line"></span><br><span class="line">./jvb.sh --host=localhost --domain=meet.demo.com --port=5347 --secret=password1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure></p><h3 id="Jicofo认证配置"><a href="#Jicofo认证配置" class="headerlink" title="Jicofo认证配置"></a>Jicofo认证配置</h3><p>参数start.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mvn package -DskipTests -Dassembly.skipAssembly=false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=jicofo -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/jicofo -Djava.util.logging.config.file=/etc/jitsi/jicofo/logging.properties -Dlog4j.configurationFile=/etc/jitsi/jicofo/log4j2.xml -Dorg.jitsi.jicofo.ALWAYS_TRUST_MODE_ENABLED=true"</span></span><br><span class="line"></span><br><span class="line">./jicofo-linux-x64-1.1-SNAPSHOT/jicofo.sh --host=localhost --domain=meet.demo.com --secret=password2 --user_domain=auth.meet.demo.com --user_name=focus --user_password=password3 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure></p><h3 id="Jitsi-meet认证配置"><a href="#Jitsi-meet认证配置" class="headerlink" title="Jitsi-meet认证配置"></a>Jitsi-meet认证配置</h3><p>config.js配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br></pre></td><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    // Configuration</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Alternative location <span class="keyword">for</span> the configuration.</span><br><span class="line">    // configLocation: <span class="string">'./config.json'</span>,</span><br><span class="line"></span><br><span class="line">    // Custom <span class="keyword">function</span> <span class="built_in">which</span> given the URL path should <span class="built_in">return</span> a room name.</span><br><span class="line">    // getroomnode: <span class="keyword">function</span> (path) &#123; <span class="built_in">return</span> <span class="string">'someprefixpossiblybasedonpath'</span>; &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Connection</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    hosts: &#123;</span><br><span class="line">        // XMPP domain.</span><br><span class="line">        domain: <span class="string">'meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line">        // XMPP MUC domain. FIXME: use XEP-0030 to discover it.</span><br><span class="line">        muc: <span class="string">'conference.meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line">        // When using authentication, domain <span class="keyword">for</span> guest users.</span><br><span class="line">        // anonymousdomain: <span class="string">'guest.example.com'</span>,</span><br><span class="line"></span><br><span class="line">        // Domain <span class="keyword">for</span> authenticated users. Defaults to &lt;domain&gt;.</span><br><span class="line">        // authdomain: <span class="string">'meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line">        // Jirecon recording component domain.</span><br><span class="line">        // jirecon: <span class="string">'jirecon.meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line">        // Call control component (Jigasi).</span><br><span class="line">        call_control: <span class="string">'callcontrol.meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line">        // Focus component domain. Defaults to focus.&lt;domain&gt;.</span><br><span class="line">        focus: <span class="string">'focus.meet.demo.com'</span>,</span><br><span class="line">        bridge: <span class="string">'jitsi-videobridge.meet.demo.com'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // BOSH URL. FIXME: use XEP-0156 to discover it.</span><br><span class="line">    bosh: <span class="string">'//meet.demo.com/http-bind'</span>,</span><br><span class="line"></span><br><span class="line">    // The name of client node advertised <span class="keyword">in</span> XEP-0115 <span class="string">'c'</span> stanza</span><br><span class="line">    clientNode: <span class="string">'http://jitsi.org/jitsimeet'</span>,</span><br><span class="line"></span><br><span class="line">    // The real JID of focus participant - can be overridden here</span><br><span class="line">    // focusUserJid: <span class="string">'focus@auth.meet.demo.com'</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Testing / experimental features.</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    testing: &#123;</span><br><span class="line">        // Enables experimental simulcast support on Firefox.</span><br><span class="line">        enableFirefoxSimulcast: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">        // P2P <span class="built_in">test</span> mode disables automatic switching to P2P when there are 2</span><br><span class="line">        // participants <span class="keyword">in</span> the conference.</span><br><span class="line">        p2pTestMode: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        // Enables the <span class="built_in">test</span> specific features consumed by jitsi-meet-torture</span><br><span class="line">        // testMode: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // Disables ICE/UDP by filtering out <span class="built_in">local</span> and remote UDP candidates <span class="keyword">in</span></span><br><span class="line">    // signalling.</span><br><span class="line">    // webrtcIceUdpDisable: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Disables ICE/TCP by filtering out <span class="built_in">local</span> and remote TCP candidates <span class="keyword">in</span></span><br><span class="line">    // signalling.</span><br><span class="line">    // webrtcIceTcpDisable: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Media</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Audio</span><br><span class="line"></span><br><span class="line">    // Disable measuring of audio levels.</span><br><span class="line">    // disableAudioLevels: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Start the conference <span class="keyword">in</span> audio only mode (no video is being received nor</span><br><span class="line">    // sent).</span><br><span class="line">    // startAudioOnly: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Every participant after the Nth will start audio muted.</span><br><span class="line">    // startAudioMuted: 10,</span><br><span class="line"></span><br><span class="line">    // Start calls with audio muted. Unlike the option above, this one is only</span><br><span class="line">    // applied locally. FIXME: having these 2 options is confusing.</span><br><span class="line">    // startWithAudioMuted: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Video</span><br><span class="line"></span><br><span class="line">    // Sets the preferred resolution (height) <span class="keyword">for</span> <span class="built_in">local</span> video. Defaults to 720.</span><br><span class="line">    // resolution: 720,</span><br><span class="line"></span><br><span class="line">    // w3c spec-compliant video constraints to use <span class="keyword">for</span> video capture. Currently</span><br><span class="line">    // used by browsers that <span class="built_in">return</span> <span class="literal">true</span> from lib-jitsi-meet<span class="string">'s</span></span><br><span class="line"><span class="string">    // util#browser#usesNewGumFlow. The constraints are independency from</span></span><br><span class="line"><span class="string">    // this config'</span>s resolution value. Defaults to requesting an ideal aspect</span><br><span class="line">    // ratio of 16:9 with an ideal resolution of 1080p.</span><br><span class="line">    // constraints: &#123;</span><br><span class="line">    //     video: &#123;</span><br><span class="line">    //         aspectRatio: 16 / 9,</span><br><span class="line">    //         height: &#123;</span><br><span class="line">    //             ideal: 1080,</span><br><span class="line">    //             max: 1080,</span><br><span class="line">    //             min: 240</span><br><span class="line">    //         &#125;</span><br><span class="line">    //     &#125;</span><br><span class="line">    // &#125;,</span><br><span class="line"></span><br><span class="line">    // Enable / <span class="built_in">disable</span> simulcast support.</span><br><span class="line">    // disableSimulcast: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Suspend sending video <span class="keyword">if</span> bandwidth estimation is too low. This may cause</span><br><span class="line">    // problems with audio playback. Disabled until these are fixed.</span><br><span class="line">    disableSuspendVideo: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    // Every participant after the Nth will start video muted.</span><br><span class="line">    // startVideoMuted: 10,</span><br><span class="line"></span><br><span class="line">    // Start calls with video muted. Unlike the option above, this one is only</span><br><span class="line">    // applied locally. FIXME: having these 2 options is confusing.</span><br><span class="line">    // startWithVideoMuted: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // If <span class="built_in">set</span> to <span class="literal">true</span>, prefer to use the H.264 video codec (<span class="keyword">if</span> supported).</span><br><span class="line">    // Note that it<span class="string">'s not recommended to do this because simulcast is not</span></span><br><span class="line"><span class="string">    // supported when  using H.264. For 1-to-1 calls this setting is enabled by</span></span><br><span class="line"><span class="string">    // default and can be toggled in the p2p section.</span></span><br><span class="line"><span class="string">    // preferH264: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // If set to true, disable H.264 video codec by stripping it out of the</span></span><br><span class="line"><span class="string">    // SDP.</span></span><br><span class="line"><span class="string">    // disableH264: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Desktop sharing</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enable / disable desktop sharing</span></span><br><span class="line"><span class="string">    // disableDesktopSharing: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The ID of the jidesha extension for Chrome.</span></span><br><span class="line"><span class="string">    desktopSharingChromeExtId: null,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether desktop sharing should be disabled on Chrome.</span></span><br><span class="line"><span class="string">    desktopSharingChromeDisabled: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The media sources to use when using screen sharing with the Chrome</span></span><br><span class="line"><span class="string">    // extension.</span></span><br><span class="line"><span class="string">    desktopSharingChromeSources: [ '</span>screen<span class="string">', '</span>window<span class="string">', '</span>tab<span class="string">' ],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Required version of Chrome extension</span></span><br><span class="line"><span class="string">    desktopSharingChromeMinExtVersion: '</span>0.1<span class="string">',</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether desktop sharing should be disabled on Firefox.</span></span><br><span class="line"><span class="string">    desktopSharingFirefoxDisabled: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Optional desktop sharing frame rate options. Default value: min:5, max:5.</span></span><br><span class="line"><span class="string">    // desktopSharingFrameRate: &#123;</span></span><br><span class="line"><span class="string">    //     min: 5,</span></span><br><span class="line"><span class="string">    //     max: 5</span></span><br><span class="line"><span class="string">    // &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Try to start calls with screen-sharing instead of camera video.</span></span><br><span class="line"><span class="string">    // startScreenSharing: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Recording</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether to enable recording or not.</span></span><br><span class="line"><span class="string">    // enableRecording: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Type for recording: one of jibri or jirecon.</span></span><br><span class="line"><span class="string">    // recordingType: '</span>jibri<span class="string">',</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Misc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Default value for the channel "last N" attribute. -1 for unlimited.</span></span><br><span class="line"><span class="string">    channelLastN: -1,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables RTX (RFC 4588) (defaults to false).</span></span><br><span class="line"><span class="string">    // disableRtx: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables TCC (the default is in Jicofo and set to true)</span></span><br><span class="line"><span class="string">    // (draft-holmer-rmcat-transport-wide-cc-extensions-01). This setting</span></span><br><span class="line"><span class="string">    // affects congestion control, it practically enables send-side bandwidth</span></span><br><span class="line"><span class="string">    // estimations.</span></span><br><span class="line"><span class="string">    // enableTcc: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables REMB (the default is in Jicofo and set to false)</span></span><br><span class="line"><span class="string">    // (draft-alvestrand-rmcat-remb-03). This setting affects congestion</span></span><br><span class="line"><span class="string">    // control, it practically enables recv-side bandwidth estimations. When</span></span><br><span class="line"><span class="string">    // both TCC and REMB are enabled, TCC takes precedence. When both are</span></span><br><span class="line"><span class="string">    // disabled, then bandwidth estimations are disabled.</span></span><br><span class="line"><span class="string">    // enableRemb: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Defines the minimum number of participants to start a call (the default</span></span><br><span class="line"><span class="string">    // is set in Jicofo and set to 2).</span></span><br><span class="line"><span class="string">    // minParticipants: 2,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Use XEP-0215 to fetch STUN and TURN servers.</span></span><br><span class="line"><span class="string">    // useStunTurn: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enable IPv6 support.</span></span><br><span class="line"><span class="string">    // useIPv6: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enables / disables a data communication channel with the Videobridge.</span></span><br><span class="line"><span class="string">    // Values can be '</span>datachannel<span class="string">', '</span>websocket<span class="string">', true (treat it as</span></span><br><span class="line"><span class="string">    // '</span>datachannel<span class="string">'), undefined (treat it as '</span>datachannel<span class="string">') and false (don'</span>t</span><br><span class="line">    // open any channel).</span><br><span class="line">    // openBridgeChannel: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // UI</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Use display name as XMPP nickname.</span><br><span class="line">    useNicks: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Require users to always specify a display name.</span><br><span class="line">    // requireDisplayName: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    // Whether to use a welcome page or not. In <span class="keyword">case</span> it<span class="string">'s false a random room</span></span><br><span class="line"><span class="string">    // will be joined when no room is specified.</span></span><br><span class="line"><span class="string">    enableWelcomePage: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enabling the close page will ignore the welcome page redirection when</span></span><br><span class="line"><span class="string">    // a call is hangup.</span></span><br><span class="line"><span class="string">    // enableClosePage: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disable hiding of remote thumbnails when in a 1-on-1 conference call.</span></span><br><span class="line"><span class="string">    // disable1On1Mode: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The minimum value a video'</span>s height (or width, whichever is smaller) needs</span><br><span class="line">    // to be <span class="keyword">in</span> order to be considered high-definition.</span><br><span class="line">    minHDHeight: 540,</span><br><span class="line"></span><br><span class="line">    // Default language <span class="keyword">for</span> the user interface.</span><br><span class="line">    // defaultLanguage: <span class="string">'en'</span>,</span><br><span class="line"></span><br><span class="line">    // If <span class="literal">true</span> all users without a token will be considered guests and all users</span><br><span class="line">    // with token will be considered non-guests. Only guests will be allowed to</span><br><span class="line">    // edit their profile.</span><br><span class="line">    enableUserRolesBasedOnToken: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Message to show the users. Example: <span class="string">'The service will be down for</span></span><br><span class="line"><span class="string">    // maintenance at 01:00 AM GMT,</span></span><br><span class="line"><span class="string">    // noticeMessage: '</span><span class="string">',</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Stats</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether to enable stats collection or not in the TraceablePeerConnection.</span></span><br><span class="line"><span class="string">    // This can be useful for debugging purposes (post-processing/analysis of</span></span><br><span class="line"><span class="string">    // the webrtc stats) as it is done in the jitsi-meet-torture bandwidth</span></span><br><span class="line"><span class="string">    // estimation tests.</span></span><br><span class="line"><span class="string">    // gatherStats: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // To enable sending statistics to callstats.io you must provide the</span></span><br><span class="line"><span class="string">    // Application ID and Secret.</span></span><br><span class="line"><span class="string">    // callStatsID: '</span><span class="string">',</span></span><br><span class="line"><span class="string">    // callStatsSecret: '</span><span class="string">',</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // enables callstatsUsername to be reported as statsId and used</span></span><br><span class="line"><span class="string">    // by callstats as repoted remote id</span></span><br><span class="line"><span class="string">    // enableStatsID: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // enables sending participants display name to callstats</span></span><br><span class="line"><span class="string">    // enableDisplayNameInStats: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Privacy</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // If third party requests are disabled, no other server will be contacted.</span></span><br><span class="line"><span class="string">    // This means avatars will be locally generated and callstats integration</span></span><br><span class="line"><span class="string">    // will not function.</span></span><br><span class="line"><span class="string">    // disableThirdPartyRequests: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Peer-To-Peer mode: used (if enabled) when there are just 2 participants.</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    p2p: &#123;</span></span><br><span class="line"><span class="string">        // Enables peer to peer mode. When enabled the system will try to</span></span><br><span class="line"><span class="string">        // establish a direct connection when there are exactly 2 participants</span></span><br><span class="line"><span class="string">        // in the room. If that succeeds the conference will stop sending data</span></span><br><span class="line"><span class="string">        // through the JVB and use the peer to peer connection instead. When a</span></span><br><span class="line"><span class="string">        // 3rd participant joins the conference will be moved back to the JVB</span></span><br><span class="line"><span class="string">        // connection.</span></span><br><span class="line"><span class="string">        enabled: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Use XEP-0215 to fetch STUN and TURN servers.</span></span><br><span class="line"><span class="string">        // useStunTurn: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // The STUN servers that will be used in the peer to peer connections</span></span><br><span class="line"><span class="string">        stunServers: [</span></span><br><span class="line"><span class="string">            &#123; urls: '</span>stun:stun.l.google.com:19302<span class="string">' &#125;,</span></span><br><span class="line"><span class="string">            &#123; urls: '</span>stun:stun1.l.google.com:19302<span class="string">' &#125;,</span></span><br><span class="line"><span class="string">            &#123; urls: '</span>stun:stun2.l.google.com:19302<span class="string">' &#125;</span></span><br><span class="line"><span class="string">        ],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Sets the ICE transport policy for the p2p connection. At the time</span></span><br><span class="line"><span class="string">        // of this writing the list of possible values are '</span>all<span class="string">' and '</span>relay<span class="string">',</span></span><br><span class="line"><span class="string">        // but that is subject to change in the future. The enum is defined in</span></span><br><span class="line"><span class="string">        // the WebRTC standard:</span></span><br><span class="line"><span class="string">        // https://www.w3.org/TR/webrtc/#rtcicetransportpolicy-enum.</span></span><br><span class="line"><span class="string">        // If not set, the effective value is '</span>all<span class="string">'.</span></span><br><span class="line"><span class="string">        // iceTransportPolicy: '</span>all<span class="string">',</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // If set to true, it will prefer to use H.264 for P2P calls (if H.264</span></span><br><span class="line"><span class="string">        // is supported).</span></span><br><span class="line"><span class="string">        preferH264: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // If set to true, disable H.264 video codec by stripping it out of the</span></span><br><span class="line"><span class="string">        // SDP.</span></span><br><span class="line"><span class="string">        // disableH264: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // How long we'</span>re going to <span class="built_in">wait</span>, before going back to P2P after the 3rd</span><br><span class="line">        // participant has left the conference (to filter out page reload).</span><br><span class="line">        // backToP2PDelay: 5</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // A list of scripts to load as lib-jitsi-meet <span class="string">"analytics handlers"</span>.</span><br><span class="line">    // analyticsScriptUrls: [</span><br><span class="line">    //      <span class="string">"libs/analytics-ga.js"</span>, // google-analytics</span><br><span class="line">    //      <span class="string">"https://example.com/my-custom-analytics.js"</span></span><br><span class="line">    // ],</span><br><span class="line"></span><br><span class="line">    // The Google Analytics Tracking ID</span><br><span class="line">    // googleAnalyticsTrackingId = <span class="string">'your-tracking-id-here-UA-123456-1'</span>,</span><br><span class="line"></span><br><span class="line">    // Information about the jitsi-meet instance we are connecting to, including</span><br><span class="line">    // the user region as seen by the server.</span><br><span class="line">    deploymentInfo: &#123;</span><br><span class="line">        // shard: <span class="string">"shard1"</span>,</span><br><span class="line">        // region: <span class="string">"europe"</span>,</span><br><span class="line">        // userRegion: <span class="string">"asia"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // List of undocumented settings used <span class="keyword">in</span> jitsi-meet</span><br><span class="line">    /**</span><br><span class="line">     alwaysVisibleToolbar</span><br><span class="line">     autoRecord</span><br><span class="line">     autoRecordToken</span><br><span class="line">     debug</span><br><span class="line">     debugAudioLevels</span><br><span class="line">     deploymentInfo</span><br><span class="line">     dialInConfCodeUrl</span><br><span class="line">     dialInNumbersUrl</span><br><span class="line">     dialOutAuthUrl</span><br><span class="line">     dialOutCodesUrl</span><br><span class="line">     disableRemoteControl</span><br><span class="line">     displayJids</span><br><span class="line">     enableLocalVideoFlip</span><br><span class="line">     etherpad_base</span><br><span class="line">     externalConnectUrl</span><br><span class="line">     firefox_fake_device</span><br><span class="line">     googleApiApplicationClientID</span><br><span class="line">     iAmRecorder</span><br><span class="line">     iAmSipGateway</span><br><span class="line">     peopleSearchQueryTypes</span><br><span class="line">     peopleSearchUrl</span><br><span class="line">     requireDisplayName</span><br><span class="line">     tokenAuthUrl</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    // List of undocumented settings used <span class="keyword">in</span> lib-jitsi-meet</span><br><span class="line">    /**</span><br><span class="line">     _peerConnStatusOutOfLastNTimeout</span><br><span class="line">     _peerConnStatusRtcMuteTimeout</span><br><span class="line">     abTesting</span><br><span class="line">     avgRtpStatsN</span><br><span class="line">     callStatsConfIDNamespace</span><br><span class="line">     callStatsCustomScriptUrl</span><br><span class="line">     desktopSharingSources</span><br><span class="line">     disableAEC</span><br><span class="line">     disableAGC</span><br><span class="line">     disableAP</span><br><span class="line">     disableHPF</span><br><span class="line">     disableNS</span><br><span class="line">     enableLipSync</span><br><span class="line">     enableTalkWhileMuted</span><br><span class="line">     forceJVB121Ratio</span><br><span class="line">     hiddenDomain</span><br><span class="line">     ignoreStartMuted</span><br><span class="line">     nick</span><br><span class="line">     startBitrate</span><br><span class="line">     */</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>修改配置后，重启服务。</p><p>浏览器中输入：<a href="https://meet.demo.com/" target="_blank" rel="noopener">https://meet.demo.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.jerrylou.me/video/jitsi-install-20180426.html&quot;&gt;Jitsi安装教程&lt;/a&gt;、之前安装Jitsi后所有人都能访问，当实际情况是需要认证后才能访问。通过配置jitsi提供了认证方式。&lt;/p&gt;
    
    </summary>
    
      <category term="video" scheme="http://www.jerrylou.me/categories/video/"/>
    
    
      <category term="linux" scheme="http://www.jerrylou.me/tags/linux/"/>
    
      <category term="jitsi" scheme="http://www.jerrylou.me/tags/jitsi/"/>
    
      <category term="meet" scheme="http://www.jerrylou.me/tags/meet/"/>
    
      <category term="video" scheme="http://www.jerrylou.me/tags/video/"/>
    
      <category term="conferences" scheme="http://www.jerrylou.me/tags/conferences/"/>
    
      <category term="web" scheme="http://www.jerrylou.me/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Jitsi开源Web视频会议-安装篇</title>
    <link href="http://www.jerrylou.me/video/jitsi-install-20180426.html"/>
    <id>http://www.jerrylou.me/video/jitsi-install-20180426.html</id>
    <published>2018-04-26T12:57:00.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>Jitsi是安全、简单和可伸缩的视频会议，您可以作为一个独立的应用程序或嵌入到您的web应用程序中。它是基于Prosody之上实现的，按照官方文档安装会出现一些问题，经过一些实验成功安装，并记录下安装步骤。</p><a id="more"></a><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul><li>Env: ubuntu 18.04</li><li>User: root</li></ul><h3 id="安装Prosody"><a href="#安装Prosody" class="headerlink" title="安装Prosody"></a>安装Prosody</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb http://packages.prosody.im/debian $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list</span><br><span class="line">wget https://prosody.im/files/prosody-debian-packages.key -O- | sudo apt-key add -</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install prosody</span><br></pre></td></tr></table></figure><p>配置<code>/etc/prosody/conf.d/meet.demo.com.cfg.lua</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- Plugins path gets uncommented during jitsi-meet-tokens package install - that<span class="string">'s where token plugin is located</span></span><br><span class="line"><span class="string">--plugin_paths = &#123; "/usr/share/jitsi-meet/prosody-plugins/" &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost "meet.demo.com"</span></span><br><span class="line"><span class="string">    authentication = "anonymous"</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = "/var/lib/prosody/meet.demo.com.key";</span></span><br><span class="line"><span class="string">        certificate = "/var/lib/prosody/meet.demo.com.crt";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    modules_enabled = &#123;</span></span><br><span class="line"><span class="string">        "bosh";</span></span><br><span class="line"><span class="string">        "pubsub";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    c2s_require_encryption = false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost "auth.meet.demo.com"</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = "/var/lib/prosody/auth.meet.demo.com.key";</span></span><br><span class="line"><span class="string">        certificate = "/var/lib/prosody/auth.meet.demo.com.crt";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    authentication = "internal_plain"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">admins = &#123; "focus@auth.meet.demo.com" &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component "conference.meet.demo.com" "muc"</span></span><br><span class="line"><span class="string">Component "jitsi-videobridge.meet.demo.com"</span></span><br><span class="line"><span class="string">    component_secret = "password1"</span></span><br><span class="line"><span class="string">Component "focus.meet.demo.com"</span></span><br><span class="line"><span class="string">    component_secret = "password2"</span></span><br></pre></td></tr></table></figure><p>证书生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl cert generate meet.demo.com</span><br><span class="line">prosodyctl cert generate auth.meet.demo.com</span><br><span class="line">output: /var/lib/prosody/</span><br><span class="line"></span><br><span class="line">ln -sf /var/lib/prosody/auth.meet.demo.com.crt /usr/<span class="built_in">local</span>/share/ca-certificates/auth.meet.demo.com.crt</span><br><span class="line">update-ca-certificates -f</span><br></pre></td></tr></table></figure><p>注册用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl register focus auth.meet.demo.com password3</span><br></pre></td></tr></table></figure><p>重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl restart</span><br></pre></td></tr></table></figure></p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>配置<code>/etc/nginx/sites-enabled/meet.demo.com</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line"></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_ciphers <span class="string">"EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED"</span>;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /var/lib/prosody/meet.demo.com.crt;</span><br><span class="line">    ssl_certificate_key /var/lib/prosody/meet.demo.com.key;</span><br><span class="line"></span><br><span class="line">    root /var/www/jitsi-meet;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    <span class="comment"># error_page 404 /static/404.html;</span></span><br><span class="line"></span><br><span class="line">    location ~ ^/([a-zA-Z0-9=\?]+)$ &#123;</span><br><span class="line">        rewrite ^/(.*)$ / <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        ssi on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BOSH</span></span><br><span class="line">    location /http-bind &#123;</span><br><span class="line">        proxy_pass      http://localhost:5280/http-bind;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Videobridge"><a href="#安装Jitsi-Videobridge" class="headerlink" title="安装Jitsi Videobridge"></a>安装Jitsi Videobridge</h3><p>下载jdk1.8(jdk-8u171-linux-x64.tar.gz)，<strong>不能使用openjdk和default-jre</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/share/jdk</span><br><span class="line"><span class="built_in">cd</span> /usr/share/jdk</span><br><span class="line">tar zxvf jdk-8u171-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/jdk/jdk1.8.0_171</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>下载Jitsi Videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/jitsi</span><br><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">wget https://download.jitsi.org/jitsi-videobridge/linux/jitsi-videobridge-linux-x64-1055.zip</span><br><span class="line">unzip jitsi-videobridge-linux-x64-1055.zip</span><br><span class="line">mv jitsi-videobridge-linux-x64-1055 videobridge</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> videobridge</span><br></pre></td></tr></table></figure><p>配置Jitsi Videobridge</p><p>添加启动脚本<code>start.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=videobridge -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/videobridge -Djava.util.logging.config.file=/etc/jitsi/videobridge/logging.properties -Dlog4j.configurationFile=/etc/jitsi/videobridge/log4j2.xml"</span></span><br><span class="line"></span><br><span class="line">./jvb.sh --host=localhost --domain=meet.demo.com --port=5347 --secret=password1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br><span class="line"></span><br><span class="line">chmod +x start.sh</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/jitsi/videobridge</span><br><span class="line"><span class="built_in">cd</span> /etc/jitsi/videobridge</span><br></pre></td></tr></table></figure><p>添加logging.properties 到 /etc/jitsi/videobridge<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">handlers= java.util.logging.FileHandler</span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler, com.agafua.syslog.SyslogHandler</span></span><br><span class="line"></span><br><span class="line">java.util.logging.ConsoleHandler.level = ALL</span><br><span class="line">java.util.logging.ConsoleHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line"></span><br><span class="line">net.java.sip.communicator.util.ScLogFormatter.programname=JVB</span><br><span class="line"></span><br><span class="line">.level=INFO</span><br><span class="line"></span><br><span class="line">org.jitsi.videobridge.xmpp.ComponentImpl.level=FINE</span><br><span class="line"></span><br><span class="line"><span class="comment"># All of the INFO level logs from MediaStreamImpl are unnecessary in the context of jitsi-videobridge.</span></span><br><span class="line">org.jitsi.impl.neomedia.MediaStreamImpl.level=WARNING</span><br><span class="line"></span><br><span class="line"><span class="comment"># Syslog(uncomment handler to use)</span></span><br><span class="line">com.agafua.syslog.SyslogHandler.transport = udp</span><br><span class="line">com.agafua.syslog.SyslogHandler.facility = local0</span><br><span class="line">com.agafua.syslog.SyslogHandler.port = 514</span><br><span class="line">com.agafua.syslog.SyslogHandler.hostname = localhost</span><br><span class="line">com.agafua.syslog.SyslogHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line">com.agafua.syslog.SyslogHandler.escapeNewlines = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to disable double timestamps in syslog uncomment next line</span></span><br><span class="line"><span class="comment">#net.java.sip.communicator.util.ScLogFormatter.disableTimestamp=true</span></span><br><span class="line"></span><br><span class="line">java.util.logging.FileHandler.level = ALL</span><br><span class="line">java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter</span><br><span class="line">java.util.logging.FileHandler.limit=1024000</span><br><span class="line">java.util.logging.FileHandler.count=10</span><br><span class="line">java.util.logging.FileHandler.pattern=/var/<span class="built_in">log</span>/jitsi/videobridge/jvb%u.log</span><br><span class="line">java.util.logging.FileHandler.append=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>添加 log4j2.xml 到 /etc/jitsi/videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;Configuration&gt;</span><br><span class="line">    &lt;Properties&gt;</span><br><span class="line">        &lt;Property name=<span class="string">"log-path"</span>&gt;/var/<span class="built_in">log</span>/jitsi/videobridge&lt;/Property&gt;</span><br><span class="line">&lt;/Properties&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;RollingFile name=<span class="string">"RollingFile"</span> fileName=<span class="string">"<span class="variable">$&#123;log-path&#125;</span>/cs.log"</span></span><br><span class="line">                 filePattern=<span class="string">"<span class="variable">$&#123;log-path&#125;</span>/$<span class="variable">$&#123;date:yyyy-MM&#125;</span>/cs-%d&#123;MM-dd-yyyy&#125;-%i.log.gz"</span>&gt;</span><br><span class="line">&lt;PatternLayout pattern=<span class="string">"%d %-5p (%F:%L) - %m%n"</span>/&gt;</span><br><span class="line">      &lt;Policies&gt;</span><br><span class="line">        &lt;TimeBasedTriggeringPolicy /&gt;</span><br><span class="line">        &lt;SizeBasedTriggeringPolicy size=<span class="string">"250 MB"</span>/&gt;</span><br><span class="line">      &lt;/Policies&gt;</span><br><span class="line">    &lt;/RollingFile&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;Console name=<span class="string">"STDOUT"</span> target=<span class="string">"SYSTEM_OUT"</span>&gt;</span><br><span class="line">      &lt;PatternLayout pattern=<span class="string">"%d %-5p (%F:%L) - %m%n"</span>/&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">    &lt;!--&lt;Logger name=<span class="string">"org.apache.log4j.xml"</span> level=<span class="string">"debug"</span>/&gt;--&gt;</span><br><span class="line">    &lt;Logger name=<span class="string">"org.apache.log4j.xml"</span> level=<span class="string">"info"</span>/&gt;</span><br><span class="line">        &lt;Root level=<span class="string">"info"</span>&gt;</span><br><span class="line">            &lt;AppenderRef ref=<span class="string">"RollingFile"</span>/&gt;</span><br><span class="line">           &lt;!--  &lt;AppenderRef ref=<span class="string">"STDOUT"</span>/&gt;  --&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>添加 sip-communicator.properties 到 /etc/jitsi/videobridge<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.jitsi.impl.neomedia.transform.srtp.SRTPCryptoContext.checkReplay=<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/<span class="built_in">log</span>/jitsi/videobridge</span><br><span class="line"><span class="built_in">cd</span> /root/jitsi/videobridge</span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Jicofo"><a href="#安装Jitsi-Jicofo" class="headerlink" title="安装Jitsi Jicofo"></a>安装Jitsi Jicofo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install  maven</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jitsi/jicofo.git</span><br><span class="line"><span class="built_in">cd</span> jicofo</span><br><span class="line">mvn package -DskipTests -Dassembly.skipAssembly=<span class="literal">false</span></span><br><span class="line">unzip target/jicofo-linux-x64-1.1-SNAPSHOT.zip</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/jitsi/jicofo</span><br><span class="line"><span class="built_in">cd</span> /etc/jitsi/jicofo</span><br></pre></td></tr></table></figure><p>添加 logging.properties 到 /etc/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">handlers= java.util.logging.FileHandler</span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler, com.agafua.syslog.SyslogHandler</span></span><br><span class="line"></span><br><span class="line">java.util.logging.ConsoleHandler.level = ALL</span><br><span class="line">java.util.logging.ConsoleHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line"></span><br><span class="line">net.java.sip.communicator.util.ScLogFormatter.programname=Jicofo</span><br><span class="line"></span><br><span class="line">.level=INFO</span><br><span class="line">net.sf.level=SEVERE</span><br><span class="line">net.java.sip.communicator.plugin.reconnectplugin.level=FINE</span><br><span class="line">org.ice4j.level=SEVERE</span><br><span class="line">org.jitsi.impl.neomedia.level=SEVERE</span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not worry about missing strings</span></span><br><span class="line">net.java.sip.communicator.service.resources.AbstractResourcesService.level=SEVERE</span><br><span class="line"></span><br><span class="line"><span class="comment">#net.java.sip.communicator.service.protocol.level=ALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable debug packets logging</span></span><br><span class="line"><span class="comment">#org.jitsi.impl.protocol.xmpp.level=FINE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Syslog(uncomment handler to use)</span></span><br><span class="line">com.agafua.syslog.SyslogHandler.transport = udp</span><br><span class="line">com.agafua.syslog.SyslogHandler.facility = local0</span><br><span class="line">com.agafua.syslog.SyslogHandler.port = 514</span><br><span class="line">com.agafua.syslog.SyslogHandler.hostname = localhost</span><br><span class="line">com.agafua.syslog.SyslogHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line">com.agafua.syslog.SyslogHandler.escapeNewlines = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to disable double timestamps in syslog uncomment next line</span></span><br><span class="line"><span class="comment">#net.java.sip.communicator.util.ScLogFormatter.disableTimestamp=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># uncomment to see how Jicofo talks to the JVB</span></span><br><span class="line"><span class="comment">#org.jitsi.impl.protocol.xmpp.colibri.level=ALL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java.util.logging.FileHandler.level = ALL</span><br><span class="line">java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter</span><br><span class="line">java.util.logging.FileHandler.limit=1024000</span><br><span class="line">java.util.logging.FileHandler.count=10</span><br><span class="line">java.util.logging.FileHandler.pattern=/var/<span class="built_in">log</span>/jitsi/jicofo/jicofo%u.log</span><br><span class="line">java.util.logging.FileHandler.append=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>添加 log4j2.xml 到 /etc/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;Configuration&gt;</span><br><span class="line">    &lt;Properties&gt;</span><br><span class="line">        &lt;Property name=<span class="string">"log-path"</span>&gt;/var/<span class="built_in">log</span>/jitsi/jicofo&lt;/Property&gt;</span><br><span class="line">&lt;/Properties&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;RollingFile name=<span class="string">"RollingFile"</span> fileName=<span class="string">"<span class="variable">$&#123;log-path&#125;</span>/cs.log"</span></span><br><span class="line">                 filePattern=<span class="string">"<span class="variable">$&#123;log-path&#125;</span>/$<span class="variable">$&#123;date:yyyy-MM&#125;</span>/cs-%d&#123;MM-dd-yyyy&#125;-%i.log.gz"</span>&gt;</span><br><span class="line">&lt;PatternLayout pattern=<span class="string">"%d %-5p (%F:%L) - %m%n"</span>/&gt;</span><br><span class="line">      &lt;Policies&gt;</span><br><span class="line">        &lt;TimeBasedTriggeringPolicy /&gt;</span><br><span class="line">        &lt;SizeBasedTriggeringPolicy size=<span class="string">"250 MB"</span>/&gt;</span><br><span class="line">      &lt;/Policies&gt;</span><br><span class="line">    &lt;/RollingFile&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;Console name=<span class="string">"STDOUT"</span> target=<span class="string">"SYSTEM_OUT"</span>&gt;</span><br><span class="line">      &lt;PatternLayout pattern=<span class="string">"%d %-5p (%F:%L) - %m%n"</span>/&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">    &lt;!--&lt;Logger name=<span class="string">"org.apache.log4j.xml"</span> level=<span class="string">"debug"</span>/&gt;--&gt;</span><br><span class="line">    &lt;Logger name=<span class="string">"org.apache.log4j.xml"</span> level=<span class="string">"info"</span>/&gt;</span><br><span class="line">        &lt;Root level=<span class="string">"info"</span>&gt;</span><br><span class="line">            &lt;AppenderRef ref=<span class="string">"RollingFile"</span>/&gt;</span><br><span class="line">           &lt;!--  &lt;AppenderRef ref=<span class="string">"STDOUT"</span>/&gt;  --&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>添加 sip-communicator.properties 到 /etc/jitsi/jicofo (empty file)</p><p>启动脚本<br>cd /root/jitsi/jicofo</p><p>添加 start.sh 到 /root/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mvn package -DskipTests -Dassembly.skipAssembly=false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=jicofo -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/jicofo -Djava.util.logging.config.file=/etc/jitsi/jicofo/logging.properties -Dlog4j.configurationFile=/etc/jitsi/jicofo/log4j2.xml"</span></span><br><span class="line"></span><br><span class="line">./jicofo-linux-x64-1.1-SNAPSHOT/jicofo.sh --host=localhost --domain=meet.demo.com --secret=password2 --user_domain=auth.meet.demo.com --user_name=focus --user_password=password3 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start.sh</span><br><span class="line"></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/jitsi/jicofo/</span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Meet"><a href="#安装Jitsi-Meet" class="headerlink" title="安装Jitsi Meet"></a>安装Jitsi Meet</h3><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jitsi/jitsi-meet.git</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -fr jitsi-meet /var/www/</span><br><span class="line"><span class="built_in">cd</span> /var/www/jitsi-meet</span><br></pre></td></tr></table></figure><p>修改config.js<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    hosts: &#123;</span><br><span class="line">        domain: <span class="string">'meet.demo.com'</span>,</span><br><span class="line">        muc: <span class="string">'conference.meet.demo.com'</span>,</span><br><span class="line">        bridge: <span class="string">'jitsi-videobridge.meet.demo.com'</span>,</span><br><span class="line">        focus: <span class="string">'focus.meet.demo.com'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    useNicks: <span class="literal">false</span>,</span><br><span class="line">    bosh: <span class="string">'//meet.demo.com/http-bind'</span>, // FIXME: use xep-0156 <span class="keyword">for</span> that</span><br><span class="line">    //chromeExtensionId: <span class="string">'diibjkoicjeejcmhdnailmkgecihlobk'</span>, // Id of desktop streamer Chrome extension</span><br><span class="line">    //minChromeExtVersion: <span class="string">'0.1'</span> // Required version of Chrome extension</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">check /etc/nginx/sites-enabled/meet.demo.com root</span><br><span class="line">root /var/www/jitsi-meet;</span><br></pre></td></tr></table></figure></p><p>重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></p><p>浏览器中输入：<a href="https://meet.demo.com/" target="_blank" rel="noopener">https://meet.demo.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jitsi是安全、简单和可伸缩的视频会议，您可以作为一个独立的应用程序或嵌入到您的web应用程序中。它是基于Prosody之上实现的，按照官方文档安装会出现一些问题，经过一些实验成功安装，并记录下安装步骤。&lt;/p&gt;
    
    </summary>
    
      <category term="video" scheme="http://www.jerrylou.me/categories/video/"/>
    
    
      <category term="linux" scheme="http://www.jerrylou.me/tags/linux/"/>
    
      <category term="jitsi" scheme="http://www.jerrylou.me/tags/jitsi/"/>
    
      <category term="meet" scheme="http://www.jerrylou.me/tags/meet/"/>
    
      <category term="video" scheme="http://www.jerrylou.me/tags/video/"/>
    
      <category term="conferences" scheme="http://www.jerrylou.me/tags/conferences/"/>
    
      <category term="web" scheme="http://www.jerrylou.me/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果hackintosh 安装macos high sierra系统</title>
    <link href="http://www.jerrylou.me/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/hackintosh-to-high-sierra-20180212.html"/>
    <id>http://www.jerrylou.me/电脑硬件/hackintosh-to-high-sierra-20180212.html</id>
    <published>2018-02-12T12:50:34.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>macos high sierra更新一段时间了，以前的hackintosh系统已经很久没有更新了，趁过年更新下系统。系统硬件参考：<a href="/电脑硬件/hackintosh-window-install-20130429.html">&lt;&lt;安装Mac Window10 双系统，为发烧而生&gt;&gt;</a></p><a id="more"></a><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>mac电脑</li><li>下载Install macOS High Sierra</li><li>16G U盘</li><li>下载uniBeast、MultiBeast、clover configurator软件</li><li>下载显卡驱动WebDriver-387.10.10.10.25.156(根据自己的显卡)</li></ul><p><img src="https://static.oschina.net/uploads/space/2018/0213/122106_defq_3724856.png" alt="Alt text"></p><h3 id="启动盘"><a href="#启动盘" class="headerlink" title="启动盘"></a>启动盘</h3><p>格式化U盘<br><img src="https://static.oschina.net/uploads/space/2018/0213/115111_17aS_3724856.png" alt="Alt text" title="format usb"></p><p>双击UniBeast并安装<br><img src="https://static.oschina.net/uploads/space/2018/0213/115255_ZexK_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115317_EgnB_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115334_m6Pu_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115431_JH70_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115414_p3Dy_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115450_kB3n_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115505_2OKd_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115525_uikz_3724856.png" alt="Alt text"></p><p>将下载的软件拷贝到U盘<br><img src="https://static.oschina.net/uploads/space/2018/0213/115537_S3XO_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115631_EFbs_3724856.png" alt="Alt text"></p><p>将U盘插入你的PC。</p><h3 id="Bios设置"><a href="#Bios设置" class="headerlink" title="Bios设置"></a>Bios设置</h3><ul><li>cpu支持VT-d，禁用它。</li><li>支持CFG-Lock，禁用它。</li><li>支持Secure Boot Mode，禁用它。</li><li>支持IO Serial Port，禁用它。</li><li>Set OS 类型 Other OS</li><li>Set XHCI Handoff 选项为Enable。</li><li>设置第一启动为U盘 （或者重启按F12选择启动项）</li></ul><p>保存并退出</p><h3 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h3><p>选择Boot OS X Install from Install macOS high Sierra<br><img src="https://static.oschina.net/uploads/space/2018/0213/121635_V7HG_3724856.png" alt="Alt text"><br>进入安装mac 系统，这里就不截图了，安装过程中可能会重启几次。</p><h3 id="系统补丁"><a href="#系统补丁" class="headerlink" title="系统补丁"></a>系统补丁</h3><p>使用MultiBeast安装补丁<br><img src="https://static.oschina.net/uploads/space/2018/0213/121655_R931_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121711_R8X3_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121727_H49N_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121742_kjKG_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121801_gtoK_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121817_wkkb_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121831_ghKL_3724856.png" alt="Alt text"></p><h3 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h3><p><img src="https://static.oschina.net/uploads/space/2018/0213/121846_p6JB_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121917_AGvM_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121932_w8JX_3724856.png" alt="Alt text"></p><h3 id="修复声卡"><a href="#修复声卡" class="headerlink" title="修复声卡"></a>修复声卡</h3><p>参看：<a href="https://hackintosher.com/guides/get-hackintosh-audio-working/" target="_blank" rel="noopener">https://hackintosher.com/guides/get-hackintosh-audio-working/</a></p><p>打开终端: <code>diskutil list</code> <code>diskutil mount /dev/disk0s1</code><br><img src="https://static.oschina.net/uploads/space/2018/0213/121948_lQLH_3724856.png" alt="Alt text"></p><p>拷贝kext到EFI-&gt;kexts-&gt;other目录下<br><img src="https://static.oschina.net/uploads/space/2018/0213/122006_IJJ4_3724856.png" alt="Alt text"></p><p>使用clover configurator配置<br><img src="https://static.oschina.net/uploads/space/2018/0213/122021_sxke_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/122038_U79e_3724856.png" alt="Alt text"></p><p>关闭clover configurator，保存config.plist. 然后重启电脑。ok，你可以听音乐了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;macos high sierra更新一段时间了，以前的hackintosh系统已经很久没有更新了，趁过年更新下系统。系统硬件参考：&lt;a href=&quot;/电脑硬件/hackintosh-window-install-20130429.html&quot;&gt;&amp;lt;&amp;lt;安装Mac Window10 双系统，为发烧而生&amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="电脑硬件" scheme="http://www.jerrylou.me/categories/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/"/>
    
    
      <category term="mac" scheme="http://www.jerrylou.me/tags/mac/"/>
    
      <category term="hackintosh" scheme="http://www.jerrylou.me/tags/hackintosh/"/>
    
      <category term="黑苹果" scheme="http://www.jerrylou.me/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="安装" scheme="http://www.jerrylou.me/tags/%E5%AE%89%E8%A3%85/"/>
    
      <category term="UEFI" scheme="http://www.jerrylou.me/tags/UEFI/"/>
    
      <category term="high sierra" scheme="http://www.jerrylou.me/tags/high-sierra/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL查询语言实践-实现BoltMQ的Console</title>
    <link href="http://www.jerrylou.me/graphql/graphql-golang-fulfill-20180206.html"/>
    <id>http://www.jerrylou.me/graphql/graphql-golang-fulfill-20180206.html</id>
    <published>2018-02-06T06:46:36.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文章<a href="graphql/graphql-golang-20180123.html">《GraphQL查询语言学习笔记》</a>学习了GraphQL的语法和介绍Golang的库。最近再使用Golang编写一款分布式消息队列<a href="https://github.com/boltmq/boltmq" target="_blank" rel="noopener">BoltMQ</a>，我将GraphQL用到BoltMQ的web管理UI上，这样更进一步了解GraphQL。</p><a id="more"></a><h3 id="GraphQL-设计篇"><a href="#GraphQL-设计篇" class="headerlink" title="GraphQL 设计篇"></a>GraphQL 设计篇</h3><p>有了将GraphQL应用到BoltMQ的web UI上的需求，那如何来做呢。我总结了下：</p><ol><li>业务梳理</li><li>GraphQL API设计</li><li>GraphQL Schema设计</li><li>GraphQL 第三方库的选择</li><li>GraphQL 客户端与服务端的实现</li></ol><h3 id="GraphQL-API设计"><a href="#GraphQL-API设计" class="headerlink" title="GraphQL API设计"></a>GraphQL API设计</h3><p>API的设计比较重要，需要开发人员充分理解业务，在业务的基础抽象有查询Graph。例如<a href="git@github.com:boltmq/console.git">console</a>是BolotMQ的集群管理UI。需求：</p><ul><li>管理多个BoltMQ集群</li><li>查询集群的节点信息</li><li>查询集群的统计信息</li><li>查询集群的topic信息</li><li>查询集群的消息信息</li><li>查询集群的订阅组信息</li><li>查询集群的消费进度</li><li>查询集群的在线消费进程<br>意思列举了几个功能点，首先将集群这个概念抽象出来，用户在选定集群的情况下才会做下面的查询操作，所有集群就可以作为第一层，然后再往下梳理。graphql就是将业务抽象成图（树）的形式的。</li></ul><p>以下是对console的查询操作的API设计，当然你需要理解BoltMQ的一些知识。你可查看<a href="https://github.com/boltmq/boltmq" target="_blank" rel="noopener">BoltMQ</a>了解。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">query clusters(<span class="variable">$name</span>: String, <span class="variable">$like</span>: String, <span class="variable">$group</span>: String, <span class="variable">$msgId</span>: String!) &#123;</span><br><span class="line">  clusters(name: <span class="variable">$name</span>) &#123;</span><br><span class="line">    name</span><br><span class="line">    stats &#123;</span><br><span class="line">      producerNums</span><br><span class="line">      consumerNums</span><br><span class="line">      brokerNums</span><br><span class="line">      namesrvNums</span><br><span class="line">      topicNums</span><br><span class="line">      outTotalTodayNums</span><br><span class="line">      outTotalYestNums</span><br><span class="line">      inTotalTodayNums</span><br><span class="line">      inTotalYestNums</span><br><span class="line">    &#125;</span><br><span class="line">    nodes &#123;</span><br><span class="line">      namesrvAddrs</span><br><span class="line">      brokerNodes &#123;</span><br><span class="line">        role</span><br><span class="line">        addr</span><br><span class="line">        version</span><br><span class="line">        desc</span><br><span class="line">        outTps</span><br><span class="line">        inTps</span><br><span class="line">        outTotalTodayNums</span><br><span class="line">        outTotalYestNums</span><br><span class="line">        inTotalTodayNums</span><br><span class="line">        inTotalYestNums</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    topics(like: <span class="variable">$like</span>) &#123;</span><br><span class="line">      topic</span><br><span class="line">      <span class="built_in">type</span></span><br><span class="line">      isSystem</span><br><span class="line">      store &#123;</span><br><span class="line">        brokerName</span><br><span class="line">        queueId</span><br><span class="line">        maxOffset</span><br><span class="line">        minOffset</span><br><span class="line">        lastUpdateTime</span><br><span class="line">      &#125;</span><br><span class="line">      route &#123;</span><br><span class="line">        queues &#123;</span><br><span class="line">          brokerName</span><br><span class="line">          writeQueueNums</span><br><span class="line">          readQueueNums</span><br><span class="line">          perm</span><br><span class="line">          sysFlag</span><br><span class="line">        &#125;</span><br><span class="line">        brokers &#123;</span><br><span class="line">          brokerName</span><br><span class="line">          brokerAddrs &#123;</span><br><span class="line">            brokerId</span><br><span class="line">            addr</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      groups</span><br><span class="line">      consumeConn &#123;</span><br><span class="line">        describe</span><br><span class="line">        conns &#123;</span><br><span class="line">          consumeGroup</span><br><span class="line">          clientId</span><br><span class="line">          clientAddr</span><br><span class="line">          language</span><br><span class="line">          version</span><br><span class="line">          consumeTps</span><br><span class="line">          consumeFromWhere</span><br><span class="line">          consumeType</span><br><span class="line">          diff</span><br><span class="line">          messageModel</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      consumeProgress(group: <span class="variable">$group</span>) &#123;</span><br><span class="line">        consumeGroup</span><br><span class="line">        tps</span><br><span class="line">        diff</span><br><span class="line">        total</span><br><span class="line">        progress &#123;</span><br><span class="line">          brokerOffset</span><br><span class="line">          consumeOffset</span><br><span class="line">          diff</span><br><span class="line">          brokerName</span><br><span class="line">          queueId</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  msg(msgId: <span class="variable">$msgId</span>) &#123;</span><br><span class="line">    info &#123;</span><br><span class="line">      msgId</span><br><span class="line">      topic</span><br><span class="line">      flag</span><br><span class="line">      body</span><br><span class="line">      queueId</span><br><span class="line">      storeSize</span><br><span class="line">      queueOffset</span><br><span class="line">      sysFlag</span><br><span class="line">      bornTimestamp</span><br><span class="line">      bornHost</span><br><span class="line">      storeTimestamp</span><br><span class="line">      storeHost</span><br><span class="line">      commitLogOffset</span><br><span class="line">      bodyCRC</span><br><span class="line">      reconsumeTimes</span><br><span class="line">      preparedTransactionOffset</span><br><span class="line">      properties &#123;</span><br><span class="line">        key</span><br><span class="line">        val</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    tracks &#123;</span><br><span class="line">      code</span><br><span class="line">      <span class="built_in">type</span></span><br><span class="line">      consumeGroup</span><br><span class="line">      desc</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="GraphQL-Schema-设计"><a href="#GraphQL-Schema-设计" class="headerlink" title="GraphQL Schema 设计"></a>GraphQL Schema 设计</h3><p>结合GraphQL API设计类型系统Schema，这里的设计偏后端一些，和API是相辅相成的。在API基础上再次确定返回值的类型以及结构的优化。当然API和Schema的设计可以同时做，也可以分开进行。</p><p>console的类型系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># boltmq contole graphql schema</span></span><br><span class="line">schema &#123;</span><br><span class="line">    query: Query</span><br><span class="line">    mutation: Mutation</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The query type, represents all of the entry points into our object graph</span></span><br><span class="line"><span class="built_in">type</span> Query &#123;</span><br><span class="line">    clusters(name: String): [Cluster]!</span><br><span class="line">    msg(name: String, msgId: String!): Message</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Cluster from the boltmq server</span></span><br><span class="line"><span class="built_in">type</span> Cluster &#123;</span><br><span class="line">    <span class="comment"># The name of cluster</span></span><br><span class="line">    name: String!</span><br><span class="line">    <span class="comment"># The stats info of cluster</span></span><br><span class="line">    stats: ClusterStats!</span><br><span class="line">    <span class="comment"># The node info of cluster</span></span><br><span class="line">    nodes: ClusterNode!</span><br><span class="line">    <span class="comment"># The topics of cluster</span></span><br><span class="line">    topics(like: String): [Topic]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A ClusterStats info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> ClusterStats &#123;</span><br><span class="line">    <span class="comment"># The producer nums of cluster</span></span><br><span class="line">    producerNums: Int!</span><br><span class="line">    <span class="comment"># The consumer nums of cluster</span></span><br><span class="line">    consumerNums: Int!</span><br><span class="line">    <span class="comment"># The broker nums of cluster</span></span><br><span class="line">    brokerNums: Int!</span><br><span class="line">    <span class="comment"># The name server nums of cluster</span></span><br><span class="line">    namesrvNums: Int!</span><br><span class="line">    <span class="comment"># The topic nums of cluster</span></span><br><span class="line">    topicNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number today</span></span><br><span class="line">    outTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number yest</span></span><br><span class="line">    outTotalYestNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number yest</span></span><br><span class="line">    inTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number today</span></span><br><span class="line">    inTotalYestNums: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Cluster node info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> ClusterNode &#123;</span><br><span class="line">    <span class="comment"># The namesrv addr list fo cluster</span></span><br><span class="line">    namesrvAddrs: [String!]!</span><br><span class="line">    <span class="comment"># The broker node list fo cluster</span></span><br><span class="line">    brokerNodes: [BrokerNode]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Boker node info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> BrokerNode &#123;</span><br><span class="line">    <span class="comment"># The borker role</span></span><br><span class="line">    role: Int!</span><br><span class="line">    <span class="comment"># The borker addr</span></span><br><span class="line">    addr: String!</span><br><span class="line">    <span class="comment"># The borker server version</span></span><br><span class="line">    version: String!</span><br><span class="line">    <span class="comment"># The borker server describe</span></span><br><span class="line">    desc: String!</span><br><span class="line">    <span class="comment"># The borker server current out tps</span></span><br><span class="line">    outTps: Float!</span><br><span class="line">    <span class="comment"># The borker server current in tps</span></span><br><span class="line">    inTps: Float!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number today</span></span><br><span class="line">    outTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number yest</span></span><br><span class="line">    outTotalYestNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number yest</span></span><br><span class="line">    inTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number today</span></span><br><span class="line">    inTotalYestNums: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> Topic &#123;</span><br><span class="line">    <span class="comment"># The topic name</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The topic type</span></span><br><span class="line">    <span class="built_in">type</span>: Int!</span><br><span class="line">    <span class="comment"># The topic type</span></span><br><span class="line">    isSystem: Boolean!</span><br><span class="line">    <span class="comment"># The topic store</span></span><br><span class="line">    store: TopicStore!</span><br><span class="line">    <span class="comment"># The topic route</span></span><br><span class="line">    route: TopicRoute!</span><br><span class="line">    <span class="comment"># The consume group</span></span><br><span class="line">    groups: [String!]!</span><br><span class="line">    <span class="comment"># The consume connection</span></span><br><span class="line">    consumeConn: ConsumeConn!</span><br><span class="line">    consumeProgress(group: String): [ConsumeProgress]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># topic type</span></span><br><span class="line">enum TopicType &#123;</span><br><span class="line">    <span class="comment"># normal topic</span></span><br><span class="line">    NORMAL_TOPIC</span><br><span class="line">    <span class="comment"># retry topic</span></span><br><span class="line">    RETRY_TOPIC</span><br><span class="line">    <span class="comment"># deadline queue topic</span></span><br><span class="line">    DLQ_TOPIC</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic stroe info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> TopicStore &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">    <span class="comment"># The max offset</span></span><br><span class="line">    maxOffset: Int!</span><br><span class="line">    <span class="comment"># The min offset</span></span><br><span class="line">    minOffset: Int!</span><br><span class="line">    <span class="comment"># The last update time</span></span><br><span class="line">    lastUpdateTime: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic route info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> TopicRoute &#123;</span><br><span class="line">    <span class="comment"># The route data of queue</span></span><br><span class="line">    queues: [QueueData]!</span><br><span class="line">    <span class="comment"># The route data of broker</span></span><br><span class="line">    brokers: [BrokerData]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A queue route data of topic</span></span><br><span class="line"><span class="built_in">type</span> QueueData &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The write queue nums</span></span><br><span class="line">    writeQueueNums: Int!</span><br><span class="line">    <span class="comment"># The read queue nums</span></span><br><span class="line">    readQueueNums: Int!</span><br><span class="line">    <span class="comment"># The permissions of topic on broker</span></span><br><span class="line">    perm: Int!</span><br><span class="line">    <span class="comment"># The permissions of topic on broker</span></span><br><span class="line">    sysFlag: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A broker route data of topic</span></span><br><span class="line"><span class="built_in">type</span> BrokerData &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The broker addrs</span></span><br><span class="line">    brokerAddrs: [BrokerAddr]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A broker addr of topic route</span></span><br><span class="line"><span class="built_in">type</span> BrokerAddr &#123;</span><br><span class="line">    <span class="comment"># The broker id</span></span><br><span class="line">    brokerId: Int!</span><br><span class="line">    <span class="comment"># The broker addr</span></span><br><span class="line">    addr: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume connection</span></span><br><span class="line"><span class="built_in">type</span> ConsumeConn &#123;</span><br><span class="line">    <span class="comment"># The describe</span></span><br><span class="line">    describe: String!</span><br><span class="line">    <span class="comment"># The connection</span></span><br><span class="line">    conns: [Connection]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># connection info</span></span><br><span class="line"><span class="built_in">type</span> Connection &#123;</span><br><span class="line">    <span class="comment"># The consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># The client id</span></span><br><span class="line">    clientId: String!</span><br><span class="line">    <span class="comment"># The client addr</span></span><br><span class="line">    clientAddr: String!</span><br><span class="line">    <span class="comment"># The language</span></span><br><span class="line">    language: String!</span><br><span class="line">    <span class="comment"># The version</span></span><br><span class="line">    version: String!</span><br><span class="line">    <span class="comment"># The consume tps</span></span><br><span class="line">    consumeTps: Float!</span><br><span class="line">    <span class="comment"># The consume from where</span></span><br><span class="line">    consumeFromWhere: String!</span><br><span class="line">    <span class="comment"># The consume type</span></span><br><span class="line">    consumeType: Int!</span><br><span class="line">    <span class="comment"># The message diff total</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The message model</span></span><br><span class="line">    messageModel: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume type</span></span><br><span class="line">enum ConsumeType &#123;</span><br><span class="line">    <span class="comment"># actively consume</span></span><br><span class="line">    CONSUME_ACTIVELY</span><br><span class="line">    <span class="comment"># passively consume</span></span><br><span class="line">    CONSUME_PASSIVELY</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message model</span></span><br><span class="line">enum MessageModel &#123;</span><br><span class="line">    <span class="comment"># broadcasting</span></span><br><span class="line">    BROADCASTING </span><br><span class="line">    <span class="comment"># clustering</span></span><br><span class="line">    CLUSTERING</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume progress</span></span><br><span class="line"><span class="built_in">type</span> ConsumeProgress &#123;</span><br><span class="line">    <span class="comment"># The consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># The consume tps</span></span><br><span class="line">    tps: Float!</span><br><span class="line">    <span class="comment"># The consume diff</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The total</span></span><br><span class="line">    total: Int!</span><br><span class="line">    <span class="comment"># The progress data list</span></span><br><span class="line">    progress: [ConsumeProgressData]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume progress data</span></span><br><span class="line"><span class="built_in">type</span> ConsumeProgressData &#123;</span><br><span class="line">    <span class="comment"># The broker offset</span></span><br><span class="line">    brokerOffset: Int!</span><br><span class="line">    <span class="comment"># The broker offset</span></span><br><span class="line">    consumeOffset: Int!</span><br><span class="line">    <span class="comment"># The consume diff</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message</span></span><br><span class="line"><span class="built_in">type</span> Message &#123;</span><br><span class="line">    <span class="comment"># The message base info</span></span><br><span class="line">    info: MessageInfo!</span><br><span class="line">    <span class="comment"># The message track list</span></span><br><span class="line">    tracks: [MessageTrack]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message info</span></span><br><span class="line"><span class="built_in">type</span> MessageInfo &#123;</span><br><span class="line">    <span class="comment"># The message id</span></span><br><span class="line">    msgId: String!</span><br><span class="line">    <span class="comment"># The topic name</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The message flag</span></span><br><span class="line">    flag: Int!</span><br><span class="line">    <span class="comment"># The message body</span></span><br><span class="line">    body: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">    <span class="comment"># The store size</span></span><br><span class="line">    storeSize: Int!</span><br><span class="line">    <span class="comment"># The queue offset</span></span><br><span class="line">    queueOffset: Int!</span><br><span class="line">    <span class="comment"># The message sys flag</span></span><br><span class="line">    sysFlag: Int!</span><br><span class="line">    <span class="comment"># The born timestamp</span></span><br><span class="line">    bornTimestamp: String!</span><br><span class="line">    <span class="comment"># The born host </span></span><br><span class="line">    bornHost: String!</span><br><span class="line">    <span class="comment"># The store timestamp</span></span><br><span class="line">    storeTimestamp: String!</span><br><span class="line">    <span class="comment"># The store host </span></span><br><span class="line">    storeHost: String!</span><br><span class="line">    <span class="comment"># The commitlog offset</span></span><br><span class="line">    commitLogOffset: Int!</span><br><span class="line">    <span class="comment"># The message body crc</span></span><br><span class="line">    bodyCRC: Int!</span><br><span class="line">    <span class="comment"># The reconsume times</span></span><br><span class="line">    reconsumeTimes: Int!</span><br><span class="line">    <span class="comment"># The reconsume times</span></span><br><span class="line">    preparedTransactionOffset: Int!</span><br><span class="line">    <span class="comment"># The properties</span></span><br><span class="line">    properties: [Property!]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># property, replace map</span></span><br><span class="line"><span class="built_in">type</span> Property &#123;</span><br><span class="line">    key: String!</span><br><span class="line">    val: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message track</span></span><br><span class="line"><span class="built_in">type</span> MessageTrack &#123;</span><br><span class="line">    <span class="comment"># The track code, 0: success, non-0: failed</span></span><br><span class="line">    code: Int!</span><br><span class="line">    <span class="comment"># track type</span></span><br><span class="line">    <span class="built_in">type</span>: Int!</span><br><span class="line">    <span class="comment"># consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># error describe</span></span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># track type</span></span><br><span class="line">enum TrackType &#123;</span><br><span class="line">    <span class="comment"># subscribed and consumed</span></span><br><span class="line">    SUBSCRIBEDANDCONSUMED</span><br><span class="line">    <span class="comment"># subscribed but filterd</span></span><br><span class="line">    SUBSCRIBEDBUTFILTERD</span><br><span class="line">    <span class="comment"># subscribed but pull</span></span><br><span class="line">    SUBSCRIBEDBUTPULL</span><br><span class="line">    <span class="comment"># subscribed and not consume yet</span></span><br><span class="line">    SUBSCRIBEDBUTNOTCONSUMEYET</span><br><span class="line">    <span class="comment"># unknow exeption</span></span><br><span class="line">    UNKNOWEXEPTION</span><br><span class="line">    <span class="comment"># not subscribed and not consumed</span></span><br><span class="line">    NOTSUBSCRIBEDANDNOTCONSUMED</span><br><span class="line">    <span class="comment"># consume groupId not online</span></span><br><span class="line">    CONSUMEGROUPIDNOTONLINE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The mutation type, represents all updates we can make to our data</span></span><br><span class="line"><span class="built_in">type</span> Mutation &#123;</span><br><span class="line">    create2UpdateTopic(name: String!, topic: TopicInput!): TopicResponse</span><br><span class="line">    deleteTopic(name: String!, topic: String!): TopicResponse</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The input object sent when cluster is creating a new topic</span></span><br><span class="line">input TopicInput &#123;</span><br><span class="line">    <span class="comment"># topic</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The read queue nums, optional</span></span><br><span class="line">    readQueueNums: Int!</span><br><span class="line">    <span class="comment"># The write queue nums, optional</span></span><br><span class="line">    writeQueueNums: Int!</span><br><span class="line">    <span class="comment"># The order topic, optional</span></span><br><span class="line">    order: Boolean! </span><br><span class="line">    <span class="comment"># The unit topic, optional</span></span><br><span class="line">    unit: Boolean!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Represents a topic for a cluster</span></span><br><span class="line">interface Response &#123;</span><br><span class="line">    code: Int!</span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span> TopicResponse implements Response &#123;</span><br><span class="line">    code: Int!</span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="GraphQL-代码实现"><a href="#GraphQL-代码实现" class="headerlink" title="GraphQL 代码实现"></a>GraphQL 代码实现</h3><p>console使用的<code>neelance/graphql-go</code>库，<a href="https://github.com/boltmq/console/tree/master/admin" target="_blank" rel="noopener">代码查看</a>。使用的缺点和注意事项：</p><ul><li>neelance使用反射实现</li><li>graphql类型匹配严格，并缺少对于的int,int64等基础类型。</li><li>接口的实现不优雅，我提了<a href="https://github.com/neelance/graphql-go/issues/159" target="_blank" rel="noopener">issue</a>，等待改进。</li><li>context无法向下传递</li></ul><p><strong>封装统一认证</strong></p><p>请求header中取得jwtToken进行验证。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> userClaims <span class="keyword">struct</span> &#123;</span><br><span class="line">    user</span><br><span class="line">    jwt.StandardClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> authenticator <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(auth *authenticator)</span> <span class="title">Chain</span><span class="params">(w http.ResponseWriter, r *http.Request, ctx *Context)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="comment">// extract jwt</span></span><br><span class="line">    jwtToken := r.Header.Get(<span class="string">"Authorization"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// parse tokentoken</span></span><br><span class="line">    token, err := jwt.ParseWithClaims(jwtToken, &amp;userClaims&#123;&#125;, <span class="function"><span class="keyword">func</span><span class="params">(token *jwt.Token)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"Unexpected signing method"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwtSecret, <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, <span class="string">"not authorized"</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    claims, ok := token.Claims.(*userClaims)</span><br><span class="line">    <span class="keyword">if</span> !ok || !token.Valid &#123;</span><br><span class="line">        http.Error(w, <span class="string">"not authorized"</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.ctx = context.WithValue(r.Context(), userAuthKey, claims.user)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>登录后生成token并返回。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> loginHandler <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *loginHandler)</span> <span class="title">ServeHTTP</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    decoder := json.NewDecoder(r.Body)</span><br><span class="line">    userParam := <span class="keyword">struct</span> &#123;</span><br><span class="line">        Username <span class="keyword">string</span> <span class="string">`json:"username"`</span></span><br><span class="line">        Password <span class="keyword">string</span> <span class="string">`json:"password"`</span></span><br><span class="line">    &#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">    err := decoder.Decode(&amp;userParam)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, err.Error(), http.StatusInternalServerError)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> r.Body.Close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> userParam.Username != <span class="string">"admin"</span> || userParam.Password != <span class="string">"admin"</span> &#123;</span><br><span class="line">        http.Error(w, <span class="string">"invalid login"</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//generate token</span></span><br><span class="line">    expire := time.Now().Add(time.Hour * <span class="number">1</span>).Unix()</span><br><span class="line">    <span class="comment">// Create the Claims</span></span><br><span class="line">    claims := userClaims&#123;</span><br><span class="line">        user: user&#123;</span><br><span class="line">            UserID:   <span class="number">1</span>,</span><br><span class="line">            UserName: userParam.Username,</span><br><span class="line">            IsAdmin:  <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        StandardClaims: jwt.StandardClaims&#123;</span><br><span class="line">            ExpiresAt: expire,</span><br><span class="line">            Issuer:    <span class="string">"login"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)</span><br><span class="line">    signedToken, _ := token.SignedString(jwtSecret)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//output token</span></span><br><span class="line">    tokenResponse := <span class="keyword">struct</span> &#123;</span><br><span class="line">        Token <span class="keyword">string</span> <span class="string">`json:"token"`</span></span><br><span class="line">    &#125;&#123;signedToken&#125;</span><br><span class="line">    json.NewEncoder(w).Encode(tokenResponse)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>GraphQL接口接入认证<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srv.mux.Handle(pattern, join(&amp;relay.Handler&#123;Schema: schema&#125;, &amp;authenticator&#123;&#125;))</span><br></pre></td></tr></table></figure></p><p>登录接入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srv.mux.Handle(pattern, &amp;loginHandler&#123;&#125;)</span><br></pre></td></tr></table></figure></p><p>以上4点就完成认证功能，详细代码查看<a href="https://github.com/boltmq/console/tree/master/admin/server" target="_blank" rel="noopener">console-server</a></p><p>还需功能</p><ul><li>dataloader</li></ul><p>对比<a href="https://github.com/graphql-go/graphql" target="_blank" rel="noopener">graphql-go</a>库，graphql-go更佳灵活，当抽象程度差一些。根据自己情况自行选择。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上篇文章&lt;a href=&quot;graphql/graphql-golang-20180123.html&quot;&gt;《GraphQL查询语言学习笔记》&lt;/a&gt;学习了GraphQL的语法和介绍Golang的库。最近再使用Golang编写一款分布式消息队列&lt;a href=&quot;https://github.com/boltmq/boltmq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BoltMQ&lt;/a&gt;，我将GraphQL用到BoltMQ的web管理UI上，这样更进一步了解GraphQL。&lt;/p&gt;
    
    </summary>
    
      <category term="graphql" scheme="http://www.jerrylou.me/categories/graphql/"/>
    
    
      <category term="golang" scheme="http://www.jerrylou.me/tags/golang/"/>
    
      <category term="graphql" scheme="http://www.jerrylou.me/tags/graphql/"/>
    
      <category term="graphiql" scheme="http://www.jerrylou.me/tags/graphiql/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack O版 安装部署及问题解决</title>
    <link href="http://www.jerrylou.me/openstack/opentstack-o-deploy-20180131.html"/>
    <id>http://www.jerrylou.me/openstack/opentstack-o-deploy-20180131.html</id>
    <published>2018-01-31T02:30:26.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>OpenStack项目是由Rackspace和NASA（美国国家航空航天局）共同发起的。它是一个开源软件，它提供了一个部署云的平台。为虚拟计算或存储服务的公有/私有云，提供可扩展的、灵活的云计算。是一个旨在为公共及私有云的建设与管理提供软件的开源项目。OpenStack目前版本Pike并在持续更新中，本文选用Ocata版本进行部署，并记录部署过程中遇到的问题。</p><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p><strong>操作系统</strong><br>Centos7.2.1151 mini(国内mirrors没有，<a href="http://vault.centos.org/7.2.1511/isos/x86_64/" target="_blank" rel="noopener">官方下载</a>)</p><p><strong>服务节点</strong><br>本文使用三个节点部署stand-one方式，按照官方文档进行部署，高可用部署之后文章会跟进。</p><ul><li>controller节点</li><li>computer节点</li><li>block storage节点</li></ul><p><strong>网络说明</strong> </p><ul><li>Manage network 管理网络，OpenStack各个模块之间的交互，连接数据库，连接Message Queue都是通过这个网络来进行。</li><li>Private network 私有网络，虚拟机之间的数据传输通过这个网络来进行，虚拟机要连接虚拟路由都是通过这个网络来进行。</li><li>External network 外部网络，无论是用户调用OpenStack的API，还是创建出来的虚拟机要访问外网，或者外网要ssh到虚拟机，都用这个网络。</li></ul><p>OpenStack将三个网络进行隔离，一方面是安全，在虚拟机里面，干扰的都仅仅是Private Network，都不可能访问到我的数据库。一方面是流量分离，Manage Network的流量不是很大的，而且一般都会比较优雅的使用，而Prviate Network和External Network就需要有流量控制策略。</p><table><thead><tr><th style="text-align:center">节点</th><th style="text-align:left">Manage network</th><th style="text-align:center">Private network</th><th style="text-align:center">External network</th></tr></thead><tbody><tr><td style="text-align:center">controller</td><td style="text-align:left">10.50.1.11</td><td style="text-align:center">10.50.1.11</td><td style="text-align:center">10.112.1.116</td></tr><tr><td style="text-align:center">computer</td><td style="text-align:left">10.50.1.10</td><td style="text-align:center">10.50.1.11</td><td style="text-align:center">10.112.1.117(临时)</td></tr><tr><td style="text-align:center">block storage</td><td style="text-align:left">10.50.1.12</td><td style="text-align:center">10.50.1.12</td><td style="text-align:center">10.112.1.118(临时)</td></tr></tbody></table><p>注意：非高可用环境采用Manage Private同网方式，computer和block storage节点的External network的外网用于安装环境的。</p><p><strong>配置节点别名</strong> </p><p>修改/etc/hostname的主机名称，修改每个节点的<strong>/etc/hosts</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.50.1.11 controller</span><br><span class="line">10.50.1.10 computer</span><br><span class="line">10.50.1.12 blokstorage</span><br></pre></td></tr></table></figure></p><p><strong>Yum下载源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><p>请参看<a href="https://docs.openstack.org/ocata/install-guide-rdo/common/conventions.html" target="_blank" rel="noopener">官方Ocata版本安装向导</a>进行安装。请一步一步进行安装，官方文档已经非常详尽了，这里就不在重复写了，我会我部署过程中的问题中列举出来并记录。</p><h3 id="安装问题及解决方案"><a href="#安装问题及解决方案" class="headerlink" title="安装问题及解决方案"></a>安装问题及解决方案</h3><p><strong>编码unknown locale: UTF-8</strong><br>在进行同步数据库命令时，有时会出现<code>unknown locale: UTF-8</code>错误并同步失败。终端中输入以下命令后再执行同步命令即可:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure></p><p><strong>连接不上rabbitmq的问题</strong><br>其它节点连接不上rabbitmq并提示<strong>127.0.0.1:5672</strong>(/var/log/下的日志)，文档中已经明确配置了<strong>transport_url = rabbit://openstack:RABBIT_PASS@controller</strong>，这里的rabbitmq的主机是controller而不是127.0.0.1。问题在于配置中还有rabbit_host参数指定，配置<strong>rabbit_host=controller</strong>重启服务即可。</p><p><strong>chrony时间同步问题</strong><br>参看各个节点的时区是否一致，可使用<code>timedatectl</code>命令进行查看与修改。如果chrony没有能同步时间，请使用命令修改系统时间后再<code>systemctl restart chrony</code>。如果时间没有同步，会导致controller检查block storage的cinder-volume服务一直为down状态。controller节点使用命令<strong>openstack volume service list</strong>查看。</p><p>设置时区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure></p><p><strong>重启机器后无法访问web的问题</strong><br>重启后mysql、rabbitmq服务可能没有启动，需要检查并启动。启动后先需要重启http和memcached.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl start rabbitmq-server.service</span><br><span class="line">systemctl restart httpd.service memcached.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OpenStack项目是由Rackspace和NASA（美国国家航空航天局）共同发起的。它是一个开源软件，它提供了一个部署云的平台。为虚拟计算或存储服务的公有/私有云，提供可扩展的、灵活的云计算。是一个旨在为公共及私有云的建设与管理提供软件的开源项目。OpenStack目前版本Pike并在持续更新中，本文选用Ocata版本进行部署，并记录部署过程中遇到的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="openstack" scheme="http://www.jerrylou.me/categories/openstack/"/>
    
    
      <category term="openstack" scheme="http://www.jerrylou.me/tags/openstack/"/>
    
      <category term="centos7.2" scheme="http://www.jerrylou.me/tags/centos7-2/"/>
    
      <category term="ocata" scheme="http://www.jerrylou.me/tags/ocata/"/>
    
      <category term="云计算" scheme="http://www.jerrylou.me/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="虚拟化" scheme="http://www.jerrylou.me/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL查询语言学习笔记</title>
    <link href="http://www.jerrylou.me/graphql/graphql-golang-20180123.html"/>
    <id>http://www.jerrylou.me/graphql/graphql-golang-20180123.html</id>
    <published>2018-01-23T06:51:36.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>RSETful API接口想必大家都比较熟悉，GraphQL设计用于替代RESTful API接口，但目前不是所有情况都使用替代，他们各有优势。<br>GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。</p><blockquote><p>在 2015 React 欧洲大会上，Lee Byron 介绍了 Facebook 的 GraphQL ，包含 GraphQL 背后的故事，查询语句的示例，还有核心的概念。GraphQL 非常易懂，直接看查询语句就能知道查询出来的数据是什么样的。你可以把 GraphQL 的查询语句想成是没有值，只有属性的对象，返回的结果就是对应的属性还有对应值的对象。</p></blockquote><a id="more"></a><h3 id="GraphQL-基础篇"><a href="#GraphQL-基础篇" class="headerlink" title="GraphQL 基础篇"></a>GraphQL 基础篇</h3><p>GraphQL特性是用户可以自定义查询对象字段，使用图（树）的形式表示业务对象，从而定义查询示例。Facebook定义GraphQL规范，GraphQL语法方面的知识可以参考:</p><p>英文</p><ul><li><a href="http://facebook.github.io/graphql/October2016/" target="_blank" rel="noopener">http://facebook.github.io/graphql/October2016/</a></li><li><a href="https://github.com/facebook/graphql" target="_blank" rel="noopener">https://github.com/facebook/graphql</a></li></ul><p>中文</p><ul><li><a href="http://spec.graphql.cn//#sec-Overview-" target="_blank" rel="noopener">http://spec.graphql.cn//#sec-Overview-</a></li></ul><p>官方提供了新手课程:</p><p>英文</p><ul><li><strong><a href="http://graphql.org/learn" target="_blank" rel="noopener">http://graphql.org/learn</a></strong></li><li><a href="https://www.howtographql.com/" target="_blank" rel="noopener">https://www.howtographql.com/</a></li></ul><p>中文</p><ul><li><strong><a href="http://graphql.cn/learn/" target="_blank" rel="noopener">http://graphql.cn/learn/</a></strong></li></ul><p>GraphQL包括: <strong>类型系统（Type System）</strong> <strong>类型语言（Type Language）</strong> <strong>对象类型和字段（Object Types and Fields）</strong>等查询语言的定义和专用名词。如果你还是新手，请认真阅读<a href="http://spec.graphql.cn//#sec-Overview-" target="_blank" rel="noopener">GraphQL规范</a>和<a href="**http://graphql.cn/learn/**">新手课程</a>。你已经理解了GraphQL是什么，那么可以接下来就是如何使用Golang编写GraphQL Server，如何编写schema，如何运行以及调试。</p><h3 id="GraphQL-Server"><a href="#GraphQL-Server" class="headerlink" title="GraphQL Server"></a>GraphQL Server</h3><p>首先使用golang语言实现官方示例，以了解GraphQL Server如何编写。当然GraphQL中有客户端和服务端。</p><p>客户端库：</p><ul><li><a href="https://facebook.github.io/relay/" target="_blank" rel="noopener">Relay</a> (<a href="https://github.com/facebook/relay" target="_blank" rel="noopener">github</a>)：Facebook 的框架，用于构建与 GraphQL 后端交流的 React 应用。</li><li><a href="http://apollographql.com/client/" target="_blank" rel="noopener">Apollo Client</a> (<a href="https://github.com/apollographql/apollo-client" target="_blank" rel="noopener">github</a>)：一个强大的 JavaScript GraphQL 客户端，设计用于与 React、React Native、Angular 2 或者原生 JavaScript 一同工作。</li><li><a href="https://github.com/shurcooL/graphql#readme" target="_blank" rel="noopener">graphql</a>: 一个使用 Go 编写的 GraphQL 客户端实现。</li></ul><p>服务端库：</p><ul><li><a href="https://github.com/graphql-go/graphql" target="_blank" rel="noopener">graphql-go</a>： 支持查询解析器，但不支持GraphQL SDL解析。</li><li><a href="https://github.com/graphql-go/relay" target="_blank" rel="noopener">graphql-relay-go</a>： 支持react-relay，一般配合graphql-go使用。</li><li><a href="https://github.com/neelance/graphql-go" target="_blank" rel="noopener">neelance/graphql-go</a>： 支持查询解析器和GraphQL SDL解析。(缺少自动生成定义SDL代码工具)</li></ul><p>接下来分别使用<a href="https://github.com/graphql-go/graphql" target="_blank" rel="noopener">graphql-go</a>和<a href="https://github.com/neelance/graphql-go" target="_blank" rel="noopener">neelance/graphql-go</a>来实现一些简单示例。</p><h4 id="graphql-go库实现"><a href="#graphql-go库实现" class="headerlink" title="graphql-go库实现"></a>graphql-go库实现</h4><p>graphql-go支持查询解析器，不支持GraphQL SDL解析。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/graphql-go/graphql"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">string</span> <span class="string">`json:"id"`</span></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data <span class="keyword">map</span>[<span class="keyword">string</span>]user = <span class="keyword">map</span>[<span class="keyword">string</span>]user&#123;</span><br><span class="line"><span class="string">"1"</span>: user&#123;</span><br><span class="line">ID:   <span class="string">"1"</span>,</span><br><span class="line">Name: <span class="string">"Dan"</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"2"</span>: user&#123;</span><br><span class="line">ID:   <span class="string">"2"</span>,</span><br><span class="line">Name: <span class="string">"Lee"</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"3"</span>: user&#123;</span><br><span class="line">ID:   <span class="string">"3"</span>,</span><br><span class="line">Name: <span class="string">"Nick"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//   Create User object type with fields "id" and "name" by using GraphQLObjectTypeConfig:</span></span><br><span class="line"><span class="comment">//       - Name: name of object type</span></span><br><span class="line"><span class="comment">//       - Fields: a map of fields by using GraphQLFields</span></span><br><span class="line"><span class="comment">//   Setup type of field use GraphQLFieldConfig</span></span><br><span class="line"><span class="keyword">var</span> userType = graphql.NewObject(</span><br><span class="line">graphql.ObjectConfig&#123;</span><br><span class="line">Name: <span class="string">"User"</span>,</span><br><span class="line">Fields: graphql.Fields&#123;</span><br><span class="line"><span class="string">"id"</span>: &amp;graphql.Field&#123;</span><br><span class="line">Type: graphql.String,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"name"</span>: &amp;graphql.Field&#123;</span><br><span class="line">Type: graphql.String,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//   Create Query object type with fields "user" has type [userType] by using GraphQLObjectTypeConfig:</span></span><br><span class="line"><span class="comment">//       - Name: name of object type</span></span><br><span class="line"><span class="comment">//       - Fields: a map of fields by using GraphQLFields</span></span><br><span class="line"><span class="comment">//   Setup type of field use GraphQLFieldConfig to define:</span></span><br><span class="line"><span class="comment">//       - Type: type of field</span></span><br><span class="line"><span class="comment">//       - Args: arguments to query with current field</span></span><br><span class="line"><span class="comment">//       - Resolve: function to query data using params from [Args] and return value with current type</span></span><br><span class="line"><span class="keyword">var</span> queryType = graphql.NewObject(</span><br><span class="line">graphql.ObjectConfig&#123;</span><br><span class="line">Name: <span class="string">"Query"</span>,</span><br><span class="line">Fields: graphql.Fields&#123;</span><br><span class="line"><span class="string">"user"</span>: &amp;graphql.Field&#123;</span><br><span class="line">Type: userType,</span><br><span class="line">Args: graphql.FieldConfigArgument&#123;</span><br><span class="line"><span class="string">"id"</span>: &amp;graphql.ArgumentConfig&#123;</span><br><span class="line">Type: graphql.String,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">Resolve: <span class="function"><span class="keyword">func</span><span class="params">(p graphql.ResolveParams)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">idQuery, isOK := p.Args[<span class="string">"id"</span>].(<span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">if</span> isOK &#123;</span><br><span class="line"><span class="keyword">if</span> v, exist := data[idQuery]; exist &#123;</span><br><span class="line"><span class="keyword">return</span> v, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> schema, _ = graphql.NewSchema(</span><br><span class="line">graphql.SchemaConfig&#123;</span><br><span class="line">Query: queryType,</span><br><span class="line">&#125;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">executeQuery</span><span class="params">(query <span class="keyword">string</span>, schema graphql.Schema, vars <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span> \*<span class="title">graphql</span>.<span class="title">Result</span></span> &#123;</span><br><span class="line">result := graphql.Do(graphql.Params&#123;</span><br><span class="line">Schema:         schema,</span><br><span class="line">RequestString:  query,</span><br><span class="line">VariableValues: vars,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(result.Errors) &gt; <span class="number">0</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"wrong result, unexpected errors: %v"</span>, result.Errors)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">query := <span class="string">`query userinfo($uid: String = "1") &#123;</span></span><br><span class="line"><span class="string">user(id: $uid)&#123;</span></span><br><span class="line"><span class="string">id</span></span><br><span class="line"><span class="string">name</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">vars := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">"uid"</span>: <span class="string">"3"</span>&#125;</span><br><span class="line">r := executeQuery(query, schema, vars)</span><br><span class="line">rJSON, _ := json.Marshal(r)</span><br><span class="line">fmt.Printf(<span class="string">"%s \n"</span>, rJSON)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面示例是查询用户信息，作为第一个示例比较适合。示例中代码<strong>schema, _ = graphql.NewSchema</strong>定义了查询schema, 使用<strong>executeQuery</strong>查询结果并打印。schema中定义了查询入口<strong>Query: queryType</strong>，queryType中的Resolve处理请求。</p><p>点击<a href="https://github.com/gunsluo/go-example/blob/master/graphql/graphql-go/main.go" target="_blank" rel="noopener">源码</a>，运行<code>go run main.go</code>查看结果。</p><p><strong>提供GraphQL Server http服务</strong></p><p>构建http服务只需简单几行代码(<a href="https://github.com/gunsluo/go-example/blob/master/graphql/graphql-go/http.go" target="_blank" rel="noopener">源码</a>)：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.HandleFunc(<span class="string">"/graphql"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">result := executeQuery(r.URL.Query().Get(<span class="string">"query"</span>), schema, <span class="literal">nil</span>)</span><br><span class="line">json.NewEncoder(w).Encode(result)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"Now server is running on port 8080"</span>)</span><br><span class="line">fmt.Println(<span class="string">"Test with Get      : curl -g 'http://localhost:8080/graphql?query=&#123;user(id:\"1\")&#123;name&#125;&#125;'"</span>)</span><br><span class="line">http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>终端输入<code>curl -g &#39;http://localhost:8080/graphql?query={user(id:\&quot;1\&quot;){name}}&#39;</code>查看结果吧。</p><p><strong>使用graphql-go/handler包提供http服务</strong></p><p>使用graphql-go/handler包(<a href="https://github.com/gunsluo/go-example/blob/master/graphql/graphql-go/handle.go" target="_blank" rel="noopener">源码</a>)：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">h := handler.New(&amp;handler.Config&#123;</span><br><span class="line">Schema:   &amp;schema,</span><br><span class="line">Pretty:   <span class="literal">true</span>,</span><br><span class="line">GraphiQL: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">http.Handle(<span class="string">"/graphql"</span>, h)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"Now server is running on port 8080"</span>)</span><br><span class="line">fmt.Println(<span class="string">"Test with Get      : curl -g 'http://localhost:8080/graphql?query=&#123;user(id:\"1\")&#123;name&#125;&#125;'"</span>)</span><br><span class="line">http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用<code>graphql-go/handler</code>包后不需要executeQuery函数，并提供了额外的配置项。</p><h4 id="neelance-graphql-go库实现"><a href="#neelance-graphql-go库实现" class="headerlink" title="neelance/graphql-go库实现"></a>neelance/graphql-go库实现</h4><p>neelance/graphql-go支持查询解析器和GraphQL SDL解析。这里使用官方的starwars作为示例,查看<a href="http://graphql.cn/learn/queries/" target="_blank" rel="noopener">starwars示例</a></p><p>实现服务端按下面步骤实现</p><ol><li>编写GraphQL SDL <a href="https://github.com/gunsluo/go-example/blob/master/graphql/neelance/starwars/starwars.go" target="_blank" rel="noopener">源码</a></li><li>编写GraphQL SDL实现 <a href="https://github.com/gunsluo/go-example/blob/master/graphql/neelance/starwars/starwars.go" target="_blank" rel="noopener">源码</a></li><li>编写GraphQL Server实现 <a href="https://github.com/gunsluo/go-example/blob/master/graphql/neelance/main.go" target="_blank" rel="noopener">源码</a></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> schema *graphql.Schema</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">schema = graphql.MustParseSchema(starwars.Schema, &amp;starwars.Resolver&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.Handle(<span class="string">"/"</span>, http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.Write(page)</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">http.Handle(<span class="string">"/query"</span>, &amp;relay.Handler&#123;Schema: schema&#125;)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"Now server is running on port 8080."</span>)</span><br><span class="line">fmt.Println(<span class="string">"Test with Get      : http://localhost:8080"</span>)</span><br><span class="line">log.Fatal(http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>init()</strong>函数中初始化schema，<strong>main()</strong>中监听8080端口出来请求并响应。starwars包下的schema定义和逻辑实现可查看<a href="https://github.com/gunsluo/go-example/blob/master/graphql/neelance/starwars/starwars.go" target="_blank" rel="noopener">源码</a>。</p><h4 id="graphql-go-tools工具"><a href="#graphql-go-tools工具" class="headerlink" title="graphql-go-tools工具"></a>graphql-go-tools工具</h4><p>neelance的实现需要两部分schema的定义与Reolver的实现。graphql-go-tools包是我自己写的将定义的schema自动生成Reolver代码模板。目前只实现了将graphql文件转换为schema string，后续整理后持续实现。<br>示例代码：<a href="https://github.com/gunsluo/graphql-go-tools/tree/master/example" target="_blank" rel="noopener">graphql-go-tools</a></p><h4 id="Dataloader缓存"><a href="#Dataloader缓存" class="headerlink" title="Dataloader缓存"></a>Dataloader缓存</h4><p>dataloader是用于缓存数据的包，GraphQL是支持多层嵌套结构的（图关系，树结构），缓存数据可以减少请求次数提高性能。</p><ul><li><a href="https://github.com/nicksrandall/dataloader" target="_blank" rel="noopener">dataloader</a></li></ul><h3 id="GraphQL工具"><a href="#GraphQL工具" class="headerlink" title="GraphQL工具"></a>GraphQL工具</h3><p>chrome extension</p><ul><li>GraphQL Network</li><li>Apollo Client Developer Tools</li><li>ChromeiQL</li></ul><p>mac tools</p><ul><li>GraphQL Ide</li><li>GraphQL PalyGround</li><li>GraphiQL</li></ul><p>推荐使用GraphQL Ide，它有类似postman的collection功能，方便保存请求接口。也可以在程序debug模式中启用内置GraphiQL。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RSETful API接口想必大家都比较熟悉，GraphQL设计用于替代RESTful API接口，但目前不是所有情况都使用替代，他们各有优势。&lt;br&gt;GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 2015 React 欧洲大会上，Lee Byron 介绍了 Facebook 的 GraphQL ，包含 GraphQL 背后的故事，查询语句的示例，还有核心的概念。GraphQL 非常易懂，直接看查询语句就能知道查询出来的数据是什么样的。你可以把 GraphQL 的查询语句想成是没有值，只有属性的对象，返回的结果就是对应的属性还有对应值的对象。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="graphql" scheme="http://www.jerrylou.me/categories/graphql/"/>
    
    
      <category term="golang" scheme="http://www.jerrylou.me/tags/golang/"/>
    
      <category term="graphql" scheme="http://www.jerrylou.me/tags/graphql/"/>
    
      <category term="graphiql" scheme="http://www.jerrylou.me/tags/graphiql/"/>
    
  </entry>
  
  <entry>
    <title>Cassandra数据库Golang Driver</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-golang-driver-20171219.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-golang-driver-20171219.html</id>
    <published>2017-12-19T09:56:27.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>搭建cassandra集群后，项目使用Golang语言对cassandra进行操作。需要Golang Driver，有<a href="https://github.com/gocql/gocql" target="_blank" rel="noopener">gocql</a>，gocql只提供了curd的操作方法，但不支持创建、删除keyspace。查询后有两种方法可以实现：</p><ul><li>gocql + gocqltable，纯Golang实现，gocql持续更新中。</li><li><a href="https://github.com/mstump/golang-driver" target="_blank" rel="noopener">golang-driver</a>，需要<a href="https://github.com/datastax/cpp-driver" target="_blank" rel="noopener">C/C++ driver</a>支持。</li></ul><p>考虑后使用第一方法<br><a id="more"></a></p><p>下载代码包<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/gocql/gocql</span><br><span class="line"><span class="keyword">go</span> get -u github.com/kristoiv/gocqltable</span><br></pre></td></tr></table></figure></p><p>代码示例<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/gocql/gocql"</span></span><br><span class="line"><span class="string">"github.com/kristoiv/gocqltable"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generic initialization of gocql</span></span><br><span class="line">c := gocql.NewCluster(<span class="string">"10.112.68.186"</span>, <span class="string">"10.112.68.192"</span>)</span><br><span class="line">s, err := c.CreateSession()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"Unable to open up a session with the Cassandra database (err="</span> + err.Error() + <span class="string">")"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Tell gocqltable to use this session object as the default for new objects</span></span><br><span class="line">gocqltable.SetDefaultSession(s)</span><br><span class="line">fmt.Println(<span class="string">"Gocql session setup complete"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now we're ready to create our first keyspace. We start by getting a keyspace object</span></span><br><span class="line">keyspace := gocqltable.NewKeyspace(<span class="string">"gocqltable_test"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now lets create that in the database using the simple strategy and durable writes (true)</span></span><br><span class="line">err = keyspace.Create(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">"class"</span>:              <span class="string">"SimpleStrategy"</span>,</span><br><span class="line"><span class="string">"replication_factor"</span>: <span class="number">1</span>,</span><br><span class="line">&#125;, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123; <span class="comment">// If something went wrong we print the error and quit.</span></span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Keyspace created"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now that we have a very own keyspace to play with, lets create our first table.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// First we need a Row-object to base the table on. It will later be passed to the table wrapper</span></span><br><span class="line"><span class="comment">// to be used for returning row-objects as the answer to fetch requests.</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Email    <span class="keyword">string</span> <span class="comment">// Our primary key</span></span><br><span class="line">Password <span class="keyword">string</span></span><br><span class="line">Active   <span class="keyword">bool</span></span><br><span class="line">Created  time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Let's define and instantiate a table object for our user table</span></span><br><span class="line">userTable := <span class="keyword">struct</span> &#123;</span><br><span class="line">gocqltable.Table</span><br><span class="line">&#125;&#123;</span><br><span class="line">keyspace.NewTable(</span><br><span class="line"><span class="string">"users"</span>,           <span class="comment">// The table name</span></span><br><span class="line">[]<span class="keyword">string</span>&#123;<span class="string">"email"</span>&#125;, <span class="comment">// Row keys</span></span><br><span class="line"><span class="literal">nil</span>,               <span class="comment">// Range keys</span></span><br><span class="line">User&#123;&#125;,            <span class="comment">// We pass an instance of the user struct that will be used as a type template during fetches.</span></span><br><span class="line">),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Lets create this table in our cassandra database</span></span><br><span class="line">err = userTable.Create()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">""</span>)</span><br><span class="line">fmt.Println(<span class="string">"Table created: users"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now that we have a keyspace with a table in it: lets make a few rows! Notice that this is the base example, it uses CQL (not ORM)</span></span><br><span class="line"><span class="comment">// for database interactions such as INSERT/SELECT/UPDATE/DELETE.</span></span><br><span class="line">err = userTable.Query(<span class="string">"INSERT INTO gocqltable_test.users (email, password, active, created) VALUES (?, ?, ?, ?)"</span>, <span class="string">"1@example.com"</span>, <span class="string">"123456"</span>, <span class="literal">true</span>, time.Now().UTC()).Exec()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"User inserted: 1@example.com"</span>)</span><br><span class="line"></span><br><span class="line">err = userTable.Query(<span class="string">"INSERT INTO gocqltable_test.users (email, password, active, created) VALUES (?, ?, ?, ?)"</span>, <span class="string">"2@example.com"</span>, <span class="string">"123456"</span>, <span class="literal">true</span>, time.Now().UTC()).Exec()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"User inserted: 2@example.com"</span>)</span><br><span class="line"></span><br><span class="line">err = userTable.Query(<span class="string">"INSERT INTO gocqltable_test.users (email, password, active, created) VALUES (?, ?, ?, ?)"</span>, <span class="string">"3@example.com"</span>, <span class="string">"123456"</span>, <span class="literal">true</span>, time.Now().UTC()).Exec()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"User inserted: 3@example.com"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// With our database filled up with users, lets query it and print out the results.</span></span><br><span class="line">iter := userTable.Query(<span class="string">"SELECT * FROM gocqltable_test.users"</span>).Fetch()</span><br><span class="line">fmt.Println(<span class="string">""</span>)</span><br><span class="line">fmt.Println(<span class="string">"Fetched all from users:"</span>)</span><br><span class="line"><span class="keyword">for</span> row := <span class="keyword">range</span> iter.Range() &#123;</span><br><span class="line">user := row.(*User)        <span class="comment">// Our row variable is a pointer to "interface&#123;&#125;", and here we type assert it to a pointer to "User"</span></span><br><span class="line">fmt.Println(<span class="string">"User:"</span>, user) <span class="comment">// Let's just print that</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := iter.Close(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// You can also fetch a single row, obviously</span></span><br><span class="line">row, err := userTable.Query(<span class="string">`SELECT * FROM gocqltable_test.users WHERE email = ? LIMIT 1`</span>, <span class="string">"2@example.com"</span>).FetchRow()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">user := row.(*User)</span><br><span class="line">fmt.Println(<span class="string">""</span>)</span><br><span class="line">fmt.Println(<span class="string">"Fetched single row by email: "</span>, user)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Lets clean up after ourselves by dropping the keyspace.</span></span><br><span class="line">keyspace.Drop()</span><br><span class="line">fmt.Println(<span class="string">""</span>)</span><br><span class="line">fmt.Println(<span class="string">"Keyspace dropped"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建cassandra集群后，项目使用Golang语言对cassandra进行操作。需要Golang Driver，有&lt;a href=&quot;https://github.com/gocql/gocql&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gocql&lt;/a&gt;，gocql只提供了curd的操作方法，但不支持创建、删除keyspace。查询后有两种方法可以实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gocql + gocqltable，纯Golang实现，gocql持续更新中。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mstump/golang-driver&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;golang-driver&lt;/a&gt;，需要&lt;a href=&quot;https://github.com/datastax/cpp-driver&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C/C++ driver&lt;/a&gt;支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑后使用第一方法&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="golang" scheme="http://www.jerrylou.me/tags/golang/"/>
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="driver" scheme="http://www.jerrylou.me/tags/driver/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库Cassandra运维工具nodetool连接远程节点</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-nodetool-20171214.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-nodetool-20171214.html</id>
    <published>2017-12-14T12:25:12.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>cassandra集群安装成功后使用nodetool命令连接本机节点正常，连接其他节点报错：<code>connectexception &#39;connection refused (connection refused)&#39;</code>，查看nodetool连接的<code>7199</code>端口，监听<code>0.0.0.0</code>。<br>那为什么会连接不上呢？原因在于：cassandra启动是有两种模式，local和remote模式。可以在<code>conf/cassandra-env.sh</code>中查看和修改。</p><a id="more"></a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>cassandra默认使用local模式，配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">"x<span class="variable">$LOCAL_JMX</span>"</span> = <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">    LOCAL_JMX=yes</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the default port over which Cassandra will be available for</span></span><br><span class="line"><span class="comment"># JMX connections.</span></span><br><span class="line"><span class="comment"># For security reasons, you should not expose this port to the internet.  Firewall it if needed.</span></span><br><span class="line">JMX_PORT=<span class="string">"7199"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$LOCAL_JMX</span>"</span> = <span class="string">"yes"</span> ]; <span class="keyword">then</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcassandra.jmx.local.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.authenticate=false"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcassandra.jmx.remote.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line">  <span class="comment"># if ssl is enabled the same port cannot be used for both jmx and rmi so either</span></span><br><span class="line">  <span class="comment"># pick another value for this property or comment out to use a random port (though see CASSANDRA-7087 for origins)</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.rmi.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># turn on JMX authentication. See below for further options</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.authenticate=true"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># jmx ssl options</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl=true"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.need.client.auth=true"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.enabled.protocols=&lt;enabled-protocols&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.enabled.cipher.suites=&lt;enabled-cipher-suites&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStore=/path/to/keystore"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStorePassword=&lt;keystore-password&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.trustStore=/path/to/truststore"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.trustStorePassword=&lt;truststore-password&gt;"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>如果想使用remote模式，添加<code>LOCAL_JMX=false</code>和修改<code>-Dcom.sun.management.jmxremote.authenticate=false</code>，当然你可以开启加密方式。配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_JMX=<span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x<span class="variable">$LOCAL_JMX</span>"</span> = <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">    LOCAL_JMX=yes</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the default port over which Cassandra will be available for</span></span><br><span class="line"><span class="comment"># JMX connections.</span></span><br><span class="line"><span class="comment"># For security reasons, you should not expose this port to the internet.  Firewall it if needed.</span></span><br><span class="line">JMX_PORT=<span class="string">"7199"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$LOCAL_JMX</span>"</span> = <span class="string">"yes"</span> ]; <span class="keyword">then</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcassandra.jmx.local.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.authenticate=false"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcassandra.jmx.remote.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line">  <span class="comment"># if ssl is enabled the same port cannot be used for both jmx and rmi so either</span></span><br><span class="line">  <span class="comment"># pick another value for this property or comment out to use a random port (though see CASSANDRA-7087 for origins)</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.rmi.port=<span class="variable">$JMX_PORT</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># turn on JMX authentication. See below for further options</span></span><br><span class="line">  JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dcom.sun.management.jmxremote.authenticate=false"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># jmx ssl options</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl=true"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.need.client.auth=true"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.enabled.protocols=&lt;enabled-protocols&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Dcom.sun.management.jmxremote.ssl.enabled.cipher.suites=&lt;enabled-cipher-suites&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStore=/path/to/keystore"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStorePassword=&lt;keystore-password&gt;"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.trustStore=/path/to/truststore"</span></span><br><span class="line">  <span class="comment">#JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.trustStorePassword=&lt;truststore-password&gt;"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>修改配置后，重启节点。一切ok</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cassandra集群安装成功后使用nodetool命令连接本机节点正常，连接其他节点报错：&lt;code&gt;connectexception &amp;#39;connection refused (connection refused)&amp;#39;&lt;/code&gt;，查看nodetool连接的&lt;code&gt;7199&lt;/code&gt;端口，监听&lt;code&gt;0.0.0.0&lt;/code&gt;。&lt;br&gt;那为什么会连接不上呢？原因在于：cassandra启动是有两种模式，local和remote模式。可以在&lt;code&gt;conf/cassandra-env.sh&lt;/code&gt;中查看和修改。&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="nodetool" scheme="http://www.jerrylou.me/tags/nodetool/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库Cassandra监控MX4J</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-mx4j-20171213.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-mx4j-20171213.html</id>
    <published>2017-12-13T14:25:12.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>cassandra监控有许多方案，DataStax的Opscenter是比较耗的监控解决方案。可惜Opscenter6.0版本后已经不在支持开源cassandra版本。Opscenter5.x版本支持到cassandra2.1。最好可以使用cassandra自身支持的MX4J进行监控。</p><a id="more"></a><h3 id="下载MX4J"><a href="#下载MX4J" class="headerlink" title="下载MX4J"></a>下载MX4J</h3><p>下载页面：<a href="http://mx4j.sourceforge.net/" target="_blank" rel="noopener">http://mx4j.sourceforge.net/</a></p><p>解压后将mx4j-tools.jar拷贝到cassandra的安装目录的lib文件夹下<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip mx4j-<span class="number">3.0</span>.<span class="number">2</span>.zip</span><br><span class="line">cp mx4j-<span class="number">3.0</span>.<span class="number">2</span>/<span class="class"><span class="keyword">lib</span>/<span class="title">mx4j</span>-<span class="title">tools</span>.<span class="title">jar</span> <span class="title">apache</span>-<span class="title">cassandra</span>-3.11.1/<span class="title">lib</span>/</span></span><br></pre></td></tr></table></figure></p><h3 id="配置mx4j"><a href="#配置mx4j" class="headerlink" title="配置mx4j"></a>配置mx4j</h3><p>编辑<code>vim conf/cassandra-env.sh</code>，去除以下注释的配置项<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MX4J_ADDRESS=<span class="string">"-Dmx4jaddress=10.112.68.186"</span></span><br><span class="line">MX4J_PORT=<span class="string">"-Dmx4jport=8081"</span></span><br></pre></td></tr></table></figure></p><p>然后重启cassandra<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/cassandra</span><br></pre></td></tr></table></figure></p><h3 id="登录mx4j"><a href="#登录mx4j" class="headerlink" title="登录mx4j"></a>登录mx4j</h3><p>浏览器中输入：<a href="http://10.112.68.186:8081" target="_blank" rel="noopener">http://10.112.68.186:8081</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cassandra监控有许多方案，DataStax的Opscenter是比较耗的监控解决方案。可惜Opscenter6.0版本后已经不在支持开源cassandra版本。Opscenter5.x版本支持到cassandra2.1。最好可以使用cassandra自身支持的MX4J进行监控。&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="监控" scheme="http://www.jerrylou.me/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="monitor" scheme="http://www.jerrylou.me/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库Cassandra监控</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-monitor-20171206.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-monitor-20171206.html</id>
    <published>2017-12-06T15:25:12.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用packetbeat、elasticsearch、logstash、kibana为cassandra搭建监控系统。</p><a id="more"></a><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd <span class="keyword">add</span> <span class="built_in">es</span></span><br><span class="line">useradd -g <span class="built_in">es</span> <span class="built_in">es</span></span><br><span class="line">passwd <span class="built_in">es</span></span><br></pre></td></tr></table></figure><h3 id="ES安装"><a href="#ES安装" class="headerlink" title="ES安装"></a>ES安装</h3><p>下载<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.zip</span><br><span class="line">unzip elasticsearch-6.0.0.zip</span><br><span class="line">./bin/elasticsearch-plugin install x-pack</span><br></pre></td></tr></table></figure></p><p>修改配置<code>vim config/elasticsearch.yml</code>(未使用集群)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">network.host: 0.0.0.0</span><br></pre></td></tr></table></figure></p><p>设置内置用户密码(需要启动)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/x-pack/setup-passwords interactive</span><br><span class="line">elastic：elastic</span><br><span class="line">kibana：kibana</span><br><span class="line">logstash_system：logstash_system</span><br></pre></td></tr></table></figure></p><p>生成随机密码，建议生产环境使用<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/x-pack/setup-passwords auto</span><br></pre></td></tr></table></figure></p><p>启动：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch -d</span><br></pre></td></tr></table></figure></p><p>验证<br>浏览器中<a href="http://10.112.68.192:9200/，输入用户名密码(elastic：elastic)登录，检查es安装是否成功。" target="_blank" rel="noopener">http://10.112.68.192:9200/，输入用户名密码(elastic：elastic)登录，检查es安装是否成功。</a></p><h3 id="kibana安装"><a href="#kibana安装" class="headerlink" title="kibana安装"></a>kibana安装</h3><p>下载<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.0.0-linux-x86_64.tar.gz</span><br><span class="line">tar zxvf kibana-6.0.0-linux-x86_64.tar.gz</span><br><span class="line">bin/kibana-plugin install x-pack</span><br></pre></td></tr></table></figure></p><p>配置<code>vim config/kibana.yml</code><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.port: 5601</span><br><span class="line">server.host: <span class="string">"10.112.68.192"</span></span><br><span class="line">server.name: <span class="string">"es-kibana"</span></span><br><span class="line">elasticsearch.url: <span class="string">"http://localhost:9200"</span></span><br><span class="line">ibana.index: <span class="string">".kibana"</span></span><br><span class="line">elasticsearch.username: <span class="string">"elastic"</span></span><br><span class="line">elasticsearch.password: <span class="string">"elastic"</span></span><br></pre></td></tr></table></figure></p><p>启动<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/kibana &amp;</span><br></pre></td></tr></table></figure></p><p>浏览器中输入<a href="http://10.112.68.192:5601/" target="_blank" rel="noopener">http://10.112.68.192:5601/</a> 输入用户名密码登录(kibana：kibana，kibana权限不够请使用elastic用户设置)，检查kibana安装是否成功。</p><h3 id="Packetbeat安装"><a href="#Packetbeat安装" class="headerlink" title="Packetbeat安装"></a>Packetbeat安装</h3><p>Packetbeat 是 Elastic 开源的网络流量实时监控工具，目前支持了一些流行的应用软件，如MongoDB、Redis、MySQL、Cassandra等。</p><p>下载<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-6.0.0-linux-x86_64.tar.gz</span><br><span class="line">sudo yum install libpcap</span><br></pre></td></tr></table></figure></p><p>配置<code>vim packetbeat.yml</code>(其他数据收集关掉，只开启cassandra)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">packetbeat.interfaces.device: any</span><br><span class="line">- <span class="built_in">type</span>: cassandra</span><br><span class="line">  ports: [9042]</span><br><span class="line">setup.dashboards.enabled: <span class="literal">true</span></span><br><span class="line">setup.kibana:</span><br><span class="line">  host: <span class="string">"10.112.68.192:5601"</span></span><br><span class="line">  username: <span class="string">"kibana"</span></span><br><span class="line">  password: <span class="string">"kibana"</span></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  hosts: [<span class="string">"10.112.68.192:9200"</span>]</span><br><span class="line">  username: <span class="string">"elastic"</span></span><br><span class="line">  password: <span class="string">"elastic"</span></span><br></pre></td></tr></table></figure></p><p>启动<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sudo ./packetbeat -e -v &amp;</span><br></pre></td></tr></table></figure></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>编写JAVA测试代码：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.simple;</span><br><span class="line"></span><br><span class="line">import com.datastax.driver.core.Cluster;</span><br><span class="line">import com.datastax.driver.core.ResultSet;</span><br><span class="line">import com.datastax.driver.core.Row;</span><br><span class="line">import com.datastax.driver.core.Session;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by luoji on 04/12/2017.</span><br><span class="line"> */</span><br><span class="line">public class CreateAndPopulateKeyspace &#123;</span><br><span class="line"></span><br><span class="line">    static String[] CONTACT_POINTS = &#123;<span class="string">"10.112.68.186"</span>,<span class="string">"10.112.68.192"</span>&#125;;</span><br><span class="line">    static int PORT = 9042;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        CreateAndPopulateKeyspace client = new CreateAndPopulateKeyspace();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            client.connect(CONTACT_POINTS, PORT);</span><br><span class="line">            client.createSchema();</span><br><span class="line">            client.loadData();</span><br><span class="line">            client.querySchema();</span><br><span class="line"></span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            client.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Cluster cluster;</span><br><span class="line"></span><br><span class="line">    private Session session;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Initiates a connection to the cluster</span><br><span class="line">     * specified by the given contact point.</span><br><span class="line">     *</span><br><span class="line">     * @param contactPoints the contact points to use.</span><br><span class="line">     * @param port          the port to use.</span><br><span class="line">     */</span><br><span class="line">    public void connect(String[] contactPoints, int port) &#123;</span><br><span class="line"></span><br><span class="line">        cluster = Cluster.builder()</span><br><span class="line">                .addContactPoints(contactPoints).withPort(port)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">"Connected to cluster: %s%n"</span>, cluster.getMetadata().getClusterName());</span><br><span class="line"></span><br><span class="line">        session = cluster.connect();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Creates the schema (keyspace) and tables</span><br><span class="line">     * <span class="keyword">for</span> this example.</span><br><span class="line">     */</span><br><span class="line">    public void <span class="function"><span class="title">createSchema</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        session.execute(<span class="string">"CREATE KEYSPACE IF NOT EXISTS simplex WITH replication "</span> +</span><br><span class="line">                <span class="string">"= &#123;'class':'SimpleStrategy', 'replication_factor':1&#125;;"</span>);</span><br><span class="line"></span><br><span class="line">        session.execute(</span><br><span class="line">                <span class="string">"CREATE TABLE IF NOT EXISTS simplex.songs ("</span> +</span><br><span class="line">                        <span class="string">"id uuid PRIMARY KEY,"</span> +</span><br><span class="line">                        <span class="string">"title text,"</span> +</span><br><span class="line">                        <span class="string">"album text,"</span> +</span><br><span class="line">                        <span class="string">"artist text,"</span> +</span><br><span class="line">                        <span class="string">"tags set&lt;text&gt;,"</span> +</span><br><span class="line">                        <span class="string">"data blob"</span> +</span><br><span class="line">                        <span class="string">");"</span>);</span><br><span class="line"></span><br><span class="line">        session.execute(</span><br><span class="line">                <span class="string">"CREATE TABLE IF NOT EXISTS simplex.playlists ("</span> +</span><br><span class="line">                        <span class="string">"id uuid,"</span> +</span><br><span class="line">                        <span class="string">"title text,"</span> +</span><br><span class="line">                        <span class="string">"album text, "</span> +</span><br><span class="line">                        <span class="string">"artist text,"</span> +</span><br><span class="line">                        <span class="string">"song_id uuid,"</span> +</span><br><span class="line">                        <span class="string">"PRIMARY KEY (id, title, album, artist)"</span> +</span><br><span class="line">                        <span class="string">");"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Inserts data into the tables.</span><br><span class="line">     */</span><br><span class="line">    public void <span class="function"><span class="title">loadData</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        session.execute(</span><br><span class="line">                <span class="string">"INSERT INTO simplex.songs (id, title, album, artist, tags) "</span> +</span><br><span class="line">                        <span class="string">"VALUES ("</span> +</span><br><span class="line">                        <span class="string">"756716f7-2e54-4715-9f00-91dcbea6cf50,"</span> +</span><br><span class="line">                        <span class="string">"'La Petite Tonkinoise',"</span> +</span><br><span class="line">                        <span class="string">"'Bye Bye Blackbird',"</span> +</span><br><span class="line">                        <span class="string">"'Joséphine Baker',"</span> +</span><br><span class="line">                        <span class="string">"&#123;'jazz', '2013'&#125;)"</span> +</span><br><span class="line">                        <span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">        session.execute(</span><br><span class="line">                <span class="string">"INSERT INTO simplex.playlists (id, song_id, title, album, artist) "</span> +</span><br><span class="line">                        <span class="string">"VALUES ("</span> +</span><br><span class="line">                        <span class="string">"2cc9ccb7-6221-4ccb-8387-f22b6a1b354d,"</span> +</span><br><span class="line">                        <span class="string">"756716f7-2e54-4715-9f00-91dcbea6cf50,"</span> +</span><br><span class="line">                        <span class="string">"'La Petite Tonkinoise',"</span> +</span><br><span class="line">                        <span class="string">"'Bye Bye Blackbird',"</span> +</span><br><span class="line">                        <span class="string">"'Joséphine Baker'"</span> +</span><br><span class="line">                        <span class="string">");"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Queries and displays data.</span><br><span class="line">     */</span><br><span class="line">    public void <span class="function"><span class="title">querySchema</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        ResultSet results = session.execute(</span><br><span class="line">                <span class="string">"SELECT * FROM simplex.playlists "</span> +</span><br><span class="line">                        <span class="string">"WHERE id = 2cc9ccb7-6221-4ccb-8387-f22b6a1b354d;"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">"%-30s\t%-20s\t%-20s%n"</span>, <span class="string">"title"</span>, <span class="string">"album"</span>, <span class="string">"artist"</span>);</span><br><span class="line">        System.out.println(<span class="string">"-------------------------------+-----------------------+--------------------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Row row : results) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.printf(<span class="string">"%-30s\t%-20s\t%-20s%n"</span>,</span><br><span class="line">                    row.getString(<span class="string">"title"</span>),</span><br><span class="line">                    row.getString(<span class="string">"album"</span>),</span><br><span class="line">                    row.getString(<span class="string">"artist"</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Closes the session and the cluster.</span><br><span class="line">     */</span><br><span class="line">    public void <span class="function"><span class="title">close</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (session == null) &#123;</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">        cluster.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>浏览器中查看，可以看到刚才对cassandra所做的操作。<br><img src="https://static.oschina.net/uploads/space/2017/1207/184517_Gygb_3724856.png" alt="Alt text" title="kibana"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用packetbeat、elasticsearch、logstash、kibana为cassandra搭建监控系统。&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="监控" scheme="http://www.jerrylou.me/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="monitor" scheme="http://www.jerrylou.me/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库Cassandra数据模型</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-data-model-20171205.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-data-model-20171205.html</id>
    <published>2017-12-05T14:16:20.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用NoSQL存储数据和关系型数据库不一样，关系型数据库是行进行组织数据的。取而代之，应该把它想象成事一个有序的map结构。考虑它是一个map中嵌入另一个map：外部map的key为row key，内部map的key为column key，两个map的key都是有序的。</p><ul><li>区分频次大的查询和频次小的查询，有些查询可能只被查询几千次，其它可能被查询数十亿次；</li><li>还要考虑哪些查询对数据延迟是敏感的。确保你的模型优先满足查询频次大的查询和重要查询。</li><li>反范式化来提升查询性能</li></ul><a id="more"></a><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>是关于电子商务系统的一个功能，一个user可以喜欢多个item，同时一个item可以被多个user所喜爱，在关系型数据库中这个关系是通过many-to-many实现的。</p><p><code>用户表</code></p><table><thead><tr><th style="text-align:center">UserID</th><th style="text-align:center">Name</th><th style="text-align:center">Email</th></tr></thead><tbody><tr><td style="text-align:center">u1</td><td style="text-align:center">jerrylou</td><td style="text-align:center">jerrylou@gmail.com</td></tr><tr><td style="text-align:center">u2</td><td style="text-align:center">gunsluo</td><td style="text-align:center">gunsluo@gmail.com</td></tr></tbody></table><p><code>Item表</code></p><table><thead><tr><th style="text-align:center">ItemID</th><th style="text-align:center">Title</th><th style="text-align:center">Desc</th></tr></thead><tbody><tr><td style="text-align:center">i1</td><td style="text-align:center">mac pro</td><td style="text-align:center">mac book</td></tr><tr><td style="text-align:center">i2</td><td style="text-align:center">ipad</td><td style="text-align:center">mac tablet</td></tr></tbody></table><p><code>关系表</code></p><table><thead><tr><th style="text-align:center">ID</th><th style="text-align:center">UserID</th><th style="text-align:center">ItemID</th><th style="text-align:center">Timestamp</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">u1</td><td style="text-align:center">i1</td><td style="text-align:center">1512099720</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">u1</td><td style="text-align:center">i2</td><td style="text-align:center">1512109720</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">u2</td><td style="text-align:center">i1</td><td style="text-align:center">1512119720</td></tr></tbody></table><p>关联表查询</p><ul><li>通过user id获取user</li><li>通过item id获取item</li><li>获取指定user喜欢的所有item</li><li>查看指定item被那些user所喜爱</li></ul><p><strong>按照关系数据库模型设计数据模型</strong></p><p><code>用户表</code></p><table><tr><th style="text-align:center;" rowspan="2">Row Key(UserID)</th><td style="text-align:center;" colspan="2">Column Family</td> </tr><tr><th style="text-align:center;">Name</th> <th style="text-align:center;">Email</th></tr><tr><td style="text-align:center;">u1</td> <td style="text-align:center;">jerrylou</td> <td style="text-align:center;">jerrylou@gmail.com</td> </tr><tr><td style="text-align:center;">u2</td> <td style="text-align:center;">gunsluo</td> <td style="text-align:center;">gunsluo@gmail.com</td> </tr></table><p><code>Item表</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(ItemID)</th>          <td style="text-align:center;" colspan="2">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">Title</th>          <th style="text-align:center;">Desc</th>     </tr>     <tr>         <td style="text-align:center;">i1</td>          <td style="text-align:center;">mac pro</td>          <td style="text-align:center;">mac book</td>      </tr>     <tr>         <td style="text-align:center;">i2</td>          <td style="text-align:center;">ipad</td>          <td style="text-align:center;">mac tablet</td>      </tr> </table><p><code>关系表</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(ID)</th>          <td style="text-align:center;" colspan="3">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">UserID</th>          <th style="text-align:center;">ItemID</th>          <th style="text-align:center;">Timestamp</th>     </tr>     <tr>         <td style="text-align:center;">1</td>          <td style="text-align:center;">u1</td>          <td style="text-align:center;">i1</td>          <td style="text-align:center;">1512099720</td>      </tr>     <tr>         <td style="text-align:center;">2</td>          <td style="text-align:center;">u1</td>          <td style="text-align:center;">i2</td>          <td style="text-align:center;">1512109720</td>      </tr>     <tr>         <td style="text-align:center;">3</td>          <td style="text-align:center;">u2</td>          <td style="text-align:center;">i1</td>          <td style="text-align:center;">1512119720</td>      </tr> </table> <p>这个模型支持通过user id查询user和通过item id查询item。但无法简单查询某个user喜爱的所有item或者某个item被那些user所喜爱。</p><p><strong>范式化实体，并将它们反范式化到自定义索引</strong><br>无法查询的原因是按关系表的进行设计。实体用户表和Item表设计同上。关系表修改为：</p><p><code>User_By_Item表（CF）</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(ItemID)</th>          <td style="text-align:center;" colspan="2">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">u1</th>          <th style="text-align:center;">u2</th>     </tr>     <tr>         <td style="text-align:center;">i1</td>          <td style="text-align:center;">jerrylou</td>          <td style="text-align:center;">gunsluo</td>      </tr>     <tr>         <td style="text-align:center;">i2</td>          <td style="text-align:center;">jerrylou</td>          <td style="text-align:center;"></td>      </tr> </table> <p><code>Item_By_User表（CF）</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(UserID)</th>          <td style="text-align:center;" colspan="2">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">i1</th>          <th style="text-align:center;">i2</th>     </tr>     <tr>         <td style="text-align:center;">u1</td>          <td style="text-align:center;">mac pro</td>          <td style="text-align:center;">ipad</td>      </tr>     <tr>         <td style="text-align:center;">u2</td>          <td style="text-align:center;">mac pro</td>          <td style="text-align:center;"></td>      </tr> </table> <ul><li>通过所给item id，获取具体item信息（title, desc等等），并一同查询喜欢这个item的user name(反范式)</li><li>通过所给的user id，获取具体user信息，并一同查询user喜欢的所有item titile(反范式)</li></ul><p><strong>使用composite column</strong><br>之前忽略了timestamp，使用timestamp和userid【或ItemID】合并为一个composite column key，这样就可以按时间进行排序了。</p><p><code>User_By_Item表（CF）</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(ItemID)</th>          <td style="text-align:center;" colspan="3">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">1512099720|u1</th>          <th style="text-align:center;">1512109720|u1</th>          <th style="text-align:center;">1512119720|u2</th>     </tr>     <tr>         <td style="text-align:center;">i1</td>          <td style="text-align:center;">jerrylou</td>          <td style="text-align:center;"></td>          <td style="text-align:center;">gunsluo</td>      </tr>     <tr>         <td style="text-align:center;">i2</td>          <td style="text-align:center;"></td>          <td style="text-align:center;">gunsluo</td>          <td style="text-align:center;"></td>      </tr> </table><p><code>Item_By_User表（CF）</code></p><table>     <tr>         <th style="text-align:center;" rowspan="2">Row Key(UserID)</th>          <td style="text-align:center;" colspan="3">Column Family</td>     </tr>     <tr>         <th style="text-align:center;">1512099720|i1</th>          <th style="text-align:center;">1512109720|i2</th>          <th style="text-align:center;">1512119720|i1</th>     </tr>     <tr>         <td style="text-align:center;">u1</td>          <td style="text-align:center;">mac pro</td>          <td style="text-align:center;">ipad</td>          <td style="text-align:center;"></td>      </tr>     <tr>         <td style="text-align:center;">u2</td>          <td style="text-align:center;"></td>          <td style="text-align:center;"></td>          <td style="text-align:center;">mac pro</td>      </tr> </table><p>按照具体的查询需求设计数据模型。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用NoSQL存储数据和关系型数据库不一样，关系型数据库是行进行组织数据的。取而代之，应该把它想象成事一个有序的map结构。考虑它是一个map中嵌入另一个map：外部map的key为row key，内部map的key为column key，两个map的key都是有序的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;区分频次大的查询和频次小的查询，有些查询可能只被查询几千次，其它可能被查询数十亿次；&lt;/li&gt;
&lt;li&gt;还要考虑哪些查询对数据延迟是敏感的。确保你的模型优先满足查询频次大的查询和重要查询。&lt;/li&gt;
&lt;li&gt;反范式化来提升查询性能&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="data model" scheme="http://www.jerrylou.me/tags/data-model/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库Cassandra集群部署</title>
    <link href="http://www.jerrylou.me/nosql/cassandra-install-20171204.html"/>
    <id>http://www.jerrylou.me/nosql/cassandra-install-20171204.html</id>
    <published>2017-12-04T13:32:54.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Linux系统部署NoSQL数据库Cassandra集群。</p><a id="more"></a><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><ul><li>OS ：CentOS Linux release 7.3.1611 (Core)</li><li>CPU：Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz 8核</li><li>内存：16G</li><li>JDK:  1.8u151</li><li>Python: 2.7.5</li><li>Cassandra: 3.11.1</li></ul><table><thead><tr><th style="text-align:center">服务器</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">10.112.68.186</td><td style="text-align:center">节点1</td></tr><tr><td style="text-align:center">10.112.68.191</td><td style="text-align:center">节点2</td></tr><tr><td style="text-align:center">10.112.68.192</td><td style="text-align:center">节点3</td></tr></tbody></table><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h4><p>下载地址: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>解压放到/usr/java/jdk1.8.0_151/目录</p><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd cassandra</span><br><span class="line">useradd -g cassandra cassandra</span><br><span class="line">passwd cassandra</span><br></pre></td></tr></table></figure><p>切换用户<code>su cassandra</code>，配置环境变量<code>vim ~/.bashrc</code><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_151/</span><br><span class="line">JRE_HOME=/usr/java/jdk1.8.0_151/jre</span><br><span class="line">PATH=.:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JRE_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">CLASSPATH=.:<span class="variable">$CLASSPATH</span>:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME JRE_HOME PATH CLASSPATH</span><br><span class="line"></span><br><span class="line">CASSANDRA_HOME=<span class="variable">$HOME</span>/apache-cassandra-3.11.1</span><br><span class="line"><span class="built_in">export</span> CASSANDRA_HOME</span><br></pre></td></tr></table></figure></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shuosc.org/apache/cassandra/3.11.1/apache-cassandra-3.11.1-bin.tar.gz</span><br><span class="line">tar -xvf apache-cassandra-3.11.1-bin.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-cassandra-3.11.1</span><br></pre></td></tr></table></figure><h4 id="配置vim-conf-cassandra-yaml"><a href="#配置vim-conf-cassandra-yaml" class="headerlink" title="配置vim conf/cassandra.yaml"></a>配置<code>vim conf/cassandra.yaml</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cluster_name: <span class="string">'JCPT Test Cluster'</span></span><br><span class="line">- seeds: <span class="string">"10.112.68.186,10.112.68.192"</span></span><br><span class="line">listen_address: 10.112.68.186</span><br><span class="line">rpc_address: 10.112.68.186</span><br></pre></td></tr></table></figure><p>不同节点listen_address、rpc_address不同，cluster_name和seeds是相同的。</p><ul><li>JVM配置: conf/cassandra-env.sh（JVM_OPTS）</li><li>日志配置：conf/logback.xml</li></ul><p>建立数据和日志的存储目录（生产环境数据和日志放在不同分期）<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br><span class="line">mkdir data/data</span><br><span class="line">mkdir data/commitlog</span><br><span class="line">mkdir data/saved_caches</span><br><span class="line">mkdir data/hints</span><br><span class="line">mkdir logs</span><br></pre></td></tr></table></figure></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bin/cassandra -f (前端启动)</span><br><span class="line">./bin/cassandra</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/cqlsh</span><br><span class="line">SELECT cluster_name, listen_address FROM system.local;</span><br></pre></td></tr></table></figure><p>参考：<a href="http://cassandra.apache.org/doc/latest/configuration/cassandra_config_file.html" target="_blank" rel="noopener">http://cassandra.apache.org/doc/latest/configuration/cassandra_config_file.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Linux系统部署NoSQL数据库Cassandra集群。&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="install" scheme="http://www.jerrylou.me/tags/install/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL数据库对比</title>
    <link href="http://www.jerrylou.me/nosql/nosql-compare-20171106.html"/>
    <id>http://www.jerrylou.me/nosql/nosql-compare-20171106.html</id>
    <published>2017-11-06T13:14:50.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要对主流NoSQL进行对比，从各个方面进行对比，意在不同场景下选择正确的 NoSql 数据库。本文主要对比HBase、Cassandra、MongoDB、LevelDB、DoltDB。</p><a id="more"></a><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">集群</th><th style="text-align:center">数据一致性</th><th style="text-align:center">事务</th><th style="text-align:center">扩展能力</th></tr></thead><tbody><tr><td style="text-align:center">HBase</td><td style="text-align:center">支持</td><td style="text-align:center">强一致性</td><td style="text-align:center">不支持</td><td style="text-align:center">动态扩容</td></tr><tr><td style="text-align:center">Cassandra</td><td style="text-align:center">支持</td><td style="text-align:center">可调节</td><td style="text-align:center">轻量级</td><td style="text-align:center">虚拟节点,数据迁移</td></tr><tr><td style="text-align:center">LevelDB</td><td style="text-align:center">不支持</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">BoltDB</td><td style="text-align:center">不支持</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">MongoDB</td><td style="text-align:center">Replica Set，Master-Slave</td><td style="text-align:center">强一致性</td><td style="text-align:center">支持</td><td style="text-align:center">命名扩容</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">存储模型</th><th style="text-align:center">NoSQL类型</th><th style="text-align:center">语言</th><th style="text-align:center">描述</th><th style="text-align:center">公司</th></tr></thead><tbody><tr><td style="text-align:center">HBase</td><td style="text-align:center">HDFS</td><td style="text-align:center">column-oriented</td><td style="text-align:center">JAVA</td><td style="text-align:center">实时数据查询</td><td style="text-align:center">google</td></tr><tr><td style="text-align:center">Cassandra</td><td style="text-align:center">CommitLog Memtable SSTable</td><td style="text-align:center">column-oriented</td><td style="text-align:center">JAVA</td><td style="text-align:center">CQL支持</td><td style="text-align:center">facebook</td></tr><tr><td style="text-align:center">LevelDB</td><td style="text-align:center">Log Memtable SSTable</td><td style="text-align:center">key-value</td><td style="text-align:center">多写少读</td><td style="text-align:center">内嵌数据库</td><td style="text-align:center">开源</td></tr><tr><td style="text-align:center">BoltDB</td><td style="text-align:center">单文件</td><td style="text-align:center">key-value</td><td style="text-align:center">Golang</td><td style="text-align:center">内嵌数据库</td><td style="text-align:center">开源</td></tr><tr><td style="text-align:center">MongoDB</td><td style="text-align:center">文件</td><td style="text-align:center">document-oriented</td><td style="text-align:center">C/C++</td><td style="text-align:center">文档存储</td><td style="text-align:center">开源</td></tr></tbody></table><ul><li>HBase数据库在HRegionServer宕机恢复需要时间长。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要对主流NoSQL进行对比，从各个方面进行对比，意在不同场景下选择正确的 NoSql 数据库。本文主要对比HBase、Cassandra、MongoDB、LevelDB、DoltDB。&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://www.jerrylou.me/categories/nosql/"/>
    
    
      <category term="cassandra" scheme="http://www.jerrylou.me/tags/cassandra/"/>
    
      <category term="nosql" scheme="http://www.jerrylou.me/tags/nosql/"/>
    
      <category term="hbase" scheme="http://www.jerrylou.me/tags/hbase/"/>
    
      <category term="leveldb" scheme="http://www.jerrylou.me/tags/leveldb/"/>
    
      <category term="boltdb" scheme="http://www.jerrylou.me/tags/boltdb/"/>
    
      <category term="mongodb" scheme="http://www.jerrylou.me/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Centos7搭建shadowsocksrrs privoxy, 支持Chacha20加密</title>
    <link href="http://www.jerrylou.me/%E7%AC%94%E8%AE%B0/centos-shadowsocksrrs-privoxy-20170821.html"/>
    <id>http://www.jerrylou.me/笔记/centos-shadowsocksrrs-privoxy-20170821.html</id>
    <published>2017-08-21T14:55:48.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>shadowsocksrrs和shadowsocks-libev是shadowsocks之后的两分支。window和mac os系统上使用shadowsocks-libev的图形客户端进行翻墙，它安装和配置简单，这里就不在介绍。本文主要对linux服务器如何翻墙进行介绍，下面以Centos7为例。</p><a id="more"></a><h3 id="安装shadowsocksrrs"><a href="#安装shadowsocksrrs" class="headerlink" title="安装shadowsocksrrs"></a>安装shadowsocksrrs</h3><p>Pip 是 Python 的包管理工具，这里我们用 pip 安装 shadowsocks。</p><p>使用 <code>yum install -y pip</code> 安装，官方一个最小化的 CentOS，没有这个包，可以手动安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"https://bootstrap.pypa.io/get-pip.py"</span> -o <span class="string">"get-pip.py"</span></span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p>安装客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>配置客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/shadowsocks</span><br><span class="line">vim config.json</span><br></pre></td></tr></table></figure><p>配置如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"server_ip"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:4004,</span><br><span class="line">    <span class="string">"local_port"</span>:8016,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:600,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>启动客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslocal -c /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure><p>使用systmed</p><p>新建文件<code>/etc/systemd/system/ssclient.service</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/ssclient.service</span><br></pre></td></tr></table></figure></p><p>文件中内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Shadowsocks Client</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/config.json</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>启动客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start ssclient</span><br></pre></td></tr></table></figure><p>客户端状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status ssclient</span><br></pre></td></tr></table></figure></p><p>开启启动客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ssclient</span><br></pre></td></tr></table></figure><p>好了，shadowsocksrrs客户端安装完成，由于pip安装的客户端不支持chacha20等加密方式，要支持这些加密方式，需要下载源码。</p><h3 id="支持chacha20加密方式"><a href="#支持chacha20加密方式" class="headerlink" title="支持chacha20加密方式"></a>支持chacha20加密方式</h3><p>安装libsodium</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span><br><span class="line">tar zxvf LATEST.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libsodium-1.0.13</span><br><span class="line">./configure</span><br><span class="line">make -j8 &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> /usr/<span class="built_in">local</span>/lib &gt; /etc/ld.so.conf.d/usr_local_lib.conf</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>下载源码<br>由于shadowsocksrrs作者别请去喝茶，代码已经删除。自己备份了一份。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/gunsluo/shadowsocksrrs.git</span><br><span class="line"><span class="built_in">cd</span> shadowsocksrrs/shadowsocks/</span><br></pre></td></tr></table></figure><p>可以看到目录下有local.py文件，它就是客户端入口函数文件。</p><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure><p>配置如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"server_ip"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>: 6003,</span><br><span class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>: 8086,</span><br><span class="line">    <span class="string">"password"</span>: <span class="string">"password"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>: 600,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"chacha20"</span>,</span><br><span class="line">    <span class="string">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>,</span><br><span class="line">    <span class="string">"obfs"</span>: <span class="string">"tls1.2_ticket_auth"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>客户端加密配置必须和服务器端相同，根据自己的需求做响应修改。</p><p>启动客户端</p><p>在下载的源码目录下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ./local.py -c /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure></p><p>编写启动脚步<code>ssclient</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">/root/shadowsocksrrs/shadowsocks/local.py -c /etc/shadowsocks/japan.json -d <span class="variable">$1</span></span><br></pre></td></tr></table></figure></p><p>mv ssclient /usr/bin/</p><p>启动客户端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssclient start</span><br></pre></td></tr></table></figure></p><h3 id="测试安装shadowsocksrrs"><a href="#测试安装shadowsocksrrs" class="headerlink" title="测试安装shadowsocksrrs"></a>测试安装shadowsocksrrs</h3><p>测试命令：<code>curl --socks5 127.0.0.1:8086 http://httpbin.org/ip</code> 返回vpn服务器ip，说明安装成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"x.x.x.x"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="安装privoxy"><a href="#安装privoxy" class="headerlink" title="安装privoxy"></a>安装privoxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install privoxy</span><br></pre></td></tr></table></figure><p>编辑 <code>vim /etc/privoxy/config</code>，确保下面两项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen-address  127.0.0.1:8016</span><br><span class="line">forward-socks5t   /               127.0.0.1:8086 .</span><br></pre></td></tr></table></figure><p>启动privoxy<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/privoxy --user privoxy /etc/privoxy/config</span><br></pre></td></tr></table></figure></p><h3 id="配置终端使用代理的命令"><a href="#配置终端使用代理的命令" class="headerlink" title="配置终端使用代理的命令"></a>配置终端使用代理的命令</h3><p>在<code>~/.zshrc</code> 或者<code>~/.bashrc</code>中加入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">setproxy</span></span>() &#123;</span><br><span class="line">    <span class="built_in">export</span> &#123;http,https,ftp&#125;_proxy=<span class="string">"http://127.0.0.1:8016"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">unsetproxy</span></span>() &#123;</span><br><span class="line">    <span class="built_in">unset</span> &#123;http,https,ftp&#125;_proxy</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重新登录终端，setproxy开始代理，unsetproxy关闭代理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;shadowsocksrrs和shadowsocks-libev是shadowsocks之后的两分支。window和mac os系统上使用shadowsocks-libev的图形客户端进行翻墙，它安装和配置简单，这里就不在介绍。本文主要对linux服务器如何翻墙进行介绍，下面以Centos7为例。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://www.jerrylou.me/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="区块链" scheme="http://www.jerrylou.me/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="shadowsocksrrs" scheme="http://www.jerrylou.me/tags/shadowsocksrrs/"/>
    
  </entry>
  
  <entry>
    <title>IM即时通讯系统业务流程</title>
    <link href="http://www.jerrylou.me/im/im-system-workflow-20170705.html"/>
    <id>http://www.jerrylou.me/im/im-system-workflow-20170705.html</id>
    <published>2017-07-05T13:10:23.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文件讲述了IM系统的整体架构(<a href="/im/im-system-architecture-20170628.html">查看</a>)，对细节的业务流程没有详细的说明。这篇文章主要梳理消息的流转过程，也就是用户A发送消息给客户B，消息是如何到达用户B的。主要流程有消息发送，消息推送，心跳消息</p><a id="more"></a><p>首先对上文中没提到的概念进行说明：</p><ul><li>Session 用户在一定时间的有效会话服务。</li><li>Room    用户对用户发送的消息(个人消息、群消息、讨论组消息)，其实就是一个发布订阅过程，发布者将消息发送到room，订阅者从room中取走消息，对于这样的上下文叫room，有些IM系统中将个人消息的上下文叫channel，这里我统一叫room，只不过个人消息是一个订阅者的room。</li><li>Msg Queue 未读消息队列</li><li>hearbeat 心跳服务器，之前包括在了logic中。</li><li>caller 消息推送触发者，可能是hearbeat，可能是logic。</li><li>sequence 消息序列号生成器</li></ul><h3 id="消息发送流程"><a href="#消息发送流程" class="headerlink" title="消息发送流程"></a>消息发送流程</h3><p>用户A发送消息hello给用户B为例。</p><ol><li>用户A使用终端登录客户端，用户A登录需要验证用户身份（用户权限体系，这里不多说）。登录成功服务器会返回用户唯一标识uid给客户端，同时返回用户A的好友列表（用户B当然就在这个列表中了），之后开始发送心跳消息（这个流程下面讲）</li><li>用户A使用客户端发送hello消息。客户端组装消息报文msg request，消息体包括：uid、消息内容、发送消息时间、发送设备ID、Room ID等。将msg request发送到transfer接入服务，然后等待ack响应。</li><li>tranfer接收到客户端发送的信息后，使用token(uid)去logic中得到连接描述key。</li><li>logic服务收到消息会做几件事情，A. 返回token(uid)的key(uid+roomid) B. 通知router更新用户状态(uid)，C. 通知router更新用户接入信息，uid、transferid、更新时间</li><li>tranfer接收到logic返回key，以key保存连接，带上transferid将消息分发到logic服务，等待logic服务处理。</li><li>logic服务收到消息会做几件事情，D. 排重，根据uid、消息发送时间、设备ID在缓存中查下是否存在。 </li><li>logic服务收到消息会做几件事情，E. 生成msgid，以uid + transferid + roomid取个最新的msgid，自增+1或者用snake算法得到自增的msgid。</li><li>logic服务收到消息会做几件事情，F. 保存消息 G. 响应ack ack报文: uid、Room ID、msgid。</li><li>transfer收到ack后，把ack响应返回给客户端。</li><li>客户端收到ack报文，更新本地信箱，信箱中有msgid的消息即为<strong>消息发送成功</strong>。</li></ol><p><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fh9sy3jpibj31hy10cjvj.jpg" alt="Alt text"></p><p>到此用户A的消息就发送出去了，这好像个用户B没有上面关系呀，接下来说消息推送流程。<br><strong>注意</strong> 上面流程中没有说明Room ID是如何生成和分配的，通常是按照具体业务场景进行生成和分配，如按用户A的好友列表进行维护。</p><h3 id="消息推送流程"><a href="#消息推送流程" class="headerlink" title="消息推送流程"></a>消息推送流程</h3><p>用户B如何收到消息呢，首先用户B已经登录客户端（这里不讨论离线消息）。</p><ol><li>logic服务获取Room ID下的所有用户。(维护用户A好友列表的服务可以提供)</li><li>logic服务去router中用户是否在线，并获取在线用户的transferid。</li><li>logic服务更新transferid将消息推送到对应的tranfer。</li><li>logic服务将此消息加入到未读消息队列Msg Queue。</li><li>tranfer收到消息根据uid找到对应连接将其发送到客户端。</li><li>客户端接收到消息，将消息保存到本地信箱，按msgid排序展示给用户B。</li></ol><p><img src="http://wx3.sinaimg.cn/mw690/0065glrAgy1fh9sxyrm0oj31jg0syjub.jpg" alt="Alt text"></p><p>客户B终于收到了消息了，真的一定收到了吗？ transfer推送了消息，没有确认机制保证消息一定到达，这过程可能出现网络问题，也可能客户B异常。所以我们还需要一种机制保证客户的正确的在线状态和消息拉取确认机制。</p><h3 id="心跳消息流程"><a href="#心跳消息流程" class="headerlink" title="心跳消息流程"></a>心跳消息流程</h3><p>心跳消息是客户端登录成功后发起的，心跳时长根据不同的网络环境设置不同值。</p><ol><li>用户A使用客户端发送心跳消息。客户端组装消息报文hearbeat request，消息体包括：uid、网络类型、发送消息时间、发送设备ID、所有Room ID的最后的msgid(确保机制)。将hearbeat request发送到transfer接入服务，然后等待ack响应。</li><li>tranfer接收到客户端发送的心跳，带上transferid将消息分发到hearbeat服务，等待hearbeat服务处理。</li><li>hearbeat服务收到消息会做几件事情，A. 通知router更新用户状态(uid)，B. 通知router更新用户接入信息，uid、transferid、更新时间</li><li>hearbeat服务收到消息会做几件事情，C. Room ID在sequence查询最新的msgid D. 查询的msgid不等于上报的msgid，发送消息通知logic服务启动消息推送流程(uid、Room ID、上报的msgid)</li><li>logic服务收到消息，去未读消息队列中取所有大于上报msgid的消息，在到数据存储层取得消息的全部内容，将消息发送到transfer。</li><li>tranfer收到消息根据uid找到对应连接将其发送到客户端。</li><li>客户端接收到消息，将消息保存到本地信箱，按msgid排序展示给用户B。</li><li>hearbeat服务收到消息会做几件事情，E. 响应hearbeat ack，如果需要调整心跳时长，可以将心跳时长加入到ack响应中。</li><li>tranfer收到消息根据uid找到对应连接将其发送到客户端。</li><li>客户端接收到消息，更新自己的心跳时长。</li></ol><p>hearbeat心跳时间间隔根据不同的网络环境，心跳发送成功次数，信息发送次数等因素进行动态调整。</p><h3 id="长连接维护"><a href="#长连接维护" class="headerlink" title="长连接维护"></a>长连接维护</h3><p>长连接的TCP服务器与客户端通讯: client向server发起连接，server接受client连接，双方建立连接。Client与server完成一次读写之后，它们之间的连接并不会主动关闭，后续的读写操作会继续使用这个连接。<br>下面是用Golang编写的tcp服务端与客户端，客户端每隔一段时间发送消息到服务器，服务器响应回复。代码<code>conn, err = lis.AcceptTCP();</code>中的conn是需要维护的连接，transfer中确保uid与conn的关系，可以使用<code>map[string]*net.TCPConn</code>。</p><p>服务端代码<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">Debug  = <span class="literal">true</span></span><br><span class="line">maxInt = <span class="number">1</span>&lt;&lt;<span class="number">31</span> - <span class="number">1</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">InitTCP([]<span class="keyword">string</span>&#123;<span class="string">"0.0.0.0:9999"</span>&#125;)</span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitTCP</span><span class="params">(addrs []<span class="keyword">string</span>)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">bind     <span class="keyword">string</span></span><br><span class="line">listener *net.TCPListener</span><br><span class="line">addr     *net.TCPAddr</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> _, bind = <span class="keyword">range</span> addrs &#123;</span><br><span class="line"><span class="keyword">if</span> addr, err = net.ResolveTCPAddr(<span class="string">"tcp4"</span>, bind); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"net.ResolveTCPAddr(\"tcp4\", \"%s\") error(%v)"</span>, bind, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> listener, err = net.ListenTCP(<span class="string">"tcp4"</span>, addr); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"net.ListenTCP(\"tcp4\", \"%s\") error(%v)"</span>, bind, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> Debug &#123;</span><br><span class="line">log.Printf(<span class="string">"start tcp listen: \"%s\""</span>, bind)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> acceptTCP(listener)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">acceptTCP</span><span class="params">(lis *net.TCPListener)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">conn *net.TCPConn</span><br><span class="line">err  error</span><br><span class="line">r    <span class="keyword">int</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> conn, err = lis.AcceptTCP(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// if listener close then return</span></span><br><span class="line">log.Printf(<span class="string">"listener.Accept(\"%s\") error(%v)"</span>, lis.Addr().String(), err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = conn.SetKeepAlive(<span class="literal">false</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"conn.SetKeepAlive() error(%v)"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = conn.SetReadBuffer(<span class="number">256</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"conn.SetReadBuffer() error(%v)"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = conn.SetWriteBuffer(<span class="number">2048</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"conn.SetWriteBuffer() error(%v)"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> serveTCP(conn, r)</span><br><span class="line"><span class="keyword">if</span> r++; r == maxInt &#123;</span><br><span class="line">r = <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">serveTCP</span><span class="params">(conn *net.TCPConn, r <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line"><span class="comment">// ip addr</span></span><br><span class="line">lAddr = conn.LocalAddr().String()</span><br><span class="line">rAddr = conn.RemoteAddr().String()</span><br><span class="line">rbuf  = <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> Debug &#123;</span><br><span class="line">log.Printf(<span class="string">"start tcp serve \"%s\" with \"%s\""</span>, lAddr, rAddr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reader := bufio.NewReader(conn)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := reader.Read(rbuf)</span><br><span class="line"><span class="comment">//message, err := reader.ReadString('\n')</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">message := rbuf[<span class="number">0</span>:n]</span><br><span class="line">log.Printf(<span class="string">"read message (%s)"</span>, <span class="keyword">string</span>(message))</span><br><span class="line"></span><br><span class="line">reply := time.Now().String()</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(reply))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>客户端代码<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"net"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> quitSemaphore <span class="keyword">chan</span> <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> tcpAddr *net.TCPAddr</span><br><span class="line">tcpAddr, _ = net.ResolveTCPAddr(<span class="string">"tcp"</span>, <span class="string">"192.168.0.9:9999"</span>)</span><br><span class="line"></span><br><span class="line">conn, _ := net.DialTCP(<span class="string">"tcp"</span>, <span class="literal">nil</span>, tcpAddr)</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line">fmt.Println(<span class="string">"connected!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> onMessageRecived(conn)</span><br><span class="line"></span><br><span class="line">b := []<span class="keyword">byte</span>(<span class="string">"time"</span>)</span><br><span class="line">conn.Write(b)</span><br><span class="line"></span><br><span class="line">&lt;-quitSemaphore</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">onMessageRecived</span><span class="params">(conn *net.TCPConn)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rbuf = <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line">reader := bufio.NewReader(conn)</span><br><span class="line">value := <span class="number">5</span></span><br><span class="line">incr := <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := reader.Read(rbuf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">quitSemaphore &lt;- <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">msg := rbuf[<span class="number">0</span>:n]</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(msg))</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Duration(value) * time.Second)</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(msg))</span><br><span class="line">value += incr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>重新梳理了消息流转流程，基本清楚了消息的轮转，对Room ID的生成和分配还需进行研究。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上篇文件讲述了IM系统的整体架构(&lt;a href=&quot;/im/im-system-architecture-20170628.html&quot;&gt;查看&lt;/a&gt;)，对细节的业务流程没有详细的说明。这篇文章主要梳理消息的流转过程，也就是用户A发送消息给客户B，消息是如何到达用户B的。主要流程有消息发送，消息推送，心跳消息&lt;/p&gt;
    
    </summary>
    
      <category term="im" scheme="http://www.jerrylou.me/categories/im/"/>
    
    
      <category term="im" scheme="http://www.jerrylou.me/tags/im/"/>
    
      <category term="即时通讯" scheme="http://www.jerrylou.me/tags/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>IM即时通讯系统架构设计</title>
    <link href="http://www.jerrylou.me/im/im-system-architecture-20170628.html"/>
    <id>http://www.jerrylou.me/im/im-system-architecture-20170628.html</id>
    <published>2017-06-28T12:24:51.000Z</published>
    <updated>2018-06-29T10:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>即时通信（Instant Messaging，简称IM）是一种通过网络进行实时通信的系统，允许两人或多人使用网络即时的传递文字消息、文件、语音与视频交流。<br>微信、QQ基本占领的IM即时通讯系统的半个江湖，易信、钉钉、飞信、旺旺、咚咚、陌陌也各有市场。查询了相关资料后设计了这篇高并发IM通讯系统，不当之处，请指正。<strong>(最终架构图在<a href="/im/im-system-architecture-20170628.html#总结">总结</a>章节)</strong></p><a id="more"></a><p>IM不就是聊天工具么? 两个用户（Client），一个Server转发聊天内容就可以完成聊天功能。最早的聊天室就是这样设计开发的。问题在于用户量不断上涨，一台服务器无法应对成千上万的用户请求。如何接入这么多用户，做到高并发？这就是今天要解决的问题，首先应该对系统进行分层，细化功能点确定每层需要完成的功能。<br>IM系统的三层架构(不包括client)：</p><ul><li>接入层: 用户的连接接入(协议是tcp、udp、http、socketio等，是短链接、长链接。)，接受客户端发送的消息，推送消息到客户端。</li><li>逻辑层: 接收接入层接入的消息，对消息进行校验，去重，验证，过滤等业务操作，存储消息内容，本层服务是无状态的，容易扩展。</li><li>存储层: 处理逻辑层注册的消息，主要维护消息发送者客户端状态功能，保存发送者接入路由信息（也就是从哪个机器接入，最新的msgid是多少等信息）。本层服务有状态的，设计时应该关注本层的扩展性。</li></ul><p>我给这三层对应服务的命名：接入层服务叫tranfer（客户端连接管理，接受转发推送消息模块），逻辑层服务叫logic(业务逻辑模块)，存储层服务router（用户在线状态，用户接入路由信息保存等）</p><h3 id="消息轮转流程"><a href="#消息轮转流程" class="headerlink" title="消息轮转流程"></a>消息轮转流程</h3><p>我接着了解下IM系统的消息轮转流程。首先客户发送信息流程</p><ol><li>客户端连接上tranfer，发送消息到tranfer服务，这个消息请求中包括用户UID、消息内容、发送消息时间、发送设备ID等。然后等待ack响应。 </li><li>tranfer接收到客户端发送的信息后，将消息转发到logic服务。</li><li>logic为消息生成msgid(通常由uid,deviceid,发送时间hash再加上自增id得到，这样msgid就是有序的)，logic通过msgid查询消息是否已经发送进行排重，重复响应tranfer消息重复发送。</li><li>logic将消息注册到router，更新发送消息用户的在线状态，保存消息的来源（来自哪个tranfer，相当于路由表），把消息来源存储到cache/db。完成后，router给logic服务ack响应。</li><li>logic收到ack后，把ack响应给tranfer服务。</li><li>tranfer将此带msgid的响应ack返回给客户端，客户端收到ack，即可确定<strong>消息发送成功</strong>。</li></ol><p>客户端发送消息成功，接着就是另一边的客户端接收消息，也就是消息投递。这里需要说明的是客户A发送消息到客户B（群B），他们之间就建立了会话，我们叫它sessoin(有些叫channel，room【群】)。</p><ol><li>logic从router服务获取session上发送到接收者的用户列表。</li><li>logic从route服务查找出用户列表中所有在线用户的tranfer地址。</li><li>logic将消息发送到对应的tranfer地址。</li><li>tranfer收到消息并将其发送到客户端。</li><li>最终客户端接收到消息内容。</li></ol><p>客户端接收消息OK了。但是有个问题，如果用户在线却一直不发送信息，怎么判断他在线呢？所以客户端应该定时发送心跳包给tranfer，以告知transfer客户端的存在，这就是hearbeat。</p><ol><li>客户端发送hearbeat到tranfer，hearbeat包括用户UID、发送消息时间、发送设备ID外，还用户所在的所有session和在session中的最新msgid。</li><li>tranfer转发hearbeat到logic</li><li>logic到router更新发送消息用户的在线状态，保存消息的来源（来自哪个tranfer，相当于路由表）。</li><li>logic到router查询session的最新msgid，如果上报msgid不等于查询msgid，启动下发消息流程。</li><li>logic下发未读消息到客户端。</li></ol><p>hearbeat心跳时间间隔根据不同的网络环境，心跳发送成功次数，信息发送次数等因素进行动态调整。</p><p>了解了IM的消息轮转流程和分层结构，可以给出一个粗略设计图。<br><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fh1d8v5sk5j312c0zu0wl.jpg" alt="Alt text"></p><p>图中为IM系统进行了分层，每层服务有多点（还没有负载均衡方案，当可以同时提供多点服务），对于数据存储可以使用cache/db两层模式，cache提供读取性能，db用户持久化。在推送下发消息使用消息队列，可以做到解耦、异步、高并发。<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fh2u0jizcqj31ay0zmdkb.jpg" alt="Alt text"></p><h3 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h3><p>图中三层中的服务节点扩展为多节点，不同的客户端连接不同的节点以达到接入能力的提升。接入能力提升，但每个节点还存在着单点问题。如何解决单点问题，达到高可用?</p><p>接入层的tranfer服务是客户端的接入口，使用长链接时，服务要保持链接不中断。tranfer是无状态，但要保持本次连接状态（本次连接断开可以连接其它tranfer）。</p><ol><li>对于不分区域的接入情况，可以使用负载均衡器将用户请求分配到不同的tranfer上，如果有一台服务宕机，负载均衡器将该节点移除。这样会出现该节点所有连接会断开一次，客户端重连，再由负载均衡器分配到其他节点上。缺点是宕机会加大其他机器的负荷。（负载均衡的软实现有lvs+keepalived，nginx upstream，haproxy + pacemaker，硬负载有f5、array。根据业务情况选择实现)。</li><li>对于不分区域的接入情况，对于单点宕机时可不可以不增加其它节点负荷。答案是YES，使用transfer服务主备方案，主transfer服务宕机，备接替工作。由于这里使用tcp长连接，主节点的连接还是会中断一次，还好客户端有重连机制，重连连接会到备节点上。transfer的主备切换如何实现呢？有两种方式，第一种：使用vrrp协议 + 接口监视，第二种：使用下面会将到的monitor监控通知。 主备方案缺点很明显，有一半的备节点处于空闲状态，资源浪费严重，优点是主备方案实施相对其它要简单些。在前期（业务快速增长期）使用，暂时不考虑节约成本问题。</li><li>分区域接入场景，对于来自不同地区的用户，地区之间的网络差异明显。对于这样情况，应该按区域部署的transfer服务，不同IDC部署的transfer服务。那问题来了，客户端如何选择接入哪个(几个)transfer呢？通常增加查询transfer地址列表接口，通过客户端ip的到用户区域，返回transfer地址列表，客户端再尝试在地址列表中选择最优地址。</li></ol><p>通过以上策略就能是接入层transfer高可用，接下来分析逻辑层。接入层、逻辑层、存储层的通讯通常采用RPC。逻辑层logic服务是无状态，每个节点都可以处理来自transfer的消息。</p><ol><li>最简单的方式就是使用nginx upstream做转发达到负载的功能，logic接收nginx转发消息。需要注意的是nginx本身也需要搭建集群解决单点问题。</li><li>增加moniter服务监控transfer、logic、router的健康情况，transfer、logic、router启动会定时向monitor发送心跳hearbeat，当monitor监控到会logic有节点出现故障，则推送新logic地址列表到transfer，transfer更新本地logic地址列表。transfer使用新的logic地址发送消息。这里存在logic宕机，transfer未及时更新logic列表任然将数据发送到故障节点的问题，所以transfer必须有重试机制和重试队列，重试策略与moniter的心跳发送频率有关，具体策略也按实际策略而定。moniter从设计上是无状态，集群的，集群中每个节点都有相同配置。优点从业务角度做负载均衡，可以自定义易扩展，缺点是增加了服务的耦合性。需要强调的无论如何都需要moniter监控服务，通知transfer更新地址列表接口增加了耦合性。</li></ol><p>剩下存储层高可用问题，router服务是存储用户的在线状态，服务本身就是有状态的。</p><ol><li>logic通过一致性hash算法将消息散列到不同的router，当有节点故障时，散列该节点的新消息转发到其他节点，当老消息中处理的消息就无法处理。并且节点回复正常是，还需要做数据迁移。（可作为前期版本过度）</li><li>基于上面的问题，可以使用router主备策略，logic转发的消息同时发送到主备，当只有主工作，当主宕机后，moniter（或logic）感知到router宕机，提升备为主。同时告警节点故障，恢复节点是，从运行节点中恢复数据。优点是解决了高可用，最大的缺点是一致性hash使扩容需要迁移数据。 </li></ol><p>修改后的架构图。<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fh2u1wyf8kj31ca0zs0xe.jpg" alt="Alt text"></p><h3 id="服务扩容"><a href="#服务扩容" class="headerlink" title="服务扩容"></a>服务扩容</h3><p>随着用户的增长，现有机器无法承载是就需要进行服务扩容，怎样才能快捷方便的进行服务扩容呢？能否做到auto-scaling？<br>上面讲到接入层上层使用的负载均衡器，当transfer增加节点服务时，启动新节点后，将节点信息配置到负载均衡器并加载。假如负载策略是平均分配，新接入用户就会分配到新的transfer，直到每个节点接入量平衡。当然也可以按其它策略进行分配，例如A机器配置高可以承载更多的接入量，就可以调整分配策略分配更多接入到A。</p><p>对于逻辑层而言，增加logic节点，logic注册到monitor，monitor更新本地logic地址列表，通知transfer服务logic地址已改变，最后transfer调整发送策略完成扩展。</p><p>存储层服务扩容，比较麻烦，由于之前使用了一致性hash算法，增加删除节点都需要进行数据迁移，扩展能力相对差些。一致性hash算法是根本问题所在，那我们使用逻辑层的monitor + 主备方式可以吗？monitor方式的问题是请求随机发送到router服务上，而不是用户不变时都请求同一服务，这样会大大降低cache的命中率，降低系统性能。<br>从业务场景出发，router是维护用户状态的，用户数量是有限的，是可以提前预告在线和压力的。微信架构中对于相关设计是单点容灾策略，他整个系统又按用户uid范围进行分Set，每个Set都是一个完整的、独立的子系统。分Set设计目的是为了做灾难隔离，一个Set出现故障只会影响该Set内的用户，而不会影响到其它用户。他使用仲裁节点（类似monitor）判断节点是否正常，再配合嵌入式路由表，将宕机节点请求转移到其它节点。嵌入式路由表是核心，这里就不说原理了，它就是通过维护client(我们这里的logic)与查询服务(我们这里的router)的路由信息一致，其实就是通过在每个报文中带上路由信息，在配合仲裁节点可动态修改路由表，以达到节点的增加删除切换。<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fh2u5dcu45j30y70diaav.jpg" alt="Alt text"></p><p>结论：使用一致性hash算法和预估压力就能满足打部分要求，使用这种方案做好节点的数据迁移（其实不用迁移，cache重新命中就可以）。 后期可以考虑嵌入式路由表节约成本和auto-scaling.</p><h3 id="统计、监控与配置"><a href="#统计、监控与配置" class="headerlink" title="统计、监控与配置"></a>统计、监控与配置</h3><p>为了时刻知道线上服务的状态，做到提前预警，整个系统还应该有监控。其次，业务数据的统计量也很重要，知道我们下一步该业务中心，以及可能产出的瓶颈。通过这些数据，可能需要去修改服务配置、启动新服务等，配置管理与下发同样重要。</p><ol><li>监控：agent，监控服务所属服务器的状态（CPU、MEM、IO等），核心进程状态（logic、router等），通常核心进程状态监控不应用到生产环境，开启会影响性能。如有必要才开启</li><li>统计：statis，统计点数据上报，业务数据和非业务数据都可以。</li><li>配置: etcd，配置下发功能。</li></ol><h3 id="序列号生成器"><a href="#序列号生成器" class="headerlink" title="序列号生成器"></a>序列号生成器</h3><p>在消息轮转流程中提到msgid的生成，要求是msgid是线性递增的。序列号生成器需要再系统中独立存在运行。IM中通常按用户来自增长的，可以使用redis的inrc来简单实现。</p><h3 id="富文本消息"><a href="#富文本消息" class="headerlink" title="富文本消息"></a>富文本消息</h3><p>对于图片、声音、视频的消息，在IM系统中，客户端本地上传富文本到文件服务器，文件服务器返回url，客户端再将url作为普通消息发送（文本类型要标识），接收端收到消息后，再去服务器上下载。 文件服务器可以选择第三方服务，自建建议使用ceph对象存储服务。</p><h3 id="网络传输协议"><a href="#网络传输协议" class="headerlink" title="网络传输协议"></a>网络传输协议</h3><p>IM系统传输使用UDP、TCP、基于TCP的http这几种协议中的一种或几种。</p><ul><li>UDP协议实时性更好，但是如何处理安全可靠的传输并且处理不同客户端之间的消息交互是个难题；</li><li>TCP协议安全可靠的，如何保证单机服务器高并发量，如何做到灵活，扩展的架构。<br>业界选择TCP居多，建议选择TCP。</li></ul><h3 id="数据传输格式"><a href="#数据传输格式" class="headerlink" title="数据传输格式"></a>数据传输格式</h3><p>对传输的数据应该进行压缩，安全性处理。基于这些要求，选择probuffer是再合适不过了(建议)。当然json格式也是可以的选择，json没有压缩报文，但清晰明了。</p><h3 id="跨区域网络问题"><a href="#跨区域网络问题" class="headerlink" title="跨区域网络问题"></a>跨区域网络问题</h3><p>目前想到的只能走IDC机房专线。 </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>下图是对IM系统认知的总结，总体来说我对im系统还不太了解，还需要继续研究学。<br><img src="http://wx3.sinaimg.cn/mw690/0065glrAgy1fh2ulo9hssj316y0xujvw.jpg" alt="Alt text"></p><h3 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h3><ul><li><a href="https://github.com/Terry-Mao/gopush-cluster" target="_blank" rel="noopener">gopush-cluster</a></li><li><a href="https://github.com/Terry-Mao/goim" target="_blank" rel="noopener">goim</a></li><li><a href="https://github.com/actorapp/actor-platform" target="_blank" rel="noopener">actor.im</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;即时通信（Instant Messaging，简称IM）是一种通过网络进行实时通信的系统，允许两人或多人使用网络即时的传递文字消息、文件、语音与视频交流。&lt;br&gt;微信、QQ基本占领的IM即时通讯系统的半个江湖，易信、钉钉、飞信、旺旺、咚咚、陌陌也各有市场。查询了相关资料后设计了这篇高并发IM通讯系统，不当之处，请指正。&lt;strong&gt;(最终架构图在&lt;a href=&quot;/im/im-system-architecture-20170628.html#总结&quot;&gt;总结&lt;/a&gt;章节)&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="im" scheme="http://www.jerrylou.me/categories/im/"/>
    
    
      <category term="im" scheme="http://www.jerrylou.me/tags/im/"/>
    
      <category term="即时通讯" scheme="http://www.jerrylou.me/tags/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
</feed>
