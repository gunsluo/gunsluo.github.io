<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerrylou&#39;s Notes</title>
  
  <subtitle>labor for reward</subtitle>
  <link href="https://luoji.live/atom.xml" rel="self"/>
  
  <link href="https://luoji.live/"/>
  <updated>2021-01-06T15:46:51.744Z</updated>
  <id>https://luoji.live/</id>
  
  <author>
    <name>luoji</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开启GPG对提交Commit签名</title>
    <link href="https://luoji.live/%E5%B7%A5%E5%85%B7/gpg-for-git-20200720.html"/>
    <id>https://luoji.live/%E5%B7%A5%E5%85%B7/gpg-for-git-20200720.html</id>
    <published>2020-07-20T14:23:24.000Z</published>
    <updated>2021-01-06T15:46:51.744Z</updated>
    
    <content type="html"><![CDATA[<p>GPG全名GnuPG，是一个加密软件，用于加密、签名通信内容及管理非对称密码学的密钥。它有很多用途，今天要说的是使用GPG为git提交进行签名，防止他人冒名提交。</p><a id="more"></a><p>目前Github和Gitlab都支持GPG，下面是我Github添加的签名。让我们开始操练起来吧！<br><img src="/images/material/gpg1.jpg"></p><h3 id="安装GPG"><a href="#安装GPG" class="headerlink" title="安装GPG"></a>安装GPG</h3><p><a href="https://www.gnupg.org/download/">官网</a>下载安装比较繁琐，建议使用brew进行安装（MacOS系统）。 </p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ brew install gpg</span><br><span class="line"></span><br><span class="line">$ gpg --version</span><br><span class="line">gpg (GnuPG) <span class="number">2.2</span><span class="number">.21</span></span><br><span class="line">libgcrypt <span class="number">1.8</span><span class="number">.6</span></span><br><span class="line">Copyright (C) <span class="number">2020</span> Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version <span class="number">3</span> or later &lt;<span class="attr">https:</span><span class="comment">//gnu.org/licenses/gpl.html&gt;</span></span><br><span class="line">This is free <span class="attr">software:</span> you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line"><span class="attr">Home:</span> <span class="regexp">/Users/</span>luoji/.gnupg</span><br><span class="line">Supported <span class="attr">algorithms:</span></span><br><span class="line"><span class="attr">Pubkey:</span> RSA, ELG, DSA, ECDH, ECDSA, EDDSA</span><br><span class="line"><span class="attr">Cipher:</span> IDEA, <span class="number">3</span>DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,</span><br><span class="line">        CAMELLIA128, CAMELLIA192, CAMELLIA256</span><br><span class="line"><span class="attr">Hash:</span> SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224</span><br><span class="line"><span class="attr">Compression:</span> Uncompressed, ZIP, ZLIB, BZIP2</span><br></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><ol><li>生成GPG密钥对</li></ol><p>选择RSA 输入Enter，下一步输入密钥长度，这里只是4096。接着选择密钥过期时间，最后输入你的电子邮件。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --full-generate-key</span><br><span class="line">gpg (GnuPG) 2.2.21; Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">Please <span class="keyword">select</span> what kind of <span class="keyword">key</span> you want:</span><br><span class="line">   (<span class="number">1</span>) RSA <span class="keyword">and</span> RSA (default)</span><br><span class="line">   (<span class="number">2</span>) DSA <span class="keyword">and</span> Elgamal</span><br><span class="line">   (<span class="number">3</span>) DSA (<span class="built_in">sign</span> only)</span><br><span class="line">   (<span class="number">4</span>) RSA (<span class="built_in">sign</span> only)</span><br><span class="line">  (<span class="number">14</span>) Existing <span class="keyword">key</span> <span class="keyword">from</span> card</span><br><span class="line">Your selection?</span><br><span class="line">RSA <span class="keyword">keys</span> may be <span class="keyword">between</span> <span class="number">1024</span> <span class="keyword">and</span> <span class="number">4096</span> bits long.</span><br><span class="line">What keysize <span class="keyword">do</span> you want? (<span class="number">2048</span>) <span class="number">4096</span></span><br><span class="line">Requested keysize <span class="keyword">is</span> <span class="number">4096</span> bits</span><br><span class="line">Please specify how long the <span class="keyword">key</span> should be valid.</span><br><span class="line">         <span class="number">0</span> = <span class="keyword">key</span> does <span class="keyword">not</span> expire</span><br><span class="line">      &lt;n&gt;  = <span class="keyword">key</span> expires <span class="keyword">in</span> n days</span><br><span class="line">      &lt;n&gt;w = <span class="keyword">key</span> expires <span class="keyword">in</span> n weeks</span><br><span class="line">      &lt;n&gt;m = <span class="keyword">key</span> expires <span class="keyword">in</span> n months</span><br><span class="line">      &lt;n&gt;y = <span class="keyword">key</span> expires <span class="keyword">in</span> n years</span><br><span class="line"><span class="keyword">Key</span> <span class="keyword">is</span> valid <span class="keyword">for</span>? (<span class="number">0</span>) <span class="number">0</span></span><br><span class="line"><span class="keyword">Key</span> does <span class="keyword">not</span> expire at <span class="keyword">all</span></span><br><span class="line"><span class="keyword">Is</span> this correct? (y/N) y</span><br><span class="line"></span><br><span class="line">GnuPG needs <span class="keyword">to</span> construct a <span class="keyword">user</span> ID <span class="keyword">to</span> identify your <span class="keyword">key</span>.</span><br><span class="line"></span><br><span class="line">Real name: luoji</span><br><span class="line">Email address: luoji@example.com</span><br><span class="line">Comment:</span><br><span class="line">You selected this <span class="keyword">USER</span>-ID:</span><br><span class="line">    <span class="string">&quot;luoji &lt;luoji@example.com&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">Change (N)ame, (C)omment, (<span class="built_in">E</span>)mail <span class="keyword">or</span> (O)kay/(Q)uit?</span><br></pre></td></tr></table></figure><p>输入密码后，最终一个关于<a href="mailto:&#108;&#117;&#x6f;&#106;&#105;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;">&#108;&#117;&#x6f;&#106;&#105;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;</a>的密钥对</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">We need <span class="keyword">to</span> generate a lot <span class="keyword">of</span> random bytes. It <span class="keyword">is</span> a good idea <span class="keyword">to</span> <span class="keyword">perform</span></span><br><span class="line"><span class="keyword">some</span> other action (<span class="keyword">type</span> <span class="keyword">on</span> the keyboard, <span class="keyword">move</span> the mouse, utilize the</span><br><span class="line">disks) during the prime generation; this gives the random number</span><br><span class="line">generator a better chance <span class="keyword">to</span> gain enough entropy.</span><br><span class="line">We need <span class="keyword">to</span> generate a lot <span class="keyword">of</span> random bytes. It <span class="keyword">is</span> a good idea <span class="keyword">to</span> <span class="keyword">perform</span></span><br><span class="line"><span class="keyword">some</span> other action (<span class="keyword">type</span> <span class="keyword">on</span> the keyboard, <span class="keyword">move</span> the mouse, utilize the</span><br><span class="line">disks) during the prime generation; this gives the random number</span><br><span class="line">generator a better chance <span class="keyword">to</span> gain enough entropy.</span><br><span class="line">gpg: key A1A16F22BC02D78C marked <span class="keyword">as</span> ultimately <span class="keyword">trusted</span></span><br><span class="line">gpg: revocation certificate stored <span class="keyword">as</span> <span class="string">&#x27;/Users/luoji/.gnupg/openpgp-revocs.d/BCC2217487CD7D65C124967BA1A16F22BC02D78C.rev&#x27;</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">and</span> secret key created <span class="keyword">and</span> signed.</span><br><span class="line"></span><br><span class="line">pub   rsa4096 <span class="number">2021</span><span class="number">-01</span><span class="number">-06</span> [SC]</span><br><span class="line">      BCC2217487CD7D65C124967BA1A16F22BC02D78C</span><br><span class="line">uid                      luoji &lt;luoji@example.com&gt;</span><br><span class="line">sub   rsa4096 <span class="number">2021</span><span class="number">-01</span><span class="number">-06</span> [E]</span><br></pre></td></tr></table></figure><ol start="2"><li>查看所有密钥对, GPG密钥ID是：<code>A1A16F22BC02D78C</code><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --list-secret-keys --keyid-format LONG</span><br><span class="line">sec   rsa4096/A1A16F22BC02D78C 2021<span class="string">-01</span><span class="string">-06</span> [SC]</span><br><span class="line">      BCC2217487CD7D65C124967BA1A16F22BC02D78C</span><br><span class="line">uid                 [ultimate] luoji &lt;luoji@example.com&gt;</span><br><span class="line">ssb   rsa4096/D5473502EE9CEE25 2021<span class="string">-01</span><span class="string">-06</span> [E]</span><br></pre></td></tr></table></figure></li><li>使用GPG密钥ID是<code>A1A16F22BC02D78C</code> 导出密钥<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --armor --export A1A16F22BC02D78C</span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line"></span><br><span class="line">mQINBF<span class="regexp">/11pABEAClSHDndvl8yUVzhVDigc1lgyeiW2N4ayqM/</span>/QayC+a6V2dAHJN</span><br><span class="line">u+HOsxzc<span class="regexp">/LyczWRTFe5ovGGNiDZ4/</span>zClZj1YqRGfZb9HSswmAuOTL/<span class="number">6</span>tkgfyuuP+</span><br><span class="line">ICn9LNuSUK3ZxaEEPfh8hIcqfh3ffBy2nA5kC<span class="regexp">/Xj/</span><span class="number">70</span>OS2GeHIJv6xprfAuo+EPd</span><br><span class="line">dLxD84OYh1Vc9mIO2cSnsnHk/JndZD5EEdJ8FYSShJ3DndAb1W76cHAlIDkrmGPn</span><br><span class="line">/qLVBnkq7HvHnxfl2EoQOycCqMnFWyEK+tS7Z5RxxOs1wfDQTyxd1UcqOTRwdNfC</span><br><span class="line">RvUwBcRNZxRXPKyLLNbYv+<span class="number">03</span>Qn11FFbRELPqDdES20meDOLd7PSRKgJeKgsXw1A+</span><br><span class="line">w4aqkCGKNfWYrNYk0b93TAw6HFqWXOUcAF8<span class="regexp">/vW+ktlS8QyPpJFYliKEjBAV7/</span>y0S</span><br><span class="line">I+WBHbzxswMnCeqqA<span class="regexp">/sy2SL8feO2C3/</span>I7nIjreLbawX8EP5WUuFQX6A+<span class="number">14</span>mU/B5P</span><br><span class="line">UlqUSmMB815HKb6r2yNOhdbSjdgnlcRFqPfNS5jahhloZkrChdXSEdDNVtKkxwpo</span><br><span class="line">v<span class="regexp">/VQDF/</span>kOsEuVv92d59vwL96z9mM0W0Tzj3Hyldm69mAKJp2F6cZuu3a1+qSvk9D</span><br><span class="line">k+N1phd6v0Q0mEvEj7yf7BtOE4XRpwlKGlEujMvlcxq+Reet0Ks4/tbxfwARAQAB</span><br><span class="line">tBlsdW9qaSA8bHVvamlAZXhhbXBsZS5jb20+iQJOBBMBCAA4FiEEvMIhdIfNfWXB</span><br><span class="line">JJZ7oaFvIrwC14wFAl/<span class="number">11</span>pACGwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQ</span><br><span class="line">oaFvIrwC14ybuhAAipXJv/QDPzz626oIGvVLDvOi8IgPKx7EofFFNLmm1BiOEjKR</span><br><span class="line">eK<span class="regexp">/KCz0tv6eRyOFcq7PuX/</span>uDdSN9YXkZm5nRQO<span class="regexp">/s0vw7J/</span>s+lMYJJbI/Fe5e5MQe</span><br><span class="line">Ps0pAB85tQqAigFiwwmtHBN/OHeqU8pog4vKOC1d0EMH7lKUETf6nGDMRP5nqYSc</span><br><span class="line"><span class="number">9</span>FbGIcAzs4LWOvyi2+KgVSdzrS3r6TqZBmDrj4i0699/sN0VaLfXHC8jw3I9Y1RK</span><br><span class="line">hlKcxGtIhH33ZgwDBrNEjT26GyePbMzf1TaxJsu4Ym30CpvfdDt1NDfqJ7PKTaT/</span><br><span class="line">W08M0uGkcbvEexLhOkwNmGkA0Mzkwr6dKToGqZaD1BAlRw8VMJGR4O2ifMcCjpst</span><br><span class="line">o+<span class="number">4</span>Nm8sOMhrbIkIYRKfjfkyUq/k9Bo0KdRBIBa7RFfJxn8lSCvebdwbE4qD+iFHB</span><br><span class="line">wUpaOrrwQqL7Yst7yQrAIxXSsWEBoxz6+u6YmKvH596MA+pdQTVM6vhj+oBu9q9v</span><br><span class="line">IObjW7WWks<span class="regexp">/9qEdw4Xtq9kMTEhA79GGJC13ctW2rMs/</span><span class="number">9</span>Gu0M59emyo7GrszJScSR</span><br><span class="line">KHVHvKLbG04VA1xAv5RrklFWJOHRr7HtESBoULRcTJIe5JC7xsqVW0TJUNsb/hJO</span><br><span class="line">AQapUyesebKhCI2jv7WmRcSCTCocqcF+jT6ty2jtMILT0nKWmRAtn7MK4si5Ag0E</span><br><span class="line">X/XWkAEQAL0FWdODT7e9d0shMKrnYm+GLhds8JjjeMtIBwKuTT7GSBPkgtzme5Jc</span><br><span class="line">a<span class="regexp">/pQoGE+LOi1/</span>QgA3gVYBJqbFRhQhCZyE3DeWDDncIkjXO7JNPrM2f6TUGMM8KVZ</span><br><span class="line">CUk33bqShjvFPiCCTtMDaQqQ2xkluRA39fq65KgQyZ5kV2X9UZLuUSUa9DQIJedf</span><br><span class="line"><span class="number">6</span>g+<span class="number">3</span>S0hzSY9lNtmDNHT1vvhpv8f836KJtWu14DUxxW2BH/tkiHFNtIGFKMwJmvfJ</span><br><span class="line">vM7HYosXa+DR1hYxoSxLBt8eq5Ha8C5EjmGwliQRYA7VH+sy2V6935CnBY199B6g</span><br><span class="line"><span class="number">9</span>jNevDI0U6h9O7aQd/<span class="number">6</span>AH8YhEMlcci2R7WZs9TJ69Zv+ce8nf5igrbJ7tyFZgppz</span><br><span class="line">NpMfE12vcl7lv1yXFG8qYD9bUfUR/z1barA24aWT9DseL0+<span class="number">93</span>I7J03D9zakh6vOT</span><br><span class="line">OpDjF772M0nwmvsWEyuOi46bv+A/<span class="number">7</span>lhDo00SFwtl4aOiPECTX5CZQrv6YpmQK8IQ</span><br><span class="line">OrflC2RwQlFCbFzKixQOf3qinjs2AiGj0oFS<span class="regexp">/9g5mWgfEXQMEt/</span>zAXf+MpzxWjE4</span><br><span class="line">PkCwM+WbbUBCwSjNPhAiRPIwQUJuu6avTO3oJyhZTqz5zDyl+ufZzXr9MEauU1xJ</span><br><span class="line">CwshTqepmHQjVQ1Nj1dCnA+kA<span class="regexp">/M77erqHqAsR+2Zdh4To8a/</span>fmTlABEBAAGJAjYE</span><br><span class="line">GAEIACAWIQS8wiF0h819ZcEklnuhoW8ivALXjAUCX/XWkAIbDAAKCRChoW8ivALX</span><br><span class="line">jJJzD/<span class="number">9</span>TpurUiain8DKR9uTyiCCIdrs32nq70cQapN4Nl6dSxCFDf4GgL5y6JDOL</span><br><span class="line">Hc717BnZnSO1Fx69yG9iAasxTzoSNTY6DYhwJ56bmVj6bshewy0GEupb0pvInbNM</span><br><span class="line"><span class="number">0</span>iJRX+wJJF8bppWAAAuxvzWZSAPX+<span class="number">5</span>c/<span class="number">68</span>WMMYUsGVWniSxyaYQjAKdEnlkE3U5k</span><br><span class="line">tbGDfFxtmOv0OLdSvEj2NDUI8VNO5CT00c0ZhsSuhMUmacxpieg6TknT5IWkR9f7</span><br><span class="line">vO+<span class="number">0</span>+BmZ<span class="regexp">/rqMqJpeIoxuc2jaHDAtSLBUL+jHYNbnye7W3dTpp8TVOuv504mBcm1/</span></span><br><span class="line">N90px6aKr2lzm1iPVa+IrvutKMFgku19hh45492+zF8EEzfIaNU99AYDkd9okVdQ</span><br><span class="line">ud+<span class="number">5</span>R2xu28BL8XjCItYVqrIb3maC<span class="regexp">/r2VBmAyFuSwjifoU34/</span>hzQI+<span class="number">3</span>tt808gh526</span><br><span class="line">oiR9P5BtA+<span class="number">9</span>ELQYUPQsHA/Vuet9CYCb6zPMGsdNTJZeyB4YISMmK8+gzOn72uqlH</span><br><span class="line"><span class="number">0</span>d9zMZwbrNEaxG6jqsxrYFILLM+zWQJsRiBgPvI0+l38D+ZtFQ8s1Fqj4rtcWVBw</span><br><span class="line">z3xercisx8hDDK0W7yDWGAVn0uNHGHarwvGXRDyeorRTEgcUu+W0BqDmJpYI/bdx</span><br><span class="line">jzaR61fn9g5aZGVUs2HfQPOi84J42ShfwLB4ia7yaK2MF4DqEQ==</span><br><span class="line">=JYRy</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br></pre></td></tr></table></figure><h3 id="添加GPG到Github"><a href="#添加GPG到Github" class="headerlink" title="添加GPG到Github"></a>添加GPG到Github</h3>复制上面的密钥，包括<code>-----BEGIN PGP PUBLIC KEY BLOCK-----</code>和<code>-----END PGP PUBLIC KEY BLOCK-----</code></li></ol><p><img src="/images/material/gpg2.jpg"><br><img src="/images/material/gpg3.jpg"></p><h3 id="配置密钥到Git"><a href="#配置密钥到Git" class="headerlink" title="配置密钥到Git"></a>配置密钥到Git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.signingkey A1A16F22BC02D78C</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&#x27;export GPG_TTY=$(tty)&#x27;</span> &gt;&gt; ~/.profile</span></span><br></pre></td></tr></table></figure><p>我使用的zsh，命令为<code>echo &#39;export GPG_TTY=$(tty)&#39; &gt;&gt; ~/.zshrc</code></p><h3 id="签名提交"><a href="#签名提交" class="headerlink" title="签名提交"></a>签名提交</h3><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$ </span>git commit -<span class="type">S</span> -m <span class="comment">&quot;your commit message&quot;</span></span><br></pre></td></tr></table></figure><h3 id="删除GPG"><a href="#删除GPG" class="headerlink" title="删除GPG"></a>删除GPG</h3><p>最后删除用于测试的GPG </p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --<span class="keyword">delete</span>-secret-keys A1A16F22BC02D78C</span><br><span class="line">gpg (GnuPG) <span class="number">2.2</span>.<span class="number">21</span>; Copyright (C) <span class="number">2020</span> Free Software Foundation, Inc.</span><br><span class="line">This <span class="keyword">is</span> free software: you are free <span class="keyword">to</span> change <span class="keyword">and</span> redistribute <span class="literal">it</span>.</span><br><span class="line">There <span class="keyword">is</span> NO WARRANTY, <span class="keyword">to</span> the extent permitted <span class="keyword">by</span> law.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sec  rsa4096/A1A16F22BC02D78C <span class="number">2021</span>-<span class="number">01</span>-<span class="number">06</span> luoji &lt;luoji@example.com&gt;</span><br><span class="line"></span><br><span class="line">Delete <span class="built_in">this</span> key <span class="keyword">from</span> the keyring? (y/N) y</span><br><span class="line">This <span class="keyword">is</span> a secret key! - really <span class="keyword">delete</span>? (y/N) y</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;GPG全名GnuPG，是一个加密软件，用于加密、签名通信内容及管理非对称密码学的密钥。它有很多用途，今天要说的是使用GPG为git提交进行签名，防止他人冒名提交。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://luoji.live/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="git" scheme="https://luoji.live/tags/git/"/>
    
    <category term="工具" scheme="https://luoji.live/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="gpg" scheme="https://luoji.live/tags/gpg/"/>
    
    <category term="encrypt" scheme="https://luoji.live/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>使用minkube代替docker compose作为本地开发环境</title>
    <link href="https://luoji.live/k8s/minkube-instead-of-docker-compose-20200504.html"/>
    <id>https://luoji.live/k8s/minkube-instead-of-docker-compose-20200504.html</id>
    <published>2020-05-04T14:23:24.000Z</published>
    <updated>2021-01-06T07:02:22.530Z</updated>
    
    <content type="html"><![CDATA[<p>Minikub K3s MicroK8s都是轻量化的K8s。Minikube更着重在本地轻松运行Kubernetes的工具，MicroK8s则不需要VirtualBox 并具有Isito. K3s是开源的一个Kubernetes的裁剪版。 </p><a id="more"></a><h3 id="本地开发Docker-compose的问题"><a href="#本地开发Docker-compose的问题" class="headerlink" title="本地开发Docker compose的问题"></a>本地开发Docker compose的问题</h3><p>使用Docker Compose作为本地开发工具已经好几年，它管理着我每一个项目的依赖服务。但随着项目越来越多，依赖越来越错综复杂，每个项目有单独的docker-compose文件，开发一段时间后，对于管理多个docker compose文件也是个难题。我的解决方案是将公共服务使用一个独立的docker-compose来管理，再使用公用network。有时需要同时启动相同服务的不同版本，但端口是不能复用的。如果使用不同端口，修改依赖服务的配置也是个繁琐的工作。</p><p>使用minkube完美的解决了这个问题。</p><h3 id="安装minkube"><a href="#安装minkube" class="headerlink" title="安装minkube"></a>安装minkube</h3><p>1.要检查操作系统是否支持虚拟化技术，请运行下面的命令(我的是macOS)：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sysctl -a | grep -E --color <span class="string">&#x27;machdep.cpu.features|VMX&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">machdep.cpu.features:</span> FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH <span class="built_in">DS</span> ACPI MMX FXSR SSE SSE2 <span class="built_in">SS</span> HTT TM PBE SSE3 <span class="keyword">PCLMULQDQ</span> DTES64 MON DSCPL VMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4<span class="number">.1</span> SSE4<span class="number">.2</span> x2APIC <span class="keyword">MOVBE</span> <span class="keyword">POPCNT</span> AES PCID <span class="keyword">XSAVE</span> OSXSAVE SEGLIM64 TSCTMR AVX1<span class="number">.0</span> <span class="keyword">RDRAND</span> F16C</span><br></pre></td></tr></table></figure><p>显示VMX说明系统支持，其他操作系统查看官方文档。</p><ol start="2"><li>安装 kubectl </li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>kubectl </span><br></pre></td></tr></table></figure><ol start="3"><li>安装 Minikube</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>minikube</span><br></pre></td></tr></table></figure><h3 id="配置minkube"><a href="#配置minkube" class="headerlink" title="配置minkube"></a>配置minkube</h3><p>minkube支持多种Dirver</p><ul><li>Docker - VM + Container (preferred)</li><li>Hyperkit - VM</li><li>VirtualBox - VM</li><li>Parallels - VM</li><li>VMware - VM</li></ul><p>我的配置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">minikube<span class="built_in"> config </span><span class="builtin-name">set</span> driver docker</span><br><span class="line">minikube<span class="built_in"> config </span><span class="builtin-name">set</span> cpus 4</span><br><span class="line">minikube<span class="built_in"> config </span><span class="builtin-name">set</span> memory 8192</span><br></pre></td></tr></table></figure><p>使用minkube安装k8s</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">minikube</span> start --extra-config=apiserver.service-node-port-range=<span class="number">30000</span>-<span class="number">39999</span></span><br></pre></td></tr></table></figure><p>配置插件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">minikube addons configure metallb</span><br><span class="line">minikube addons <span class="builtin-name">enable</span> metallb</span><br><span class="line">kubectl <span class="builtin-name">get</span> pods -n metallb-system</span><br><span class="line">kubectl describe configmap<span class="built_in"> config </span>-n metallb-system</span><br></pre></td></tr></table></figure><p>安装Istio</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https:<span class="regexp">//i</span>stio.io/downloadIstioctl | sh -</span><br><span class="line">export PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span><span class="regexp">/.istioctl/</span>bin</span><br><span class="line">istioctl install --set profile=demo</span><br><span class="line">minikube addons enable istio</span><br></pre></td></tr></table></figure><p>检查minkube状态</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$ minikube status</span><br><span class="line">minikube</span><br><span class="line">type: Control Plane</span><br><span class="line">host: Running</span><br><span class="line">kubelet: Running</span><br><span class="line">apiserver: Running</span><br><span class="line">kubeconfig: Configured</span><br><span class="line"></span><br><span class="line">$ minikube addons list</span><br><span class="line">|<span class="string">-----------------------------</span>|<span class="string">----------</span>|<span class="string">--------------</span>|</span><br><span class="line">|<span class="string">         ADDON NAME          </span>|<span class="string"> PROFILE  </span>|<span class="string">    STATUS    </span>|</span><br><span class="line">|<span class="string">-----------------------------</span>|<span class="string">----------</span>|<span class="string">--------------</span>|</span><br><span class="line">|<span class="string"> ambassador                  </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> dashboard                   </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> default-storageclass        </span>|<span class="string"> minikube </span>|<span class="string"> enabled ✅   </span>|</span><br><span class="line">|<span class="string"> efk                         </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> freshpod                    </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> gcp-auth                    </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> gvisor                      </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> helm-tiller                 </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> ingress                     </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> ingress-dns                 </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> istio                       </span>|<span class="string"> minikube </span>|<span class="string"> enabled ✅   </span>|</span><br><span class="line">|<span class="string"> istio-provisioner           </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> kubevirt                    </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> logviewer                   </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> metallb                     </span>|<span class="string"> minikube </span>|<span class="string"> enabled ✅   </span>|</span><br><span class="line">|<span class="string"> metrics-server              </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> nvidia-driver-installer     </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> nvidia-gpu-device-plugin    </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> olm                         </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> pod-security-policy         </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> registry                    </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> registry-aliases            </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> registry-creds              </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string"> storage-provisioner         </span>|<span class="string"> minikube </span>|<span class="string"> enabled ✅   </span>|</span><br><span class="line">|<span class="string"> storage-provisioner-gluster </span>|<span class="string"> minikube </span>|<span class="string"> disabled     </span>|</span><br><span class="line">|<span class="string">-----------------------------</span>|<span class="string">----------</span>|<span class="string">--------------</span>|</span><br></pre></td></tr></table></figure><h3 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h3><p>以配置postgres数据库为例来演示，并使用yaml文件，你也可以选择自己喜欢的工具如helm3。</p><ol><li><p>创建namespace</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> Namespace</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> postgres</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line"><span class="symbol">    name:</span> postgres</span><br></pre></td></tr></table></figure><p>运行 <code>k apply -f 00-namespace.yaml</code></p></li><li><p>为数据库创建pv</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> PersistentVolume</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> postgres-pv</span><br><span class="line"><span class="symbol">  namespace:</span> postgres</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line"><span class="symbol">    type:</span> local</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  storageClassName:</span> local-postgres-storage</span><br><span class="line"><span class="symbol">  capacity:</span></span><br><span class="line"><span class="symbol">    storage:</span> <span class="number">1</span>Gi</span><br><span class="line">  <span class="meta"># volumeMode field requires BlockVolume Alpha feature gate to be enabled.</span></span><br><span class="line"><span class="symbol">  volumeMode:</span> Filesystem</span><br><span class="line"><span class="symbol">  accessModes:</span></span><br><span class="line">  - ReadWriteOnce</span><br><span class="line"><span class="symbol">  persistentVolumeReclaimPolicy:</span> Delete</span><br><span class="line"><span class="symbol">  hostPath:</span></span><br><span class="line"><span class="symbol">    path:</span> <span class="meta-keyword">/data/</span>postgres</span><br></pre></td></tr></table></figure><p>运行 <code>k apply -f 02-pv.yaml</code></p></li></ol><ol start="3"><li>为数据库创建pvc<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> PersistentVolumeClaim</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> postgres-pvc-postgres<span class="number">-0</span></span><br><span class="line"><span class="symbol">  namespace:</span> postgres</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  accessModes:</span></span><br><span class="line">    - ReadWriteOnce</span><br><span class="line"><span class="symbol">  volumeMode:</span> Filesystem</span><br><span class="line"><span class="symbol">  resources:</span></span><br><span class="line"><span class="symbol">    requests:</span></span><br><span class="line"><span class="symbol">      storage:</span> <span class="number">1</span>Gi</span><br><span class="line"><span class="symbol">  storageClassName:</span> local-postgres-storage</span><br></pre></td></tr></table></figure>运行 <code>k apply -f 03-pvc.yaml</code></li></ol><ol start="4"><li><p>为数据库创建Pod</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: apps/v1</span><br><span class="line"><span class="attribute">kind</span>: StatefulSet</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: postgres</span><br><span class="line">  <span class="attribute">namespace</span>: postgres</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">selector</span>:</span><br><span class="line">    <span class="attribute">matchLabels</span>:</span><br><span class="line">      <span class="attribute">app</span>: postgres # has to match .spec.template.metadata.labels</span><br><span class="line">  <span class="attribute">serviceName</span>: <span class="string">&quot;postgres&quot;</span></span><br><span class="line">  <span class="attribute">replicas</span>: <span class="number">1</span> # by default is <span class="number">1</span></span><br><span class="line">  <span class="attribute">template</span>:</span><br><span class="line">    <span class="attribute">metadata</span>:</span><br><span class="line">      <span class="attribute">labels</span>:</span><br><span class="line">        <span class="attribute">app</span>: postgres # has to match .spec.selector.matchLabels</span><br><span class="line">    <span class="attribute">spec</span>:</span><br><span class="line">      <span class="attribute">terminationGracePeriodSeconds</span>: <span class="number">10</span></span><br><span class="line">      <span class="attribute">containers</span>:</span><br><span class="line">      - <span class="attribute">name</span>: postgres</span><br><span class="line">        <span class="attribute">image</span>: <span class="attribute">postgres</span>:<span class="number">12.4</span>-alpine</span><br><span class="line">        <span class="attribute">env</span>:</span><br><span class="line">        - <span class="attribute">name</span>: POSTGRES_USER</span><br><span class="line">          <span class="attribute">value</span>: <span class="string">&quot;postgres&quot;</span></span><br><span class="line">        - <span class="attribute">name</span>: POSTGRES_PASSWORD</span><br><span class="line">          <span class="attribute">value</span>: <span class="string">&quot;password&quot;</span></span><br><span class="line">        - <span class="attribute">name</span>: PGDATA</span><br><span class="line">          <span class="attribute">value</span>: <span class="string">&quot;/var/lib/postgresql/data&quot;</span></span><br><span class="line">        <span class="attribute">ports</span>:</span><br><span class="line">        - <span class="attribute">containerPort</span>: <span class="number">5432</span></span><br><span class="line">          <span class="attribute">name</span>: tcp</span><br><span class="line">          <span class="attribute">protocol</span>: TCP</span><br><span class="line">        <span class="attribute">volumeMounts</span>:</span><br><span class="line">        - <span class="attribute">name</span>: postgres-pvc</span><br><span class="line">          <span class="attribute">mountPath</span>: /var/lib/postgresql/data</span><br><span class="line">  <span class="attribute">volumeClaimTemplates</span>:</span><br><span class="line">  - <span class="attribute">metadata</span>:</span><br><span class="line">      <span class="attribute">name</span>: postgres-pvc</span><br><span class="line">    <span class="attribute">spec</span>:</span><br><span class="line">      <span class="attribute">accessModes</span>: [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">      <span class="attribute">storageClassName</span>: <span class="string">&quot;local-postgres-storage&quot;</span></span><br><span class="line">      <span class="attribute">resources</span>:</span><br><span class="line">        <span class="attribute">requests</span>:</span><br><span class="line">          <span class="attribute">storage</span>: <span class="number">1</span>Gi</span><br></pre></td></tr></table></figure><p>运行 <code>k apply -f 04-ss.yaml</code></p></li><li><p>为数据库创建Service</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">svc:</span> <span class="string">postgres</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5432</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tcp</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure><p>运行 <code>k apply -f 05-service.yaml</code><br>Note: 请注意Service的类型是LoadBalancer，不是nodeport。后面说明理由。</p></li><li><p>查看数据库运行状况</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ k get pods -n postgres</span><br><span class="line"><span class="keyword">NAME</span>         READY   <span class="keyword">STATUS</span>    RESTARTS   AGE</span><br><span class="line">postgres-<span class="number">0</span>   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">11</span>d</span><br></pre></td></tr></table></figure><h3 id="访问服务"><a href="#访问服务" class="headerlink" title="访问服务"></a>访问服务</h3><p>熟悉K8s的都知道使用<code>port-forward</code> 可以将Pod端口映射到本地端口。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">k</span> port-forward postgres-<span class="number">0</span> <span class="number">5432</span>:<span class="number">5432</span> -n postgres</span><br></pre></td></tr></table></figure><p>这种方式没有问题，但需要映射端口的服务过多，一一使用forward命令也非常麻烦。这里我推荐使用第二种方式</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">minikube tunnel</span></span><br></pre></td></tr></table></figure><p>这是minkube提供的隧道功能。它将LoadBalancer端口映射到本地端口。这就是创建Service是为什么使用LoadBalancer的原因。tunnel是我个人最喜欢的功能之一。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Minikub K3s MicroK8s都是轻量化的K8s。Minikube更着重在本地轻松运行Kubernetes的工具，MicroK8s则不需要VirtualBox 并具有Isito. K3s是开源的一个Kubernetes的裁剪版。 &lt;/p&gt;</summary>
    
    
    
    <category term="k8s" scheme="https://luoji.live/categories/k8s/"/>
    
    
    <category term="docker" scheme="https://luoji.live/tags/docker/"/>
    
    <category term="工具" scheme="https://luoji.live/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="k8s" scheme="https://luoji.live/tags/k8s/"/>
    
    <category term="minkube" scheme="https://luoji.live/tags/minkube/"/>
    
  </entry>
  
  <entry>
    <title>sql-migrate支持oracle数据库</title>
    <link href="https://luoji.live/%E5%B7%A5%E5%85%B7/sql-migrate-support-oracle-20200304.html"/>
    <id>https://luoji.live/%E5%B7%A5%E5%85%B7/sql-migrate-support-oracle-20200304.html</id>
    <published>2020-03-04T14:10:42.000Z</published>
    <updated>2021-01-05T16:26:11.350Z</updated>
    
    <content type="html"><![CDATA[<p>数据库migrate工具有很多，但基于Golang且较为流行的有<a href="https://github.com/rubenv/sql-migrate">sql-migrate</a>和<a href="https://github.com/golang-migrate/migrate">migrate</a>，但都不支持Oracle。前段时间项目上正好使用到Oracle，索性提交了个PR来支持Oracle.</p><a id="more"></a><h3 id="对比sql-migrate和migrate"><a href="#对比sql-migrate和migrate" class="headerlink" title="对比sql-migrate和migrate"></a>对比sql-migrate和migrate</h3><ul><li>sql-migrate是个轻量级的migrate工具，同时支持代码集成。这意味服务启动时可方便的管理sql版本。</li><li>migrate也是个migrate工具，同时支持代码集成。不同的是sql-migrate支持bindatq，而migrate不支持。</li></ul><h3 id="Oracle驱动"><a href="#Oracle驱动" class="headerlink" title="Oracle驱动"></a>Oracle驱动</h3><ul><li>oci8(github.com/mattn/go-oci8)</li><li>godror(<a href="https://github.com/godror/godror">https://github.com/godror/godror</a>)<br>oci8和godror都不是pure Go代码的驱动库，他们都需要Oracle Office Client (Instant Client)的支持。两相相比较，个人使用godror较多，因为godror是运行时依赖，编译是不依赖Oracle的lib库。sql-migrate两种驱动都支持。</li></ul><h3 id="使用编译tag"><a href="#使用编译tag" class="headerlink" title="使用编译tag"></a>使用编译tag</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> +build oracle</span><br></pre></td></tr></table></figure><p>代码中加入golang的条件编译就能轻松实现。sql-migrate默认提供的工具是不支持oracle，需要你编译oracle版本</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> -<span class="keyword">tags</span> godror -v github.<span class="keyword">com</span>/rubenv/sql-migrate/...</span><br></pre></td></tr></table></figure><h3 id="使用sql-migrate"><a href="#使用sql-migrate" class="headerlink" title="使用sql-migrate"></a>使用sql-migrate</h3><p>下载依赖并配置依赖库路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>download.oracle.com<span class="regexp">/otn_software/m</span>ac<span class="regexp">/instantclient/</span><span class="number">193000</span>/instantclient-basic-macos.x64-<span class="number">19.3</span>.<span class="number">0.0</span>.<span class="number">0</span>dbru.zip</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">LD_LIBRARY_PATH</span>=your_oracle_office_path/instantclient_19_3</span><br></pre></td></tr></table></figure><p>配置文件样例</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">development</span>:</span><br><span class="line">    <span class="attribute">dialect</span>: godror</span><br><span class="line">    <span class="attribute">datasource</span>: user/password<span class="variable">@localhost</span>:<span class="number">1521</span>/sid</span><br><span class="line">    <span class="attribute">dir</span>: migrations/oracle</span><br><span class="line">    <span class="attribute">table</span>: migrations</span><br></pre></td></tr></table></figure><p>最后使用sql-migrate命令行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sql-migrate  up</span></span><br></pre></td></tr></table></figure><h3 id="作为library"><a href="#作为library" class="headerlink" title="作为library"></a>作为library</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import <span class="string">&quot;github.com/rubenv/sql-migrate&quot;</span></span><br><span class="line">import _ <span class="string">&quot;github.com/godror/godror&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">db</span>, <span class="keyword">err</span> := sql.<span class="keyword">Open</span>(<span class="string">&quot;sqlite3&quot;</span>, filename)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">    <span class="comment">// Handle errors!</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">n</span>, <span class="keyword">err</span> := migrate.Exec(<span class="keyword">db</span>, <span class="string">&quot;godror&quot;</span>, migrations, migrate.Up)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">    <span class="comment">// Handle errors!</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Applied %d migrations!\n&quot;</span>, <span class="keyword">n</span>)</span><br></pre></td></tr></table></figure><h3 id="PR"><a href="#PR" class="headerlink" title="PR"></a>PR</h3><p><a href="https://github.com/rubenv/sql-migrate/pull/166">https://github.com/rubenv/sql-migrate/pull/166</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;数据库migrate工具有很多，但基于Golang且较为流行的有&lt;a href=&quot;https://github.com/rubenv/sql-migrate&quot;&gt;sql-migrate&lt;/a&gt;和&lt;a href=&quot;https://github.com/golang-migrate/migrate&quot;&gt;migrate&lt;/a&gt;，但都不支持Oracle。前段时间项目上正好使用到Oracle，索性提交了个PR来支持Oracle.&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://luoji.live/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="golang" scheme="https://luoji.live/tags/golang/"/>
    
    <category term="migrate" scheme="https://luoji.live/tags/migrate/"/>
    
    <category term="sql" scheme="https://luoji.live/tags/sql/"/>
    
    <category term="database" scheme="https://luoji.live/tags/database/"/>
    
    <category term="oracle" scheme="https://luoji.live/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>Dokcer buildx编译多环境镜像</title>
    <link href="https://luoji.live/docker/docker-desktop-buildx-20191004.html"/>
    <id>https://luoji.live/docker/docker-desktop-buildx-20191004.html</id>
    <published>2019-10-04T15:19:36.000Z</published>
    <updated>2021-01-05T16:26:11.366Z</updated>
    
    <content type="html"><![CDATA[<p>新发布的Docker Desktop Community提供了实验性功能buildx. buildx使用 BuildKit 构建多种系统架构的Docker镜像。</p><blockquote><p>Docker Desktop Community 2.1.0.0 contains the following experimental features.<br>Docker Buildx: Docker Buildx is a CLI plugin for extended build capabilities with BuildKit. For more information, see Working with Docker Buildx.</p></blockquote><a id="more"></a><p>可以使用 $ docker buildx build 命令使用 BuildKit 构建镜像。该命令支持 –platform 参数可以同时构建支持多种系统架构的 Docker 镜像，大大简化了构建步骤。</p><h3 id="Buildx-builder"><a href="#Buildx-builder" class="headerlink" title="Buildx builder"></a>Buildx builder</h3><p>docker build 命令只能构建一个架构的镜像，又例如Docker for Linux 不支持构建 arm 架构镜像。由于 Docker 默认的 builder 实例不支持同时指定多个镜像，我们必须首先创建一个新的 builder 实例。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker buildx create <span class="params">--use</span> <span class="params">--name</span> mybuilder <span class="params">--driver</span> docker-container <span class="params">--driver-opt</span> image=dockerpracticesig/buildkit<span class="function">:master</span></span><br><span class="line"></span><br><span class="line">$ docker buildx inspect mybuilder <span class="params">--bootstrap</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ docker buildx <span class="keyword">ls</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h3><p>Dockerfile 文件</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> --platform=$TARGETPLATFORM alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> uname -a &gt; /os.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> cat /os.txt</span></span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker buildx build --platform linux<span class="regexp">/arm,linux/</span>arm64,linux<span class="regexp">/amd64 -t myusername/</span>hello . --<span class="keyword">push</span></span><br><span class="line"></span><br><span class="line"># 查看镜像信息</span><br><span class="line">$ docker buildx imagetools <span class="keyword">inspect</span> myusername/hello</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;新发布的Docker Desktop Community提供了实验性功能buildx. buildx使用 BuildKit 构建多种系统架构的Docker镜像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker Desktop Community 2.1.0.0 contains the following experimental features.&lt;br&gt;Docker Buildx: Docker Buildx is a CLI plugin for extended build capabilities with BuildKit. For more information, see Working with Docker Buildx.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="docker" scheme="https://luoji.live/categories/docker/"/>
    
    
    <category term="docker" scheme="https://luoji.live/tags/docker/"/>
    
    <category term="buildx" scheme="https://luoji.live/tags/buildx/"/>
    
    <category term="multi-arch" scheme="https://luoji.live/tags/multi-arch/"/>
    
  </entry>
  
  <entry>
    <title>Dokcer Desktop发布</title>
    <link href="https://luoji.live/docker/docker-desktop-20190810.html"/>
    <id>https://luoji.live/docker/docker-desktop-20190810.html</id>
    <published>2019-08-10T13:53:01.000Z</published>
    <updated>2021-01-05T16:26:11.357Z</updated>
    
    <content type="html"><![CDATA[<p>Docker是Docker.Inc公司开源的一个基于轻量级虚拟化技术的容器引擎项目,整个项目基于Go语言开发，并遵从Apache 2.0协议。之前使用Docker Community Edition时，需要单独安装virtualbox，Docker Toolbox等，非常繁琐。并且不好监控Docker的运行状态。Docker Desktop发布后，问题迎刃而解。</p><a id="more"></a><p>为了Docker Desktop特意写篇博客记录下。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>首先是要到 Docker 官网上下载 Docker Desktop 稳定版的就好，能用比较重要。<a href="https://www.docker.com/products/docker-desktop%E3%80%82%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%EF%BC%8C%E9%9D%9E%E5%B8%B8%E5%82%BB%E7%93%9C%E3%80%82%E9%80%89%E6%8B%A9%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD%E3%80%81%E5%8F%8C%E5%87%BB%E3%80%81%E5%AE%89%E8%A3%85%E3%80%82">https://www.docker.com/products/docker-desktop。非常简单，非常傻瓜。选择操作系统配置的安装包下载、双击、安装。</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>Docker Desktop后，就macos而言，系统上部有小鲸鱼图标。当然我们也可以到 Docker Desktop 查看 Docker 容器的运行状况。</p><ul><li>Docker Desktop 无法访问 LocalHost？<br>其实安装后只要执行 docker run 就能运行 Docker 容器，其实这只是因为端口的问题，我们需要将容器中的端口映射到本机端口上。</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在Preferences中可配置docker image下载代理，使用的CPU和内容等。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker是Docker.Inc公司开源的一个基于轻量级虚拟化技术的容器引擎项目,整个项目基于Go语言开发，并遵从Apache 2.0协议。之前使用Docker Community Edition时，需要单独安装virtualbox，Docker Toolbox等，非常繁琐。并且不好监控Docker的运行状态。Docker Desktop发布后，问题迎刃而解。&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://luoji.live/categories/docker/"/>
    
    
    <category term="docker" scheme="https://luoji.live/tags/docker/"/>
    
    <category term="mac" scheme="https://luoji.live/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Golang与Mongo数据库</title>
    <link href="https://luoji.live/Golang/mongo-golang-20181110.html"/>
    <id>https://luoji.live/Golang/mongo-golang-20181110.html</id>
    <published>2018-11-10T03:15:07.000Z</published>
    <updated>2021-01-05T16:26:11.377Z</updated>
    
    <content type="html"><![CDATA[<p>随着Mongo数据库的使用越来越多，在开发中选择Mongo也并不少见。这是Golang连接Mongo数据库的示例，介绍了开发中应如何写连接Mongo数据库，如何写单元测试，如何mock数据。</p><a id="more"></a><h3 id="驱动包"><a href="#驱动包" class="headerlink" title="驱动包"></a>驱动包</h3><p>Golang的Mongo驱动包有两个:</p><ul><li><a href="https://github.com/mongodb/mongo-go-driver">官方包</a></li><li><a href="https://github.com/globalsign/mgo">Mgo</a><br>本人正好都使用过这两个包，个人使用体验是官方包偏繁琐些，代码写出来偏mongo命令行风格，不支持ORM功能，所有代码量相对多些。相对而言Mgo支持ORM，写出的代码量少，可维护性好。对于性能方面没有去做过比较，就不做对比了。目前我使用mgo多些，主要考虑因素是编码效率。下面就以mgo为例来介绍</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>导入包<code>github.com/globalsign/mgo</code>和<code>github.com/globalsign/mgo/bson</code></li><li>连接Mongo <code>mgo.Dial(mongoURL)</code></li><li>指定数据库和Collection <code>session.DB(&quot;db name&quot;).C(&quot;collection&quot;)</code></li><li>插入数据 <code>c.Insert(&amp;db.Person&#123;&#125;</code></li><li>查找数据 <code>c.Find(bson.M&#123;&#125;).One()</code></li></ul><p><a href="https://github.com/gunsluo/go-example/blob/master/mgo/main.go">代码</a></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/globalsign/mgo&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/globalsign/mgo/bson&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gunsluo/go-example/mgo/db&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">mongoURL = <span class="string">&quot;mongodb://root:password@127.0.0.1:27017&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">session, <span class="keyword">err</span> := mgo.Dial(mongoURL)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">panic(<span class="keyword">err</span>)</span><br><span class="line">&#125;</span><br><span class="line">defer session.<span class="keyword">Close</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optional. Switch the session to a monotonic behavior.</span></span><br><span class="line">session.SetMode(mgo.Monotonic, true)</span><br><span class="line"></span><br><span class="line">c := session.<span class="keyword">DB</span>(<span class="string">&quot;fm&quot;</span>).C(<span class="string">&quot;people&quot;</span>)</span><br><span class="line"><span class="keyword">err</span> = c.Insert(&amp;<span class="keyword">db</span>.Person&#123;<span class="string">&quot;Ale&quot;</span>, <span class="string">&quot;+55 53 8116 9639&quot;</span>&#125;,</span><br><span class="line">&amp;<span class="keyword">db</span>.Person&#123;<span class="string">&quot;Cla&quot;</span>, <span class="string">&quot;+55 53 8402 8510&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line"><span class="keyword">log</span>.Fatal(<span class="keyword">err</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result := <span class="keyword">db</span>.Person&#123;&#125;</span><br><span class="line"><span class="keyword">err</span> = c.Find(bson.<span class="keyword">M</span>&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Ale&quot;</span>&#125;).<span class="keyword">One</span>(&amp;result)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line"><span class="keyword">log</span>.Fatal(<span class="keyword">err</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Phone:&quot;</span>, result.Phone)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">package</span> db</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="type">Person</span> struct &#123;</span><br><span class="line"><span class="type">Name</span>  string</span><br><span class="line"><span class="type">Phone</span> string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Mock"><a href="#Mock" class="headerlink" title="Mock"></a>Mock</h3><p><a href="https://github.com/golang/mock">gomcok</a>是Golang中非常好的mock数据工具，它的原理是基于interface的实现。显然目前版本的mgo不是interface的实现，所以我们需要对mgo实现interface抽象。github上有percona/pmgo项目已经实现了该功能，但它不是最新版本的mgo实现且接口不全。我fork该项目修改了问题实现了<a href="https://github.com/gunsluo/pmgo">pmgo</a>;</p><h4 id="查询用户信息"><a href="#查询用户信息" class="headerlink" title="查询用户信息"></a>查询用户信息</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/globalsign/mgo/bson&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/percona/pmgo&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// User is  a user information</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">int</span>    <span class="string">`bson:&quot;id&quot;`</span></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`bson:&quot;name&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">dialer := pmgo.NewDialer()</span><br><span class="line">session, err := dialer.Dial(<span class="string">&quot;mongodb://root:password@localhost:27017&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">print</span>(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := addUser(session, &amp;User&#123;ID: <span class="number">1</span>, Name: <span class="string">&quot;jerry&quot;</span>&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;error add the user to the db: %s&quot;</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">user, err := getUser(session, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;error reading the user from the db: %s&quot;</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;User: %+v\n&quot;</span>, user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addUser</span><span class="params">(session pmgo.SessionManager, user *User)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> session.DB(<span class="string">&quot;test&quot;</span>).C(<span class="string">&quot;testc&quot;</span>).Insert(user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getUser</span><span class="params">(session pmgo.SessionManager, id <span class="keyword">int</span>)</span> <span class="params">(*User, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">err := session.DB(<span class="string">&quot;test&quot;</span>).C(<span class="string">&quot;testc&quot;</span>).Find(bson.M&#123;<span class="string">&quot;id&quot;</span>: id&#125;).One(&amp;user)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;user, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单元测试代码"><a href="#单元测试代码" class="headerlink" title="单元测试代码"></a>单元测试代码</h4><ul><li>使用gomock创建Controller </li><li>pmgomock模拟mock返回数据</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">&quot;reflect&quot;</span><br><span class="line">&quot;testing&quot;</span><br><span class="line"></span><br><span class="line">&quot;github.com/globalsign/mgo/bson&quot;</span><br><span class="line">&quot;github.com/golang/mock/gomock&quot;</span><br><span class="line">&quot;github.com/gunsluo/pmgo/pmgomock&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func TestGetUser(t *testing.T) &#123;</span><br><span class="line">ctrl := gomock.NewController(t)</span><br><span class="line">defer ctrl.Finish()</span><br><span class="line"></span><br><span class="line"><span class="keyword">user</span> := <span class="keyword">User</span>&#123;</span><br><span class="line">ID:   <span class="number">1</span>,</span><br><span class="line"><span class="type">Name</span>: &quot;Zapp Brannigan&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Mock up a <span class="keyword">database</span>, <span class="keyword">session</span>, collection <span class="keyword">and</span> a query <span class="keyword">and</span> <span class="keyword">set</span></span><br><span class="line">// expected/returned <span class="keyword">values</span> <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">type</span></span><br><span class="line">query := pmgomock.NewMockQueryManager(ctrl)</span><br><span class="line">query.EXPECT().One(gomock.<span class="keyword">Any</span>()).SetArg(<span class="number">0</span>, <span class="keyword">user</span>).<span class="keyword">Return</span>(nil)</span><br><span class="line"></span><br><span class="line">collection := pmgomock.NewMockCollectionManager(ctrl)</span><br><span class="line">collection.EXPECT().Find(bson.M&#123;&quot;id&quot;: <span class="number">1</span>&#125;).<span class="keyword">Return</span>(query)</span><br><span class="line"></span><br><span class="line"><span class="keyword">database</span> := pmgomock.NewMockDatabaseManager(ctrl)</span><br><span class="line"><span class="keyword">database</span>.EXPECT().C(&quot;testc&quot;).<span class="keyword">Return</span>(collection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">session</span> := pmgomock.NewMockSessionManager(ctrl)</span><br><span class="line"><span class="keyword">session</span>.EXPECT().DB(&quot;test&quot;).<span class="keyword">Return</span>(<span class="keyword">database</span>)</span><br><span class="line"></span><br><span class="line">// <span class="keyword">Call</span> the <span class="keyword">function</span> we want <span class="keyword">to</span> test. It will use the mocked interfaces</span><br><span class="line">readUser, err := getUser(<span class="keyword">session</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">t.Errorf(&quot;getUser returned an error: %s\n&quot;, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !reflect.DeepEqual(*readUser, <span class="keyword">user</span>) &#123;</span><br><span class="line">t.Errorf(&quot;Users don&#x27;t match. Got %+v, want %+v\n&quot;, readUser, <span class="keyword">user</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h4><p>pmgo支持集成测试，测试开始后启动一个真实的mongo服务用于测试。需要指定mongo的服务路径: <code>Server = pmgo.NewDBServer(); Server.SetPath(tempDir)</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">&quot;io/ioutil&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">&quot;reflect&quot;</span><br><span class="line">&quot;testing&quot;</span><br><span class="line"></span><br><span class="line">&quot;github.com/globalsign/mgo/bson&quot;</span><br><span class="line">&quot;github.com/golang/mock/gomock&quot;</span><br><span class="line">&quot;github.com/gunsluo/pmgo&quot;</span><br><span class="line">&quot;github.com/gunsluo/pmgo/pmgomock&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func TestGetUser(t *testing.T) &#123;</span><br><span class="line">ctrl := gomock.NewController(t)</span><br><span class="line">defer ctrl.Finish()</span><br><span class="line"></span><br><span class="line"><span class="keyword">user</span> := <span class="keyword">User</span>&#123;</span><br><span class="line">ID:   <span class="number">1</span>,</span><br><span class="line"><span class="type">Name</span>: &quot;Zapp Brannigan&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Mock up a <span class="keyword">database</span>, <span class="keyword">session</span>, collection <span class="keyword">and</span> a query <span class="keyword">and</span> <span class="keyword">set</span></span><br><span class="line">// expected/returned <span class="keyword">values</span> <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">type</span></span><br><span class="line">query := pmgomock.NewMockQueryManager(ctrl)</span><br><span class="line">query.EXPECT().One(gomock.<span class="keyword">Any</span>()).SetArg(<span class="number">0</span>, <span class="keyword">user</span>).<span class="keyword">Return</span>(nil)</span><br><span class="line"></span><br><span class="line">collection := pmgomock.NewMockCollectionManager(ctrl)</span><br><span class="line">collection.EXPECT().Find(bson.M&#123;&quot;id&quot;: <span class="number">1</span>&#125;).<span class="keyword">Return</span>(query)</span><br><span class="line"></span><br><span class="line"><span class="keyword">database</span> := pmgomock.NewMockDatabaseManager(ctrl)</span><br><span class="line"><span class="keyword">database</span>.EXPECT().C(&quot;testc&quot;).<span class="keyword">Return</span>(collection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">session</span> := pmgomock.NewMockSessionManager(ctrl)</span><br><span class="line"><span class="keyword">session</span>.EXPECT().DB(&quot;test&quot;).<span class="keyword">Return</span>(<span class="keyword">database</span>)</span><br><span class="line"></span><br><span class="line">// <span class="keyword">Call</span> the <span class="keyword">function</span> we want <span class="keyword">to</span> test. It will use the mocked interfaces</span><br><span class="line">readUser, err := getUser(<span class="keyword">session</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">t.Errorf(&quot;getUser returned an error: %s\n&quot;, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !reflect.DeepEqual(*readUser, <span class="keyword">user</span>) &#123;</span><br><span class="line">t.Errorf(&quot;Users don&#x27;t match. Got %+v, want %+v\n&quot;, readUser, <span class="keyword">user</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var <span class="keyword">Server</span> pmgo.DBTestServer</span><br><span class="line"></span><br><span class="line">func TestIntegration(t *testing.T) &#123;</span><br><span class="line">setup()</span><br><span class="line"></span><br><span class="line">readUser, err := getUser(<span class="keyword">Server</span>.<span class="keyword">Session</span>(), <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">t.Errorf(&quot;getUser returned an error: %s\n&quot;, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !reflect.DeepEqual(*readUser, mockUser()) &#123;</span><br><span class="line">t.Errorf(&quot;Users don&#x27;t match. Got %+v, want %+v\n&quot;, readUser, mockUser())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tearDown()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func setup() &#123;</span><br><span class="line">os.Setenv(&quot;CHECK_SESSIONS&quot;, &quot;0&quot;)</span><br><span class="line">tempDir, err := ioutil.TempDir(&quot;&quot;, &quot;testing&quot;)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Server</span> = pmgo.NewDBServer()</span><br><span class="line"><span class="keyword">Server</span>.SetPath(tempDir)</span><br><span class="line"></span><br><span class="line"><span class="keyword">session</span> := <span class="keyword">Server</span>.<span class="keyword">Session</span>()</span><br><span class="line">// <span class="keyword">load</span> <span class="keyword">some</span> fake data <span class="keyword">into</span> the db</span><br><span class="line"><span class="keyword">session</span>.DB(&quot;test&quot;).C(&quot;testc&quot;).<span class="keyword">Insert</span>(mockUser())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func mockUser() <span class="keyword">User</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">User</span>&#123;</span><br><span class="line">ID:   <span class="number">1</span>,</span><br><span class="line"><span class="type">Name</span>: &quot;Zapp Brannigan&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func tearDown() &#123;</span><br><span class="line"><span class="keyword">Server</span>.<span class="keyword">Session</span>().<span class="keyword">Close</span>()</span><br><span class="line"><span class="keyword">Server</span>.<span class="keyword">Session</span>().DB(&quot;samples&quot;).DropDatabase()</span><br><span class="line"><span class="keyword">Server</span>.Stop()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;随着Mongo数据库的使用越来越多，在开发中选择Mongo也并不少见。这是Golang连接Mongo数据库的示例，介绍了开发中应如何写连接Mongo数据库，如何写单元测试，如何mock数据。&lt;/p&gt;</summary>
    
    
    
    <category term="Golang" scheme="https://luoji.live/categories/Golang/"/>
    
    
    <category term="go" scheme="https://luoji.live/tags/go/"/>
    
    <category term="mongo" scheme="https://luoji.live/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>渐进式框架Vue学习资料</title>
    <link href="https://luoji.live/vue/vue-learning-note-20181009.html"/>
    <id>https://luoji.live/vue/vue-learning-note-20181009.html</id>
    <published>2018-10-09T14:29:20.000Z</published>
    <updated>2021-01-05T16:26:11.341Z</updated>
    
    <content type="html"><![CDATA[<p>对于前端开发本人还在Javascript、JQuery阶段，学习新的(ES6, TS, MVVM)等前端开发技能。我选择了学习Vue，Vue.js是一套用于构建用户界面的渐进式框架。 </p><a id="more"></a><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><ul><li>JavaScript 和基本的 Web 开发</li><li><a href="https://cn.vuejs.org/v2/guide/">中文官网</a></li><li><a href="https://www.tutorialspoint.com/es6">ES6教程</a></li><li><a href="https://cli.vuejs.org/guide/">VUE CLI</a></li><li><a href="https://webpack.js.org/concepts/">WEBPACK</a></li><li><a href="https://www.typescriptlang.org/docs/">TypeScript</a></li></ul><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><h4 id="官方资源"><a href="#官方资源" class="headerlink" title="官方资源"></a>官方资源</h4><ul><li><a href="http://vuejs.org/guide/">Official Guide</a></li><li><a href="http://vuejs.org/api/">API Reference</a></li><li><a href="https://github.com/vuejs/vue">GitHub Repo</a></li><li><a href="https://github.com/vuejs/vue/releases">Release Notes</a></li><li><a href="https://vuejs.org/v2/style-guide/">Style Guide</a></li><li><a href="https://news.vuejs.org/">Vue.js News</a></li></ul><h4 id="External资源"><a href="#External资源" class="headerlink" title="External资源"></a>External资源</h4><ul><li><a href="https://gist.github.com/hashrock/f575928d0e109ace9ad0">Vue.js資料まとめ(for japanese)</a> by @hashrock</li><li><a href="http://vue-newsletter.com/">Vue.js Newsletter</a> - Weekly dose of handpicked Vue.js news</li><li><a href="http://vuetips.com/">Vue.js Tips</a> - Tips to become a better Vue.js developer</li><li><a href="https://en.wikipedia.org/wiki/Vue.js">Vue.js Wikipedia</a></li><li><a href="https://www.vuejsradar.com/">Vue.js Radar</a> - Curated newsletter + site covering new Vue.js releases/contributions.</li><li><a href="https://vuenews.io/">Vue News</a> - Social website focusing on the latest Vue.js news and information.</li><li><a href="https://hackr.io/tutorials/learn-vue-js">Vue Curated Resources</a> - Recommended Vue.js courses and tutorials.</li><li><a href="https://builtforvue.com/">BuiltForVue</a> - NPM Mirror of all Vue.js components and packages.</li><li><a href="https://vueschool.io/">Vue School</a> - Learn Vue.js from video courses by core members and industry experts</li><li><a href="https://vuedose.tips/">VueDose</a>. Tips &amp; tricks about the Vue ecosystem, for busy devs.</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于前端开发本人还在Javascript、JQuery阶段，学习新的(ES6, TS, MVVM)等前端开发技能。我选择了学习Vue，Vue.js是一套用于构建用户界面的渐进式框架。 &lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://luoji.live/categories/vue/"/>
    
    
    <category term="vue" scheme="https://luoji.live/tags/vue/"/>
    
    <category term="front-end" scheme="https://luoji.live/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>TCP(GRPC)/HTTPS中TLS单向和双向认证</title>
    <link href="https://luoji.live/%E7%BD%91%E7%BB%9C/tcp-https-tls-cert-20180911.html"/>
    <id>https://luoji.live/%E7%BD%91%E7%BB%9C/tcp-https-tls-cert-20180911.html</id>
    <published>2018-09-11T08:09:25.000Z</published>
    <updated>2021-01-05T16:26:11.381Z</updated>
    
    <content type="html"><![CDATA[<p>目前，浏览器中开启HTTPS是比较简单的事情。首先我们需要一个域名，然后找一家可信CA机构申请证书并将证书安装到服务器(例如：RapidSSL、Trustwave SSL、Let’s Encrypt等)。但对TCP协议的服务使用self-signed证书我们应该如何完成？</p><a id="more"></a><h3 id="证书的分类"><a href="#证书的分类" class="headerlink" title="证书的分类"></a>证书的分类</h3><p>验证方式</p><ul><li>DV SSL证书(域名验证)</li><li>OV SSL证书(企业验证)</li><li>EV SSL证书(企业增强/扩展验证)</li></ul><p>功能分类</p><ul><li>UCC/SAN SSL证书(多域名)</li><li>SGC SSL证书(强加密)</li><li>Wildcard SSL证书(通配符)</li><li>Code Signing SSL证书(代码签名)</li></ul><p>认证流程</p><ul><li>one-way authentication(单向认证)</li><li>two-way(mutual) authentication(双向认证)</li></ul><p>浏览器中大部分应用使用单向认证，即服务器认证客户端，客户端无需认证服务器。大型企业有很多域名一般使用OV SSL和SAN SSL证书，而个人网站则使用DV SSL证书。</p><h3 id="证书使用"><a href="#证书使用" class="headerlink" title="证书使用"></a>证书使用</h3><p>什么时候使用可信CA签发证书，什么时候使用自签证书？ 什么时候使用单向证书或双向证书。</p><p>这些都应根据应用的实际业务而定，浏览器应用中使用可信CA签发的证书，这样浏览器访问你的网站时就不会提示<code>not secure</code>错误，这是因浏览器中预置可信CA机构的CA证书。这也不是绝对的，例如12306网站就使用的自签证书，你会看到<code>not secure</code>错误，导入12306网站的CA证书可以消除这个提示。自签证书不是说比可信CA机构签发的证书有更高的安全性。因为加密算法都是公开的，而是私钥文件自己保管。对于安全性高的场景，例如金融行业对账，就应该使用自签和双向认证。</p><h3 id="证书自签"><a href="#证书自签" class="headerlink" title="证书自签"></a>证书自签</h3><p>生成自签证书脚本</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">mkdir -p &#123;certs,crl,newcerts&#125;</span><br><span class="line">touch <span class="keyword">index</span>.txt</span><br><span class="line">echo <span class="number">1000</span> &gt; <span class="type">serial</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CA private key (<span class="keyword">unencrypted</span>)</span><br><span class="line">openssl genrsa -<span class="keyword">out</span> ca.key <span class="number">4096</span></span><br><span class="line"># Certificate Authority (self-signed certificate)</span><br><span class="line">openssl req -config openssl.cnf -<span class="built_in">new</span> -x509 -days <span class="number">3650</span> -sha256 -key ca.key -extensions v3_ca -<span class="keyword">out</span> ca.crt -subj &quot;/CN=fake-ca&quot;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">Server</span> private key (<span class="keyword">unencrypted</span>)</span><br><span class="line">openssl genrsa -<span class="keyword">out</span> <span class="keyword">server</span>.key <span class="number">2048</span></span><br><span class="line"># <span class="keyword">Server</span> certificate signing request (CSR)</span><br><span class="line">openssl req -config openssl.cnf -<span class="built_in">new</span> -sha256 -key <span class="keyword">server</span>.key -<span class="keyword">out</span> <span class="keyword">server</span>.csr -subj &quot;/CN=fake.grpc&quot;</span><br><span class="line"># Certificate Authority signs CSR <span class="keyword">to</span> <span class="keyword">grant</span> a certificate</span><br><span class="line">openssl ca -batch -config openssl.cnf -extensions server_cert -days <span class="number">365</span> -notext -md sha256 -<span class="keyword">in</span> <span class="keyword">server</span>.csr -<span class="keyword">out</span> <span class="keyword">server</span>.crt -cert ca.crt -keyfile ca.key</span><br><span class="line"></span><br><span class="line"># Client private key (<span class="keyword">unencrypted</span>)</span><br><span class="line">openssl genrsa -<span class="keyword">out</span> client.key <span class="number">2048</span></span><br><span class="line"># Signed client certificate signing request (CSR)</span><br><span class="line">openssl req -config openssl.cnf -<span class="built_in">new</span> -sha256 -key client.key -<span class="keyword">out</span> client.csr -subj &quot;/CN=fake.client&quot;</span><br><span class="line"># Certificate Authority signs CSR <span class="keyword">to</span> <span class="keyword">grant</span> a certificate</span><br><span class="line">openssl ca -batch -config openssl.cnf -extensions usr_cert -days <span class="number">365</span> -notext -md sha256 -<span class="keyword">in</span> client.csr -<span class="keyword">out</span> client.crt -cert ca.crt -keyfile ca.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#openssl x509 -text -noout -in ca.crt</span></span><br><span class="line"></span><br><span class="line">rm *.csr</span><br></pre></td></tr></table></figure><p>自签证书配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">SAN =</span><br><span class="line"></span><br><span class="line"><span class="section">[ ca ]</span></span><br><span class="line"><span class="comment"># `man ca`</span></span><br><span class="line"><span class="attr">default_ca</span> = CA_default</span><br><span class="line"></span><br><span class="line"><span class="section">[ CA_default ]</span></span><br><span class="line"><span class="comment"># Directory and file locations.</span></span><br><span class="line"><span class="attr">dir</span>               = .</span><br><span class="line"><span class="attr">certs</span>             = <span class="variable">$dir</span>/certs</span><br><span class="line"><span class="attr">crl_dir</span>           = <span class="variable">$dir</span>/crl</span><br><span class="line"><span class="attr">new_certs_dir</span>     = <span class="variable">$dir</span>/newcerts</span><br><span class="line"><span class="attr">database</span>          = <span class="variable">$dir</span>/index.txt</span><br><span class="line"><span class="attr">serial</span>            = <span class="variable">$dir</span>/serial</span><br><span class="line"><span class="comment"># certificate revocation lists.</span></span><br><span class="line"><span class="attr">crlnumber</span>         = <span class="variable">$dir</span>/crlnumber</span><br><span class="line"><span class="attr">crl</span>               = <span class="variable">$dir</span>/crl/intermediate-ca.crl</span><br><span class="line"><span class="attr">crl_extensions</span>    = crl_ext</span><br><span class="line"><span class="attr">default_crl_days</span>  = <span class="number">30</span></span><br><span class="line"><span class="attr">default_md</span>        = sha256</span><br><span class="line"></span><br><span class="line"><span class="attr">name_opt</span>          = ca_default</span><br><span class="line"><span class="attr">cert_opt</span>          = ca_default</span><br><span class="line"><span class="attr">default_days</span>      = <span class="number">375</span></span><br><span class="line"><span class="attr">preserve</span>          = <span class="literal">no</span></span><br><span class="line"><span class="attr">policy</span>            = policy_loose</span><br><span class="line"></span><br><span class="line"><span class="section">[ policy_loose ]</span></span><br><span class="line"><span class="comment"># Allow the CA to sign a range of certificates.</span></span><br><span class="line"><span class="attr">countryName</span>             = optional</span><br><span class="line"><span class="attr">stateOrProvinceName</span>     = optional</span><br><span class="line"><span class="attr">localityName</span>            = optional</span><br><span class="line"><span class="attr">organizationName</span>        = optional</span><br><span class="line"><span class="attr">organizationalUnitName</span>  = optional</span><br><span class="line"><span class="attr">commonName</span>              = supplied</span><br><span class="line"><span class="attr">emailAddress</span>            = optional</span><br><span class="line"></span><br><span class="line"><span class="section">[ req ]</span></span><br><span class="line"><span class="comment"># `man req`</span></span><br><span class="line"><span class="attr">default_bits</span>        = <span class="number">4096</span></span><br><span class="line"><span class="attr">distinguished_name</span>  = req_distinguished_name</span><br><span class="line"><span class="attr">string_mask</span>         = utf8only</span><br><span class="line"><span class="attr">default_md</span>          = sha256</span><br><span class="line"></span><br><span class="line"><span class="section">[ req_distinguished_name ]</span></span><br><span class="line"><span class="attr">countryName</span>                    = Country Name (<span class="number">2</span> letter code)</span><br><span class="line"><span class="attr">stateOrProvinceName</span>            = State or Province Name</span><br><span class="line"><span class="attr">localityName</span>                   = Locality Name</span><br><span class="line"><span class="attr">0.organizationName</span>             = Organization Name</span><br><span class="line"><span class="attr">organizationalUnitName</span>         = Organizational Unit Name</span><br><span class="line"><span class="attr">commonName</span>                     = Common Name</span><br><span class="line"></span><br><span class="line"><span class="comment"># Certificate extensions (`man x509v3_config`)</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ v3_ca ]</span></span><br><span class="line"><span class="attr">subjectKeyIdentifier</span> = hash</span><br><span class="line"><span class="attr">authorityKeyIdentifier</span> = keyid:always,issuer</span><br><span class="line"><span class="attr">basicConstraints</span> = critical, CA:<span class="literal">true</span>, pathlen:<span class="number">0</span></span><br><span class="line"><span class="attr">keyUsage</span> = critical, digitalSignature, cRLSign, keyCertSign</span><br><span class="line"></span><br><span class="line"><span class="section">[ usr_cert ]</span></span><br><span class="line"><span class="attr">basicConstraints</span> = CA:<span class="literal">FALSE</span></span><br><span class="line"><span class="attr">nsCertType</span> = client</span><br><span class="line"><span class="attr">nsComment</span> = <span class="string">&quot;OpenSSL Generated Client Certificate&quot;</span></span><br><span class="line"><span class="attr">subjectKeyIdentifier</span> = hash</span><br><span class="line"><span class="attr">authorityKeyIdentifier</span> = keyid,issuer</span><br><span class="line"><span class="attr">keyUsage</span> = critical, nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line"><span class="attr">extendedKeyUsage</span> = clientAuth</span><br><span class="line"></span><br><span class="line"><span class="section">[ server_cert ]</span></span><br><span class="line"><span class="attr">basicConstraints</span> = CA:<span class="literal">FALSE</span></span><br><span class="line"><span class="attr">nsCertType</span> = server</span><br><span class="line"><span class="attr">nsComment</span> = <span class="string">&quot;OpenSSL Generated Server Certificate&quot;</span></span><br><span class="line"><span class="attr">subjectKeyIdentifier</span> = hash</span><br><span class="line"><span class="attr">authorityKeyIdentifier</span> = keyid,issuer:always</span><br><span class="line"><span class="attr">keyUsage</span> = critical, digitalSignature, keyEncipherment</span><br><span class="line"><span class="attr">extendedKeyUsage</span> = serverAuth</span><br><span class="line"><span class="attr">subjectAltName</span> = <span class="variable">$ENV</span>::SAN</span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">argAddress <span class="keyword">string</span></span><br><span class="line">argCrtFile <span class="keyword">string</span></span><br><span class="line">argKeyFile <span class="keyword">string</span></span><br><span class="line">argCAFile  <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> verbose <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">var</span> rootCmd *cobra.Command</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">rootCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">&quot;grpc&quot;</span>,</span><br><span class="line">Short: <span class="string">&quot;demo service&quot;</span>,</span><br><span class="line">Long:  <span class="string">&quot;Top level command for demo service, it provides GRPC service&quot;</span>,</span><br><span class="line">Run:   run,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rootCmd.Flags().StringVarP(&amp;argAddress, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;:3264&quot;</span>, <span class="string">&quot;address to listen on&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argCrtFile, <span class="string">&quot;cert-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;certificate file for gRPC TLS authentication&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argKeyFile, <span class="string">&quot;key-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;key file for gRPC TLS authentication&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argCAFile, <span class="string">&quot;ca-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;ca file for gRPC client&quot;</span>)</span><br><span class="line">rootCmd.PersistentFlags().BoolVarP(&amp;verbose, <span class="string">&quot;verbose&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="literal">false</span>, <span class="string">&quot;verbose output&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Service <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">SayHello</span><span class="params">(ctx context.Context, req *pb.HelloRequest)</span> <span class="params">(*pb.HelloReply, error)</span></span> &#123;</span><br><span class="line">md, ok := metadata.FromIncomingContext(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, grpc.Errorf(codes.Unauthenticated, <span class="string">&quot;no metadata&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">token := md.Get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(token) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, grpc.Errorf(codes.Unauthenticated, <span class="string">&quot;no token&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;requst:&quot;</span>, token[<span class="number">0</span>], req.Name)</span><br><span class="line"><span class="keyword">return</span> &amp;pb.HelloReply&#123;</span><br><span class="line">Message: <span class="string">&quot;hello, &quot;</span> + req.Name,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := rootCmd.Execute(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">(cmd *cobra.Command, _ []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, argAddress)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the TLS credentials</span></span><br><span class="line"><span class="keyword">var</span> opts []grpc.ServerOption</span><br><span class="line"><span class="keyword">if</span> argCrtFile != <span class="string">&quot;&quot;</span> &amp;&amp; argKeyFile != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;enable credentials in the grpc&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> argCAFile == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">creds, err := credentials.NewServerTLSFromFile(argCrtFile, argKeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">opts = <span class="built_in">append</span>(opts, grpc.Creds(creds))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Parse certificates from certificate file and key file for server.</span></span><br><span class="line">cert, err := tls.LoadX509KeyPair(argCrtFile, argKeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return fmt.Errorf(&quot;invalid config: error parsing gRPC certificate file: %v&quot;, err)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parse certificates from client CA file to a new CertPool.</span></span><br><span class="line">cPool := x509.NewCertPool()</span><br><span class="line">clientCert, err := ioutil.ReadFile(argCAFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return fmt.Errorf(&quot;invalid config: reading from client CA file: %v&quot;, err)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> cPool.AppendCertsFromPEM(clientCert) != <span class="literal">true</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return errors.New(&quot;invalid config: failed to parse client CA&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tlsConfig := tls.Config&#123;</span><br><span class="line">Certificates: []tls.Certificate&#123;cert&#125;,</span><br><span class="line">ClientAuth:   tls.RequireAndVerifyClientCert,</span><br><span class="line">ClientCAs:    cPool,</span><br><span class="line">&#125;</span><br><span class="line">opts = <span class="built_in">append</span>(opts,</span><br><span class="line">grpc.Creds(credentials.NewTLS(&amp;tlsConfig)),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server := grpc.NewServer(opts...)</span><br><span class="line">pb.RegisterGreeterServer(server, &amp;Service&#123;&#125;)</span><br><span class="line"></span><br><span class="line">logrus.WithField(<span class="string">&quot;addr&quot;</span>, argAddress).Println(<span class="string">&quot;Starting server&quot;</span>)</span><br><span class="line">server.Serve(listener)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">argGRPCAddr   <span class="keyword">string</span></span><br><span class="line">argCrtFile    <span class="keyword">string</span></span><br><span class="line">argKeyFile    <span class="keyword">string</span></span><br><span class="line">argCAFile     <span class="keyword">string</span></span><br><span class="line">argCNOverride <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> verbose <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">var</span> rootCmd *cobra.Command</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">rootCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">&quot;grpc-client&quot;</span>,</span><br><span class="line">Short: <span class="string">&quot;demo client&quot;</span>,</span><br><span class="line">Long:  <span class="string">&quot;Top level command for demo client&quot;</span>,</span><br><span class="line">Run:   run,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rootCmd.Flags().StringVarP(&amp;argGRPCAddr, <span class="string">&quot;grpc-addr&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;127.0.0.1:3264&quot;</span>, <span class="string">&quot;grpc address&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argCrtFile, <span class="string">&quot;cert-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;certificate file for gRPC TLS authentication&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argKeyFile, <span class="string">&quot;key-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;key file for gRPC TLS authentication&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argCAFile, <span class="string">&quot;ca-file&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;ca file for gRPC client&quot;</span>)</span><br><span class="line">rootCmd.Flags().StringVar(&amp;argCNOverride, <span class="string">&quot;cn-override&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;domain name override&quot;</span>)</span><br><span class="line">rootCmd.PersistentFlags().BoolVarP(&amp;verbose, <span class="string">&quot;verbose&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="literal">false</span>, <span class="string">&quot;verbose output&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// customCredential 自定义认证</span></span><br><span class="line"><span class="keyword">type</span> customCredential <span class="keyword">struct</span> &#123;</span><br><span class="line">token    <span class="keyword">string</span></span><br><span class="line">security <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c customCredential)</span> <span class="title">GetRequestMetadata</span><span class="params">(ctx context.Context, uri ...<span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;token&quot;</span>: c.token,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c customCredential)</span> <span class="title">RequireTransportSecurity</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := rootCmd.Execute(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">(cmd *cobra.Command, _ []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> opts []grpc.DialOption</span><br><span class="line">customCred := &amp;customCredential&#123;token: <span class="string">&quot;custom-token&quot;</span>&#125;</span><br><span class="line"><span class="keyword">if</span> argCAFile != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;enable credentials in the grpc&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> argCrtFile != <span class="string">&quot;&quot;</span> &amp;&amp; argKeyFile != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">cPool := x509.NewCertPool()</span><br><span class="line">caCert, err := ioutil.ReadFile(argCAFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return nil, fmt.Errorf(&quot;invalid CA crt file: %s&quot;, caPath)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> cPool.AppendCertsFromPEM(caCert) != <span class="literal">true</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return nil, fmt.Errorf(&quot;failed to parse CA crt&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">clientCert, err := tls.LoadX509KeyPair(argCrtFile, argKeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//return nil, fmt.Errorf(&quot;invalid client crt file: %s&quot;, caPath)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">clientTLSConfig := &amp;tls.Config&#123;</span><br><span class="line">RootCAs:      cPool,</span><br><span class="line">Certificates: []tls.Certificate&#123;clientCert&#125;,</span><br><span class="line">&#125;</span><br><span class="line">creds := credentials.NewTLS(clientTLSConfig)</span><br><span class="line"></span><br><span class="line">opts = <span class="built_in">append</span>(opts, grpc.WithTransportCredentials(creds))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// target is common name(host name) in the cert file</span></span><br><span class="line">creds, err := credentials.NewClientTLSFromFile(argCAFile, argCNOverride)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">opts = <span class="built_in">append</span>(opts, grpc.WithTransportCredentials(creds))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">customCred.security = <span class="literal">true</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">opts = <span class="built_in">append</span>(opts, grpc.WithInsecure())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// custom credentials</span></span><br><span class="line">opts = <span class="built_in">append</span>(opts, grpc.WithPerRPCCredentials(customCred))</span><br><span class="line"></span><br><span class="line">conn, err := grpc.Dial(argGRPCAddr, opts...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">greeterClient := pb.NewGreeterClient(conn)</span><br><span class="line"></span><br><span class="line">reply, err := greeterClient.SayHello(context.Background(),</span><br><span class="line">&amp;pb.HelloRequest&#123;Name: <span class="string">&quot;luoji&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.WithError(err).Fatal(<span class="string">&quot;unable to sayhello&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logrus.Info(<span class="string">&quot;reply:&quot;</span>, reply.Message)</span><br><span class="line">conn.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;目前，浏览器中开启HTTPS是比较简单的事情。首先我们需要一个域名，然后找一家可信CA机构申请证书并将证书安装到服务器(例如：RapidSSL、Trustwave SSL、Let’s Encrypt等)。但对TCP协议的服务使用self-signed证书我们应该如何完成？&lt;/p&gt;</summary>
    
    
    
    <category term="网络" scheme="https://luoji.live/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="https" scheme="https://luoji.live/tags/https/"/>
    
    <category term="tls" scheme="https://luoji.live/tags/tls/"/>
    
    <category term="tcp" scheme="https://luoji.live/tags/tcp/"/>
    
    <category term="grpc" scheme="https://luoji.live/tags/grpc/"/>
    
    <category term="cert" scheme="https://luoji.live/tags/cert/"/>
    
    <category term="证书" scheme="https://luoji.live/tags/%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>（转）重磅！GitHub发布开源负载均衡组件GLB</title>
    <link href="https://luoji.live/%E7%AC%94%E8%AE%B0/github-glb-20180811.html"/>
    <id>https://luoji.live/%E7%AC%94%E8%AE%B0/github-glb-20180811.html</id>
    <published>2018-08-11T12:44:59.000Z</published>
    <updated>2021-01-05T16:26:11.361Z</updated>
    
    <content type="html"><![CDATA[<p>在GitHub，我们在网络边缘的metal cloud上每秒处理数万个请求。 我们之前文章已经介绍过GLB，这是我们针对裸机数据中心的可扩展负载均衡解决方案，它支持大多数GitHub的对外服务，并且还为我们最关键的内部系统提供负载均衡服务，例如高可用MySQL集群。 今天，我们很高兴能够分享有关负载均衡器设计的更多细节，并将GLB Director开源。</p><p>GLB Director是4层负载均衡器，可在大量物理机器上扩展单个IP地址，同时尝试在修改期间最大限度地减少连接中断。 GLB Director不会替换像haproxy和nginx这样的服务，而是部署在这些服务（或任何TCP服务）之前，允许它们跨多个物理机器扩展，而不需要每台机器都有唯一的IP地址。</p><a id="more"></a><h3 id="使用ECMP扩展IP"><a href="#使用ECMP扩展IP" class="headerlink" title="使用ECMP扩展IP"></a>使用ECMP扩展IP</h3><p>4层负载均衡器的基本属性是能够使用单个IP地址在多个服务器之间实现均衡连接。 为了扩展单个IP以处理更多的流量，我们不仅需要在后端服务器之间进行流量拆分，还需要能够扩展负载均衡器本身。 这实际上是另一层负载均衡。</p><p>通常，我们将IP地址视为单个物理机器，将路由器视为将数据包移动到下一个最近路由器的机器。 在最简单的情况下，总是有一个最佳的下一跳，路由器选择该跳并转发所有数据包直到达到目的地。</p><p><img src="http://wx2.sinaimg.cn/mw690/0065glrAgy1fu8kv91psyj307p054dfr.jpg" alt="Alt text"></p><p>实际上，大多数网络都要复杂得多。 两台计算机之间通常有多条路径可用，例如，使用多个ISP或者两台路由器通过多条物理电缆连接在一起以增加容量并提供冗余。 这是等价多路径（ECMP）路由发挥作用的地方 - 而不是由路由器选择单个最佳下一跳，ECMP中很多路径具有相同成本（通常定义为到目的地的AS的数量）， 路由器分散流量以便在所有可用的相同成本路径之间均衡连接。</p><p><img src="http://wx2.sinaimg.cn/mw690/0065glrAgy1fu8kwanzsjj307p08qt8r.jpg" alt="Alt text"></p><p>ECMP通过对每个数据包进行hash以确定其中一个可用路径。此处使用的hash函数因设备而异，但通常是基于源和目标IP地址以及TCP流量的源和目标端口的一致性hash。这意味着同一个TCP连接的多个数据包通常会遍历相同的路径，这意味着即使路径具有不同的延迟，数据包也会以相同的顺序到达。值得注意的是，在这种情况下，路径可以在不中断连接的情况下进行更改，因为它们总是最终位于同一个目标服务器上，此时它所采用的路径大多无关紧要。</p><p>ECMP的另一种用法是当我们想要跨多个服务器而不是跨多个路径上的同一服务器时。每个服务器都可以使用BGP或其他类似的网络协议使用相同的IP地址，从而使连接在这些服务器之间进行分片，路由器不知道连接是在不同的地方处理的，而非传统做法那样所有的连接都同一台机器上处理。</p><p><img src="http://wx3.sinaimg.cn/mw690/0065glrAgy1fu8kwvqaxfj307p04yjra.jpg" alt="Alt text"></p><p>虽然ECMP会像对流量进行分片，但它有一个巨大的缺点：当相同IP的服务器更改（或沿途的任何路径或路由器发生变化）时，连接必须重新均衡，才能保证每个服务器上的连接比较均衡。 路由器通常是无状态设备，只是为每个数据包做出最佳决策而不考虑它所属的连接，这意味着在这种情况下某些连接会中断。</p><p><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8kxhwid9j30k205cwen.jpg" alt="Alt text"></p><p>在上面的例子中，我们可以想象每种颜色代表一个活动的连接。 添加新的代理服务器使用相同的IP。 路由器保证一致性哈希，将1/3连接移动到新服务器，同时保持2/3连接在老服务器上。 不幸的是，对于进行中的1/3连接，数据包现在到达了无连接状态的服务器，因此连接会失败。</p><h3 id="将director-proxy分离"><a href="#将director-proxy分离" class="headerlink" title="将director/proxy分离"></a>将director/proxy分离</h3><p>以前仅使用ECMP的解决方案的问题在于它不知道给定数据包的完整上下文，也不能为每个数据包/连接存储数据。事实证明，通常使用Linux Virtual Server（LVS）等工具。我们创建了一个新的“director”服务器层，它通过ECMP从路由器获取数据包，但不是依靠路由器的ECMP hash来选择后端代理服务器，而是对所有链接控制hash和存储状态（选择后端）。当我们更改代理层服务器时，director层有望不变，我们的连接也不会断掉。</p><p><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fu8kxvoc53j30ma08cgm7.jpg" alt="Alt text"></p><p>虽然这在许多情况下效果很好，但它确实有一些缺点。在上面的示例中，我们同时添加了LVS director和后端代理服务器。新的director接收到一些数据包，但是还没有任何状态（或者具有延迟状态），因此将其作为新连接进行hash处理并可能使其出错（并导致连接失败）。 LVS的典型解决方法是使用多播连接同步来保持所有LVS director服务器之间共享的连接状态。这仍然需要传播连接状态，并且仍然需要重复状态 - 不仅每个代理都需要Linux内核网络堆栈中每个连接的状态，而且每个LVS director还需要存储连接到后端代理服务器的映射。</p><h3 id="将所有状态从director层移除"><a href="#将所有状态从director层移除" class="headerlink" title="将所有状态从director层移除"></a>将所有状态从director层移除</h3><p>当我们设计GLB时，我们决定要改善这种情况而不是重复状态。 通过使用已存储在代理服务器中的流状态作为维护来自客户端的已建立Linux TCP连接的一部分，GLB采用与上述方法不同的方法。</p><p>对于每个进入的连接，我们选择可以处理该连接的主服务器和辅助服务器。 当数据包到达主服务器且无效时，会将数据包转发到辅助服务器。 选择主/辅助服务器的散列是预先完成一次，并存储在查找表中，因此不需要在每个流或每个数据包的基础上重新计算。 添加新的代理服务器时，对于1/N连接，它将成为新的主服务器，旧的主服务器将成为辅助服务器。 这允许现有流程完成，因为代理服务器可以使用其本地状态（单一事实来源）做出决策。 从本质上讲，这使得数据包在到达保持其状态的预期服务器时具有“第二次机会”。</p><p><img src="http://wx2.sinaimg.cn/mw690/0065glrAgy1fu8kyp7j6mj30mr09774y.jpg" alt="Alt text"></p><p>即使director仍然会将连接发送到错误的服务器，该服务器也会知道如何将数据包转发到正确的服务器。 就TCP流而言，GLB director层是完全无状态的：director服务器可以随时进出，并且总是选择相同的主/辅服务器，只要它们的转发表匹配（但它们很少改变）。 在变更代理时有些细节需要注意，我们将在下面介绍。</p><h3 id="维护Hash集合不变"><a href="#维护Hash集合不变" class="headerlink" title="维护Hash集合不变"></a>维护Hash集合不变</h3><p>GLB Director设计的核心归结为始终如一地选择主服务器和辅助服务器，并允许代理层服务器根据需要排空和填充。 我们认为每个代理服务器都有一个状态，当有服务器加入或者退出时调整状态。</p><p>我们创建一个静态二进制转发表，它以相同方式在每个控制器服务器上生成，以将进入的连接映射到给定的主服务器和辅助服务器。 我们并没有采用在数据包处理时从所有可用服务器中选择服务器的这种复杂逻辑，而是通过创建表（65k行）这种间接的方式，每行包含主服务器和辅助服务器IP地址。 该表以二维数组的方式将数据存储在内存中，每个表大约512kb。 当数据包到达时，我们始终将其（仅基于数据包数据）hash到该表中的同一行（使用hash作为数组的索引），这提供了一致的主服务器和辅助服务器对。</p><p><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8kz1e7z2j30ma089t9a.jpg" alt="Alt text"></p><p>我们希望每个服务器在主要和辅助字段中大致相同，并且永远不会出现在同一行中。 当我们添加新服务器时，我们希望某些行使其主服务器成为辅助服务器，并且新服务器将成为主服务器。 同样，我们希望新服务器在某些行中成为辅助服务器。 当我们删除服务器时，在它是主服务器的任何行中，我们希望辅助服务器成为主服务器，而另一个服务器则成为辅助服务器。</p><p>这听起来很复杂，但可以用几个不变量简洁地概括：</p><ul><li>当我们更改服务器集时，应保持现有服务器的相对顺序。</li><li>服务器的顺序应该是可计算的，除了服务器列表之外没有任何其他状态（可能还有一些预定义的种子）。</li><li>每个服务器在每行中最多应出现一次。</li><li>每个服务器在每列中的出现次数应大致相同。</li></ul><p>针对上述的一些问题，集合hash是一个理想的选择，因为它可以很好地满足这些不变量。 每个服务器（在我们的例子中，IP）都与行号一起进行hash，服务器按该hash（只是一个数字）进行排序，并且我们获得该给定行的服务器的唯一顺序。 我们分别将前两个作为主要和次要。</p><p>将保持相对顺序，因为无论包含哪些其他服务器，每个服务器的hash都是相同的。 生成表所需的唯一信息是服务器的IP。由于我们只是对一组服务器进行排序，因此服务器只出现一次。 最后，如果我们使用伪随机的良好hash函数，那么排序将是伪随机的，因此分布将如我们所期望的那样均匀。</p><h3 id="代理-Proxy-相关操作"><a href="#代理-Proxy-相关操作" class="headerlink" title="代理(Proxy)相关操作"></a>代理(Proxy)相关操作</h3><p>添加或删除代理服务器，我们需要一些特别的处理方式。这是因为转发表条目仅定义主要/辅助代理，因此排空/故障转移仅适用单个代理主机。 我们为代理服务器定义以下有效状态和状态转换：<br><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fu8kzfyezlj30de06ogls.jpg" alt="Alt text"></p><p>当代理服务器处于活动状态，耗尽或填充时，它将包含在转发表条目中。 在稳定状态下，所有代理服务器都是活动的，并且上面描述的集合点散列将在主列和辅助列中具有大致均匀且随机的每个代理服务器分布。<br>当代理服务器转换为耗尽时，我们通过交换我们原本包含的主要和次要条目来调整转发表中的条目：<br><img src="http://wx2.sinaimg.cn/mw690/0065glrAgy1fu8l17mw8ej30ma089dgh.jpg" alt="Alt text"></p><p>这具有将数据包发送到先前次要的服务器的效果。 由于它首先接收数据包，它将接受SYN数据包，因此接受任何新连接。 对于任何不理解为与本地流有关的数据包，它将其转发到其他服务器（先前的主服务器），这允许完成现有连接。</p><p>这样可以优雅地耗尽所需的连接服务器，之后可以完全删除它，并且代理可以随机填充到第二个空槽：<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8l1o422gj30ma089wf2.jpg" alt="Alt text"><br>填充中的节点看起来就像活动一样，因为该表本身允许第二次机会：<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8l429vx0j30ma089wf4.jpg" alt="Alt text"></p><p>此实现要求一次只有一个代理服务器处于活动状态以外的任何状态，这实际上在GitHub上运行良好。对代理服务器的状态更改可以与需要维护的最长连接持续时间一样快。我们正致力于设计的扩展，不仅支持主要和次要，而且一些组件（如下面列出的标题）已经包含对任意服务器列表的初始支持。</p><h3 id="数据中心内封装"><a href="#数据中心内封装" class="headerlink" title="数据中心内封装"></a>数据中心内封装</h3><p>现在有了一个算法来一致地选择后端代理服务器，但是如何在数据包内把辅助服务器（secondary server ）的信息也封装进去呢？这样主服务器可以在不理解数据包的情况下转发数据包。</p><p>LVS 的传统方式是使用IP over IP（IPIP）隧道。客户端 IP 数据包封装在内部IP数据包内，并转发到代理服务器，代理服务器对其进行解封装。但很难在 IPIP 数据包中编码其他服务器的元数据，因为唯一可用的空间是 IP 选项，数据中心路由器传递未知 IP 的数据包到处理软件（称之为“第2层慢速路径”），速度从每秒数百万到数千个数据包。<br><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fu8l58ayonj30is0b4769.jpg" alt="Alt text"></p><p>为了避免这种情况，需要将数据隐藏在路由器不同数据包格式中，避免它试图去理解。我们最初采用原始 Foo-over-UDP（FOU）和自定义 GRE载荷（payload），基本上封装了 UDP 数据包中的所有内容。我们最近转换到通用 UDP 封装（GUE），它提供了封装内部 IP 协议的标准 UDP 数据包。我们将辅助服务器的 IP 放在GUE标头的私有数据中。从路由器的角度来看，这些数据包都是两个普通服务器之间的内部数据中心 UDP 数据包。</p><p>使用 UDP 的另一个好处是源端口可以使用每个连接的哈希填充，以便它们通过不同的路径（在数据中心内使用ECMP）在数据中心内流动，并可在代理服务器的 NIC 的不同 RX 队列上接收消息（类似使用 TCP/IP 头字段的哈希）。这对 IPIP 是不可能的，因为大多数数据中心的 NIC 只能理解普通 IP，TCP/IP 和 UDP/IP。值得注意的是，NIC 无法查看 IP/IP 数据包。</p><p>当代理服务器想要将数据包发送回客户端时，它不需要封装或通过我们的导向器层（director tier）返回，它可以直接发送数据到客户端（通常称为“Direct Server Return”）。这是典型的负载均衡器设计，对于内容提供商尤其有用，因为大多数情况都是出站流量远大于入站流量。<br>数据包流如下图所示：<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8l5kjgejj30t10enjtj.jpg" alt="Alt text"></p><h3 id="引入DPDK"><a href="#引入DPDK" class="headerlink" title="引入DPDK"></a>引入DPDK</h3><p>自从首次公开讨论了我们的初始设计以来，我们已经完全使用 DPDK重写了 glb-director 。DPDK 是一个开源的通过绕过Linux内核，允许从用户空间进行非常快速的数据包处理的项目。这样就能够在普通 NIC 上通过 CPU 上实现 NIC 线路速率处理，并可轻松扩展导向器层，以处理与公共连接所需的入站流量一样多的流量。这在防 DDoS 攻击中尤为重要，我们不希望负载均衡器成为瓶颈。</p><p>GLB 最初的目标之一是可以在通用数据中心的硬件上运行，而无需任何特殊的硬件配置。 GLB 的 Director 和代理服务器都可像数据中心的普通服务器一样供应。每个服务器都有一对绑定的网络接口，这些接口在 GLB Director 服务器上的 DPDK 和 Linux 系统之间共享。</p><p>现代 NIC 支持SR-IOV，这种技术可以使单个 NIC 从操作系统的角度看起来像多个 NIC。这通常由虚拟机管理程序使用，以要求真实 NIC（“Physical Function”）为每个 VM 创建多个虚拟 NIC（“Virtual Functions”）。为了使 DPDK 和 Linux 内核能够共享 NIC，我们使用 flow bifurcation，它将特定流量（目标是 GLB IP 地址）发送给我们DPDK 在 Virtual Function 上处理，同时将剩余的数据包与 Linux 内核的网络堆栈保留在 Physical Function 上。</p><p>我们发现 Virtual Function 上 DPDK 的数据包处理速率可以满足要求。 GLB Director 使用 DPDK Packet Distributor模式来分发封装数据包的任务到机器上的 CPU，支持任意数量的 CPU 核心，因为它是无状态的，可以高度并行化。<br><img src="http://wx3.sinaimg.cn/mw690/0065glrAgy1fu8l5xvlvrj30sq086t9f.jpg" alt="Alt text"></p><p>GLB Director 支持匹配和转发包含 TCP 有效负载的入站 IPv4 和 IPv6 数据包，以及作为 Path MTU Discovery的一部分的入站 ICMP Fragmentation Required 消息。</p><h3 id="使用Scapy为DPDK加入测试用例"><a href="#使用Scapy为DPDK加入测试用例" class="headerlink" title="使用Scapy为DPDK加入测试用例"></a>使用Scapy为DPDK加入测试用例</h3><p>一个典型的问题是，在创建（或使用）那些使用了低级原语（例如直接与NIC通信）但是高速运行的技术时，它们变得非常难以测试。作为创建GLB Director的一部分，我们也创建了一个测试环境，支持对我们的DPDK应用进行简单的端对端包流测试，通过影响DPDK的方式支持一个环境抽象层（EAL），允许物理NIC和基于libpcap的本地接口，在应用视图中是相同的。</p><p>这允许我们在Scapy中写测试，使用简单的Python的lib包查看，操作和写数据包。通过创建一个Linux的虚拟网卡驱动，一边用Scapy，另一边用DPDK，我们能传输定制的包并且验证我们软件在另一边支持的功能，这是一个完整GUE封装的后端代理服务期望的数据包。<br><img src="http://wx1.sinaimg.cn/mw690/0065glrAgy1fu8l6bar2hj30dp04kmx5.jpg" alt="Alt text"></p><p>该方法允许我们测试更多的复杂行为，例如为了正确路由，遍历传输层的ICMPv4/ICMPv6头获取源IP和TCP端口，以便正确转发来自外部路由器的ICMP消息。</p><h3 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h3><p>GLB的设计包含了优雅地处理服务器故障的部分。目前设计包含主/备，对于给定的转发表/客户端，意味着我们可以通过健康检查通过观察每个Director来解决单服务器故障。我们运行一个名为glb-healthcheck的服务，它不断验证每个后端服务器的GUE隧道和任意HTTP端口。</p><p>当服务器出现故障时，我们将切换主/备，将备换成主。这是服务器的“软切换”，支持故障转移的好办法。如果健康检查失败是误报，则连接不会中断，它们只会换一条不同的路径遍历。</p><p>proxy使用iptables提供第二次机会</p><p>构成GLB的最后一个组件是Netfilter模块和iptables的目标，它在每个代理服务器上运行，并提供“第二次机会”进行设计。</p><p>此模块提供了一个简单的任务，根据Linux内核TCP堆栈，确定每个GUE数据包的内部TCP / IP数据包是否在本地有效，如果不是，则将其转发到下一个代理服务器（备服务器），而不是在当前服务器解封装。</p><p>在数据包是SYN（新连接）或在本地对已建立的连接有效的情况下，当前服务器会接收它。然后，我们接收GUE包，使用包含fou模块的Linux 内核4.x GUE在本地处理它。</p><h3 id="已经开源"><a href="#已经开源" class="headerlink" title="已经开源"></a>已经开源</h3><p>当我们准备开始写一个更好的数据中心负载均衡器时，我们决定将其开源，以便其他人可以从我们的工作中受益。我们很高兴能在github/glb-director上开源所有这些组件。我们允许其他人能使用它，并且将它作为负载均衡的通用解决方案，在物理数据中心环境中的商用硬件上运行。<br><img src="http://wx4.sinaimg.cn/mw690/0065glrAgy1fu8l6tqx4uj30e90apt95.jpg" alt="Alt text"></p><p>开源项目地址：<a href="https://github.com/github/glb-director">https://github.com/github/glb-director</a></p><p>英文原文：<a href="https://githubengineering.com/glb-director-open-source-load-balancer/">https://githubengineering.com/glb-director-open-source-load-balancer/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在GitHub，我们在网络边缘的metal cloud上每秒处理数万个请求。 我们之前文章已经介绍过GLB，这是我们针对裸机数据中心的可扩展负载均衡解决方案，它支持大多数GitHub的对外服务，并且还为我们最关键的内部系统提供负载均衡服务，例如高可用MySQL集群。 今天，我们很高兴能够分享有关负载均衡器设计的更多细节，并将GLB Director开源。&lt;/p&gt;
&lt;p&gt;GLB Director是4层负载均衡器，可在大量物理机器上扩展单个IP地址，同时尝试在修改期间最大限度地减少连接中断。 GLB Director不会替换像haproxy和nginx这样的服务，而是部署在这些服务（或任何TCP服务）之前，允许它们跨多个物理机器扩展，而不需要每台机器都有唯一的IP地址。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://luoji.live/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="glb" scheme="https://luoji.live/tags/glb/"/>
    
    <category term="load balance" scheme="https://luoji.live/tags/load-balance/"/>
    
    <category term="负载均衡" scheme="https://luoji.live/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Ingress开启HTTPS</title>
    <link href="https://luoji.live/k8s/k8s-enable-tls-ingress-20180802.html"/>
    <id>https://luoji.live/k8s/k8s-enable-tls-ingress-20180802.html</id>
    <published>2018-08-02T08:19:36.000Z</published>
    <updated>2021-01-05T16:26:11.348Z</updated>
    
    <content type="html"><![CDATA[<p>为你的Ingress开启HTTPS支持, 使应用更加安全。Ingress支持HTTPS配置比较简单，这里使用私用证书进行配置，浏览器中会提示<code>not secure</code>，需要到服务商买权威的CA证书。</p><a id="more"></a><h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> openssl req <span class="literal">-x509</span> <span class="literal">-nodes</span> <span class="literal">-days</span> <span class="number">365</span> <span class="literal">-newkey</span> rsa:<span class="number">2048</span> <span class="literal">-keyout</span> dex.key <span class="literal">-out</span> dex.crt <span class="literal">-subj</span> <span class="string">&quot;/CN=dex.sso/O=dex.sso&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span> <span class="built_in">cat</span> dex.key | base64</span><br><span class="line"><span class="variable">$</span> <span class="built_in">cat</span> dex.crt | base64</span><br></pre></td></tr></table></figure><h3 id="配置Secret"><a href="#配置Secret" class="headerlink" title="配置Secret"></a>配置Secret</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: v<span class="number">1</span></span><br><span class="line"><span class="attribute">data</span>:</span><br><span class="line">  <span class="attribute">tls</span>.crt: LS<span class="number">0</span>tLS<span class="number">1</span>CRUdJTiBDRVJUSUZJQ<span class="number">0</span>FURS<span class="number">0</span>tLS<span class="number">0</span>tCk<span class="number">1</span>JSUN<span class="number">4</span>RENDQWF<span class="number">3</span>Q<span class="number">0</span>NRRENzeHpHVTI<span class="number">5</span>UFl<span class="number">6</span>QU<span class="number">5</span>CZ<span class="number">2</span>txaGtpRzl<span class="number">3</span>MEJBUXNGQURBa<span class="number">01</span>SQXdEZ<span class="number">1</span>lEVlFRRERBZGsKWlhndWMzTnZNUkF<span class="number">3</span>RGdZRFZRUUtEQWRrWlhndWMzTnZNQjRYRFRFNE<span class="number">1</span>EZ<span class="number">3</span>dNakEzTkRFek<span class="number">5</span>sb<span class="number">1</span>hEVEU<span class="number">1</span>TURndwpNakEzTkRFek<span class="number">5</span>sb<span class="number">3</span>dKREVRTUE<span class="number">0</span>R<span class="number">0</span>ExVUVBd<span class="number">3</span>dIWkdWNExuTnpiekVRTUE<span class="number">0</span>R<span class="number">0</span>ExVUVDZ<span class="number">3</span>dIWkdWNExuTnpiekNDCkFTSXdEUVlKS<span class="number">29</span>aSWh<span class="number">2</span>Y<span class="number">05</span>BUUVCQlFBRGdnRVBBRENDQVFvQ<span class="number">2</span>dnRUJBTDJIeDBIQytDY<span class="number">3</span>Q<span class="number">4</span>TjhJNDVnRk<span class="number">1</span>yNXYKV<span class="number">1</span>d<span class="number">2</span>SUZIY<span class="number">1</span>hSTDRLeUc<span class="number">5</span>dW<span class="number">91</span>MlRZYVhNNHRSSjU<span class="number">2</span>VGtXSzhLSUFnd<span class="number">1</span>RnUkFSUnJhTjFuMzZuaGFpM<span class="number">0</span>xOYWxRZgpYTWhLMUo<span class="number">5</span>cXI<span class="number">3</span>bklLLzlvYjdYU<span class="number">1</span>UxTzlOR<span class="number">2</span>NSeU<span class="number">1</span>ldkVTcGJ<span class="number">2</span>bmh<span class="number">4</span>dFkzNnVuR<span class="number">3</span>hwT<span class="number">3</span>hidjFsM<span class="number">25</span>Oa<span class="number">1</span>NkRXYyCmN<span class="number">6</span>bGFWd<span class="number">1</span>U<span class="number">1</span>VGwwTlZsTlNkcjZ<span class="number">1</span>YmRYYS<span class="number">85</span>MXhOUnJDZkFwNjcydDMyaVZNMXhyNkNESW<span class="number">9</span>qOHVjL<span class="number">3</span>AxQmpjYkcKTDROckcwNTZBWDRBREVYWGRrMEJISzM<span class="number">4</span>d<span class="number">29</span>yOENpcTFMSUhNVnpwQXJhRW<span class="number">1</span>FRUxSUU<span class="number">9</span>SbU<span class="number">1</span>wY<span class="number">1</span>htRWZiNjUzcQo<span class="number">3</span>RmNPejVpRjVkVVZVVzN<span class="number">3</span>TXJZSjUzUzB<span class="number">6</span>ZjJZc<span class="number">2</span>FlQ<span class="number">01</span>pRzZzMUM<span class="number">5</span>Znl<span class="number">0</span>QnpwNHBzRXQreWpZcEhZUGlBUlVDCkF<span class="number">3</span>RUFBVEFOQmdrcWhraUc<span class="number">5</span>dzBCQVFzRkFBT<span class="number">0</span>NBUUVBbmdSR<span class="number">0</span>JrWjlhRGV<span class="number">5</span>YjJ<span class="number">0</span>YityMjJJK<span class="number">1</span>N<span class="number">0</span>ZlNHMzdEWFoKS<span class="number">3</span>EzSnlyTTdjeUlacGRmRjBKdTlJWHA<span class="number">0</span>Z<span class="number">1</span>IwUFVhQzR<span class="number">1</span>K<span class="number">2</span>V<span class="number">6</span>NG<span class="number">8</span>vc<span class="number">0</span>ZDaGtNcW<span class="number">5</span>QUE<span class="number">93</span>cTJrOTlPRXFSOTVrSgoydllDQ<span class="number">0</span>ZnNVk<span class="number">4</span>VklFTnNwdHpJQlZDdFBjRnlabnNiTENDMUFuRGVvZCt<span class="number">3</span>aUJ<span class="number">3</span>THhLWU<span class="number">1</span>MN<span class="number">0</span>oyeTNXd<span class="number">2</span>RPZFp<span class="number">3</span>ClJiWlBKT<span class="number">1</span>NsL<span class="number">0</span>FCZmdMV<span class="number">2</span>kxMExQWTBUSmdjRXp<span class="number">3</span>QU<span class="number">9</span>VTUh<span class="number">2</span>SnpXUXNzY<span class="number">2</span>pTU<span class="number">0</span>Z<span class="number">4</span>clFHWXcyVDRFN<span class="number">1</span>lvV<span class="number">3</span>puWXEKYy<span class="number">9</span>BTVA<span class="number">1</span>NGhYbkhpWUp<span class="number">6</span>QmZCR<span class="number">0</span>hGMDErVm<span class="number">1</span>KbExRK<span class="number">2</span>VvcDJpSVBqdUc<span class="number">1</span>OGdBdWlXMk<span class="number">5</span>DTGtTdHNSRzREZ<span class="number">0</span>VpdApWRUo<span class="number">0</span>MVZETHp<span class="number">3</span>UkZHbkNIb<span class="number">1</span>FnZWt<span class="number">5</span>YmJVZ<span class="number">0</span>twb<span class="number">1</span>VHMDYwTDBBcnZzZVlWTmFjWk<span class="number">5</span>lNDVRQ<span class="number">0</span>E<span class="number">9</span>PQotLS<span class="number">0</span>tLUVORCBDRVJUSUZJQ<span class="number">0</span>FURS<span class="number">0</span>tLS<span class="number">0</span>tCg==</span><br><span class="line">  <span class="attribute">tls</span>.key: LS<span class="number">0</span>tLS<span class="number">1</span>CRUdJTiBQUklWQVRFIEtFWS<span class="number">0</span>tLS<span class="number">0</span>tCk<span class="number">1</span>JSUV<span class="number">2</span>QUlCQURBTkJna<span class="number">3</span>Foa<span class="number">2</span>lHOXcwQkFRRUZBQVNDQktZd<span class="number">2</span>dnU<span class="number">2</span>lBZ<span class="number">0</span>VBQW<span class="number">9</span>JQkFRQzloOGRCd<span class="number">3</span>ZnbkxmRGYKQ<span class="number">09</span>PWUJUSytiMWxyeUJSM<span class="number">0</span>YwUytDc<span class="number">2</span>h<span class="number">2</span>YnFMdGsyR<span class="number">2</span>x<span class="number">6</span>T<span class="number">0</span>xVU<span class="number">2</span>VlazVGaXZDaUFJTUU<span class="number">0</span>RVFFVWEyamRaOStwNApXb<span class="number">3</span>R<span class="number">5</span>eldwVUgxeklTdFNmYXErNXlDdi<span class="number">9</span>hRysxMGxOVHZUUm<span class="number">5</span>FY<span class="number">2</span>pIcnhFcVc<span class="number">3</span>NTRjYldOK<span class="number">3</span>JweHNhVHNXNzlaCmQ<span class="number">1</span>elpFblJMOW<span class="number">5</span>NNVdsY<span class="number">0</span>ZPVTVkRFZaVFVuYStybTNWMnYvZGNUVWF<span class="number">3</span>bndLZXU<span class="number">5</span>cmQ<span class="number">5</span>b<span class="number">2</span>xUTmNhK<span class="number">2</span>dneUtJL<span class="number">0</span>wKblA<span class="number">2</span>ZFFZM<span class="number">0</span>d<span class="number">4</span>aStEYXh<span class="number">0</span>T<span class="number">2</span>VnRitBQXhGMTNaTkFSeXQvTUtLL<span class="number">0</span>FvcXRTeUJ<span class="number">6</span>RmM<span class="number">2</span>UUsyaEpoQkMwVURrWmpLWApGNWhIMit<span class="number">1</span>ZDZ<span class="number">1</span>eFhEcytZaGVYVkZWRnQ<span class="number">4</span>REsyQ<span class="number">2</span>VkMHRNMzltTEduZ<span class="number">2</span>pJaHVyTlF<span class="number">2</span>WDhyUWM<span class="number">2</span>ZUtiQkxmc<span class="number">28</span>yCktSMkQ<span class="number">0</span>Z<span class="number">0</span>VWQWdNQkFBRUNnZ<span class="number">0</span>VBZWZ<span class="number">1</span>ZG<span class="number">54</span>R<span class="number">2</span>hMWFpBQlF<span class="number">4</span>dmp<span class="number">6</span>UXBTSy<span class="number">9</span>aMmFqWW<span class="number">94</span>MXl<span class="number">2</span>TzJydXl<span class="number">4</span>MTZIcG<span class="number">0</span>KNnBOSG<span class="number">1</span>tSkdtTFh<span class="number">1</span>N<span class="number">2</span>htU<span class="number">0</span>xETUt<span class="number">3</span>Mm<span class="number">1</span>xRUhKS<span class="number">0</span>ZibWVTdi<span class="number">9</span>icUhQVTczZVArOGxOdDV<span class="number">5</span>dXBOL<span class="number">1</span>VrWG<span class="number">5</span>pREIvbQpTWXNJNHgxcklEbm<span class="number">96</span>bDVsNUpjcXhzcU<span class="number">1</span>uUWc<span class="number">4</span>b<span class="number">1</span>hNYllMVy<span class="number">9</span>XV<span class="number">2</span>FyT<span class="number">3</span>dqUGVDWlF<span class="number">3</span>NmZ<span class="number">5</span>YTZsZDJockZHa<span class="number">3</span>VGCldESTM<span class="number">3</span>dGtqdjJJNHJRdW<span class="number">1</span>IZFk<span class="number">0</span>VUoyUzNOL<span class="number">3</span>JlL<span class="number">2</span>NnUkZVVDBhbXpabVN<span class="number">5</span>T<span class="number">0</span>V<span class="number">6</span>WmloMHU<span class="number">5</span>U<span class="number">28</span>xK<span class="number">2</span>w<span class="number">0</span>R<span class="number">0</span>ZtQTgKeGNHTjVCZUIxMzBzdlp<span class="number">3</span>UExRRXJxdXJiTFFwN<span class="number">3</span>Yzd<span class="number">2</span>Fkb<span class="number">2</span>phOGJzVGFHd<span class="number">1</span>hyNFlMWWpXVnhFVWhZcHZXZFhBRwpLK<span class="number">05</span>jNU<span class="number">9</span>xMlFaanRSa<span class="number">29</span>kVEltNXFjQUpSSU<span class="number">5</span>mU<span class="number">1</span>JIYkhQUWdTNHFGQVFLQmdRRHNwM<span class="number">3</span>ZqZWRuOHJDOHI<span class="number">2</span>cWJ<span class="number">2</span>CldiYzlPeDREOVJRVUVvSll<span class="number">4</span>MlpBSFZObEhtdU<span class="number">5</span>YNk<span class="number">9</span>WaG<span class="number">1</span>XaDFibkdDbDN<span class="number">6</span>T<span class="number">2</span>ZJQU<span class="number">11</span>bm<span class="number">1</span>GZ<span class="number">2</span>Uwc<span class="number">24</span>zTVF<span class="number">2</span>aVYKbU<span class="number">5</span>aWEg<span class="number">3</span>YVRpLytyYXNPUVdSajZiSHNDWEEyR<span class="number">0</span>ZCV<span class="number">3</span>A<span class="number">2</span>QlJCbjdRbHdxaGFEblpYYnR<span class="number">6</span>bHZ<span class="number">0</span>aXJqZnJsTUhoTgp<span class="number">2</span>RGtLT<span class="number">3</span>pxcFN<span class="number">1</span>bjdSaTcraWpsZDk<span class="number">4</span>SU<span class="number">1</span>oUUtCZ<span class="number">1</span>FETkJoK<span class="number">0</span>JMaWFWaDl<span class="number">3</span>cTZZc<span class="number">0</span>JNNHMzQ<span class="number">0</span>JyWkd<span class="number">2</span>VHVKdmNPClBBcm<span class="number">1</span>MUVB<span class="number">6</span>K<span class="number">2</span>VaTGNOMDlQNXBCR<span class="number">2</span>t<span class="number">2</span>S<span class="number">1</span>dBQUEyY<span class="number">2</span>FUdDRKUmp<span class="number">3</span>VHpxZjFzOHhwR<span class="number">3</span>FWb<span class="number">1</span>JmRjdlZWxXMzQwb<span class="number">1</span>AKVFdQcVNndHpGSkV<span class="number">4</span>and<span class="number">2</span>cmZ<span class="number">2</span>WXhpWlFlSmY<span class="number">0</span>MVBTNFFMbUJqSWhUYU<span class="number">5</span>JZUdvUTFhc<span class="number">0</span>NCTkdqWDdYeEZkSElOMApxNkFpL<span class="number">05</span>OUFVRS<span class="number">0</span>JnRTRrWDN<span class="number">3</span>VldDMWVqWlRxdm<span class="number">9</span>SNkUwOWNuZVNnb<span class="number">0</span>NpZ<span class="number">2</span>svbk<span class="number">1</span>uYTYrQURON<span class="number">2</span>YvZ<span class="number">0</span>doSFZ<span class="number">6</span>CkUwd<span class="number">0</span>V<span class="number">6</span>bnJlSVhlV<span class="number">3</span>dwbmVOZTJMaUsvWjRELzZQU<span class="number">3</span>JvZEo<span class="number">0</span>QUVzRlZrTzZCS<span class="number">21</span>JWGlXL<span class="number">25</span>NaGJ<span class="number">0</span>WG<span class="number">1</span>uUFovZmEKY<span class="number">2</span>hYWkxocnAwNzBvMlZxMWVLdEVBVGRrZ<span class="number">2</span>x<span class="number">2</span>N<span class="number">1</span>RUNGQwSmZZUnQ<span class="number">1</span>dnBpTWFZWm<span class="number">9</span>hK<span class="number">2</span>laVkVQWWhBb<span class="number">0</span>dBSHVGUQpOM<span class="number">1</span>hMQy<span class="number">9</span>TbG<span class="number">5</span>iVUZZYzN<span class="number">3</span>cHY<span class="number">1</span>S<span class="number">2</span>hPN<span class="number">0</span>JlMmxWQnNqV<span class="number">1</span>gycmlVSW<span class="number">9</span>RUE<span class="number">1</span>hb<span class="number">0</span>hBU<span class="number">0</span>xhRWpjcDRKdnBiRW<span class="number">5</span>ickpTCko<span class="number">1</span>U<span class="number">2</span>lDMDFNUlcrc<span class="number">1</span>FuNVplWTdBLzBOdnk<span class="number">3</span>MnBOdnJTRk<span class="number">1</span>USVNySUxXR<span class="number">3</span>FTUWdzaWE<span class="number">3</span>MnNHSXBpYW<span class="number">9</span>SbmZycHQKZkNEekFSYXVYd<span class="number">0</span>c<span class="number">4</span>OEM<span class="number">3</span>Yy<span class="number">9</span>wLzNCNEIvTGdZUWFxODY<span class="number">5</span>R<span class="number">29</span>lTGJFQ<span class="number">2</span>dZQVB<span class="number">5</span>NU<span class="number">1</span>heXVTRUFEaTdyZHVJcVArZgp<span class="number">4</span>amw<span class="number">5</span>elhwMGpZa<span class="number">2</span>RtOCtmNVhhdGlIaFl<span class="number">6</span>STBzaHdsZHBXcU<span class="number">85</span>R<span class="number">1</span>NoR<span class="number">2</span>VMVi<span class="number">9</span>Md<span class="number">2</span>d<span class="number">1</span>bVFhQlRCa<span class="number">3</span>Bta<span class="number">0</span>JSOFlGCkQzbmhCQ<span class="number">0</span>hjaDVIeEd<span class="number">0</span>UkVzWnlRUjJtNXhhRGhVL<span class="number">2</span>NYc<span class="number">3</span>ZFVjBBcmRUeVl<span class="number">3</span>S<span class="number">0</span>VlTStlSnVXYTl<span class="number">1</span>THdQM<span class="number">2</span>VKeEMKbFFXSXNUbm<span class="number">9</span>EQUpzWUE<span class="number">4</span>NFJST<span class="number">2</span>dMdz<span class="number">09</span>Ci<span class="number">0</span>tLS<span class="number">0</span>tRU<span class="number">5</span>EIFBSSVZBVEUgS<span class="number">0</span>VZLS<span class="number">0</span>tLS<span class="number">0</span>K</span><br><span class="line"><span class="attribute">kind</span>: Secret</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: sso-secret</span><br><span class="line">  <span class="attribute">namespace</span>: sso</span><br><span class="line"><span class="attribute">type</span>: Opaque</span><br></pre></td></tr></table></figure><h3 id="配置Ingress"><a href="#配置Ingress" class="headerlink" title="配置Ingress"></a>配置Ingress</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: extensions/v1beta1</span><br><span class="line"><span class="attribute">kind</span>: Ingress</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: dex</span><br><span class="line">  <span class="attribute">namespace</span>: sso</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">tls</span>:</span><br><span class="line">  - <span class="attribute">secretName</span>: sso-secret</span><br><span class="line">  <span class="attribute">rules</span>:</span><br><span class="line">  - <span class="attribute">host</span>: dex.sso</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">paths</span>:</span><br><span class="line">      - <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: dex</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br><span class="line">        <span class="attribute">path</span>: /</span><br></pre></td></tr></table></figure><p>Okay，配置完成。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;为你的Ingress开启HTTPS支持, 使应用更加安全。Ingress支持HTTPS配置比较简单，这里使用私用证书进行配置，浏览器中会提示&lt;code&gt;not secure&lt;/code&gt;，需要到服务商买权威的CA证书。&lt;/p&gt;</summary>
    
    
    
    <category term="k8s" scheme="https://luoji.live/categories/k8s/"/>
    
    
    <category term="kubernetes" scheme="https://luoji.live/tags/kubernetes/"/>
    
    <category term="k8s" scheme="https://luoji.live/tags/k8s/"/>
    
    <category term="ingress" scheme="https://luoji.live/tags/ingress/"/>
    
    <category term="https" scheme="https://luoji.live/tags/https/"/>
    
    <category term="tls" scheme="https://luoji.live/tags/tls/"/>
    
  </entry>
  
  <entry>
    <title>部署数据库Portgres到Kubernetes</title>
    <link href="https://luoji.live/k8s/k8s-install-portgres-20180802.html"/>
    <id>https://luoji.live/k8s/k8s-install-portgres-20180802.html</id>
    <published>2018-08-02T02:52:43.000Z</published>
    <updated>2021-01-05T16:26:11.371Z</updated>
    
    <content type="html"><![CDATA[<p>之前我们已成功安装了kubernetes，现在可以部署我们的应用服务。我们在安装ingres前先部署Portgres数据库，数据库被要求不能被外网访问并且大多数应用服务都会依赖数据库。这里需要注意的一点是数据库的数据不能丢失，所有我们需要使用持久化卷(<a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">persistent volumes</a>)。 </p><a id="more"></a><h3 id="创建Namespace"><a href="#创建Namespace" class="headerlink" title="创建Namespace"></a>创建Namespace</h3><p>编写00-namespace.yaml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> Namespace</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> db</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line"><span class="symbol">    name:</span> db</span><br></pre></td></tr></table></figure><p>运行命令创建 <code>kubectl create -f 00-namespace.yaml</code></p><h3 id="创建PV-PVC"><a href="#创建PV-PVC" class="headerlink" title="创建PV/PVC"></a>创建PV/PVC</h3><p>编写01-postgres-pv.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">db-postgres-pv</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">db</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">  <span class="comment"># volumeMode field requires BlockVolume Alpha feature gate to be enabled.</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">local-storage</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line">  <span class="attr">nodeAffinity:</span></span><br><span class="line">    <span class="attr">required:</span></span><br><span class="line">      <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">          <span class="attr">values:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node01</span></span><br></pre></td></tr></table></figure><p>kubernetes支持多种PV，由于我本机没有额外的存储服务(nfs service/cefs …)，所以我选择使用local方式，也就是<code>storageClassName: local-storage</code>。这种方式需要指定节点和挂载目录，并需要提前将目录准备好。如上例子中被指定到node01接点的/data目录。</p><p>运行命令创建 <code>kubectl create -f 01-postgres-pv.yaml</code></p><p>创建后可使用<code>kubectl get pv -n db</code>查看</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl <span class="keyword">get</span> pv -n db</span><br><span class="line"><span class="type">NAME</span>               CAPACITY   <span class="keyword">ACCESS</span> MODES   RECLAIM <span class="keyword">POLICY</span>   STATUS    CLAIM                               STORAGECLASS    REASON    AGE</span><br><span class="line">db-postgres-pv     <span class="number">5</span>Gi        RWO            <span class="keyword">Delete</span>           Bound                                         <span class="keyword">local</span>-<span class="keyword">storage</span>             <span class="number">1</span>d</span><br></pre></td></tr></table></figure><p>编写02-postgres-pvc.yaml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> PersistentVolumeClaim</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> db-postgres-pvc-postgres<span class="number">-0</span></span><br><span class="line"><span class="symbol">  namespace:</span> db</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  accessModes:</span></span><br><span class="line">    - ReadWriteOnce</span><br><span class="line"><span class="symbol">  volumeMode:</span> Filesystem</span><br><span class="line"><span class="symbol">  resources:</span></span><br><span class="line"><span class="symbol">    requests:</span></span><br><span class="line"><span class="symbol">      storage:</span> <span class="number">5</span>Gi</span><br><span class="line"><span class="symbol">  storageClassName:</span> local-storage</span><br></pre></td></tr></table></figure><p>注意：pvc的命名是有一定规则的，否则就无法将PV与PVC关系起来，关联成功后PV的CLAIM值是对应的namespace/PVC名称。</p><p>运行命令创建 <code>kubectl create -f 02-postgres-pvc.yaml</code></p><p>创建后可使用<code>kubectl get pvc -n db</code>查看</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get <span class="built_in">pv</span> -<span class="built_in">n</span> <span class="built_in">db</span></span><br><span class="line">NAME               CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                               STORAGECLASS    REASON    AGE</span><br><span class="line"><span class="built_in">db</span>-postgres-<span class="built_in">pv</span>     <span class="number">5</span>Gi        RWO            Delete           Bound     <span class="built_in">db</span>/<span class="built_in">db</span>-postgres-pvc-postgres-<span class="number">0</span>       local-storage             <span class="number">1</span>d</span><br><span class="line"></span><br><span class="line"># kubectl get pvc -<span class="built_in">n</span> <span class="built_in">db</span></span><br><span class="line">NAME                         STATUS    VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS    AGE</span><br><span class="line"><span class="built_in">db</span>-postgres-pvc-postgres-<span class="number">0</span>   Bound     <span class="built_in">db</span>-postgres-<span class="built_in">pv</span>   <span class="number">5</span>Gi        RWO            local-storage   <span class="number">1</span>d</span><br></pre></td></tr></table></figure><h3 id="创建Portgres服务"><a href="#创建Portgres服务" class="headerlink" title="创建Portgres服务"></a>创建Portgres服务</h3><p>编写03-postgres-statefulset.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">db</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">svc:</span> <span class="string">postgres</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5432</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">svc:</span> <span class="string">postgres</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">db</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">svc:</span> <span class="string">postgres</span> <span class="comment"># has to match .spec.template.metadata.labels</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span> <span class="comment"># by default is 1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">svc:</span> <span class="string">postgres</span> <span class="comment"># has to match .spec.selector.matchLabels</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">postgres:10.3-alpine</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POSTGRES_USER</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POSTGRES_PASSWORD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PGDATA</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;/var/lib/postgresql/data&quot;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5432</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">db-postgres-pvc</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/postgresql/data</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">db-postgres-pvc</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">&quot;local-storage&quot;</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">5Gi</span></span><br></pre></td></tr></table></figure><p>创建了集群内部访问的Service, 使用StatefulSet创建带状态的服务类型，服务使用了本地PV，Portgres服务只会在node01节点运行。参数replicas: 1指定副本数，这里设置1就好，如果想达到多副本，使用数据库本身的集群方式搭建。 </p><p>运行命令创建 <code>kubectl create -f 03-postgres-statefulset.yaml</code></p><p>OK, 我们登陆<a href="http://127.0.0.1:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/overview?namespace=db">UI界面</a>查看服务运行状况。</p><h3 id="访问Portgres"><a href="#访问Portgres" class="headerlink" title="访问Portgres"></a>访问Portgres</h3><p>Portgres的Service类型只能在集群内部访问，访问方式：postgres.db:5432 (service.namespace:port)。如果想外部访问你可以修改service类型或使用Ingress实现，但这里我们不想外部能访问到数据库。</p><p>不过这里可以使用proxy临时访问到集群内部服务：<code>kubectl port-forward postgres-0 -n db 5434:5432</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前我们已成功安装了kubernetes，现在可以部署我们的应用服务。我们在安装ingres前先部署Portgres数据库，数据库被要求不能被外网访问并且大多数应用服务都会依赖数据库。这里需要注意的一点是数据库的数据不能丢失，所有我们需要使用持久化卷(&lt;a href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/&quot;&gt;persistent volumes&lt;/a&gt;)。 &lt;/p&gt;</summary>
    
    
    
    <category term="k8s" scheme="https://luoji.live/categories/k8s/"/>
    
    
    <category term="kubernetes" scheme="https://luoji.live/tags/kubernetes/"/>
    
    <category term="k8s" scheme="https://luoji.live/tags/k8s/"/>
    
    <category term="centos" scheme="https://luoji.live/tags/centos/"/>
    
    <category term="portgres" scheme="https://luoji.live/tags/portgres/"/>
    
    <category term="db" scheme="https://luoji.live/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>使用Vagrant搭建Kubernetes集群</title>
    <link href="https://luoji.live/k8s/vagrant-k8s-20180729.html"/>
    <id>https://luoji.live/k8s/vagrant-k8s-20180729.html</id>
    <published>2018-07-29T10:47:35.000Z</published>
    <updated>2021-01-05T16:26:11.379Z</updated>
    
    <content type="html"><![CDATA[<p>Vagrant是用来管理虚拟机的，如VirtualBox、VMware、AWS等，主要好处是可以提供一个可配置、可移植和复用的软件环境，可以使用shell、chef、puppet等工具部署。所以vagrant不能单独使用，如果你用它来管理自己的开发环境的话，必须在自己的电脑里安装了虚拟机软件，这里使用virtualbox。 virtualbox是免费使用，VMware使用需要购买license。使用Vagrant方便快捷的搭建kubernetes集群.</p><a id="more"></a><h3 id="安装Vagrant"><a href="#安装Vagrant" class="headerlink" title="安装Vagrant"></a>安装Vagrant</h3><ul><li>下载安装VirtualBox: <a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></li><li>下载安装Vagrant:    <a href="http://downloads.vagrantup.com/">http://downloads.vagrantup.com</a></li></ul><h3 id="安装Vagrant插件"><a href="#安装Vagrant插件" class="headerlink" title="安装Vagrant插件"></a>安装Vagrant插件</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin <span class="keyword">install</span> vagrant-vbguest</span><br><span class="line">vagrant plugin <span class="keyword">install</span> vagrant-vbox-snapshot</span><br></pre></td></tr></table></figure><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 保存快照</span></span><br><span class="line">vagrant snapshot take</span><br><span class="line">vagrant snapshot list</span><br><span class="line"><span class="meta"># 恢复快照</span></span><br><span class="line">vagrant snapshot go</span><br><span class="line"><span class="meta"># 删除快照</span></span><br><span class="line">vagrant snapshot delete</span><br></pre></td></tr></table></figure><h3 id="编写Vagrantfile"><a href="#编写Vagrantfile" class="headerlink" title="编写Vagrantfile"></a>编写Vagrantfile</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Vagrant.configure(<span class="string">&quot;2&quot;</span>) <span class="built_in">do</span> |<span class="type">config</span>|<span class="type"></span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">  config</span>.vm.define <span class="string">&quot;master&quot;</span> <span class="built_in">do</span> |<span class="type">master</span>|<span class="type"></span></span><br><span class="line"><span class="type">    master</span>.vm.box = <span class="string">&quot;geerlingguy/centos7&quot;</span></span><br><span class="line">    master.vm.hostname = <span class="string">&quot;master&quot;</span></span><br><span class="line"></span><br><span class="line">    master.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">&quot;2048&quot;</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    master.vm.network <span class="string">&quot;private_network&quot;</span>, ip: <span class="string">&quot;10.0.100.2&quot;</span></span><br><span class="line">    master.vm.synced_folder <span class="string">&quot;./data&quot;</span>, <span class="string">&quot;/share&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">&quot;node01&quot;</span> <span class="built_in">do</span> |<span class="type">node01</span>|<span class="type"></span></span><br><span class="line"><span class="type">    node01</span>.vm.box = <span class="string">&quot;geerlingguy/centos7&quot;</span></span><br><span class="line">    node01.vm.hostname = <span class="string">&quot;node01&quot;</span></span><br><span class="line"></span><br><span class="line">    node01.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">&quot;2048&quot;</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    node01.vm.network <span class="string">&quot;private_network&quot;</span>, ip: <span class="string">&quot;10.0.100.3&quot;</span></span><br><span class="line">    node01.vm.synced_folder <span class="string">&quot;./data&quot;</span>, <span class="string">&quot;/share&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">&quot;node02&quot;</span> <span class="built_in">do</span> |<span class="type">node02</span>|<span class="type"></span></span><br><span class="line"><span class="type">    node02</span>.vm.box = <span class="string">&quot;geerlingguy/centos7&quot;</span></span><br><span class="line">    node02.vm.hostname = <span class="string">&quot;node02&quot;</span></span><br><span class="line"></span><br><span class="line">    node02.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="built_in">do</span> |<span class="type">vb</span>|<span class="type"></span></span><br><span class="line"><span class="type">        vb</span>.memory = <span class="string">&quot;2048&quot;</span></span><br><span class="line">        vb.cpus = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    node02.vm.network <span class="string">&quot;private_network&quot;</span>, ip: <span class="string">&quot;10.0.100.4&quot;</span></span><br><span class="line">    node02.vm.synced_folder <span class="string">&quot;./data&quot;</span>, <span class="string">&quot;/share&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vagrant up</span></span><br></pre></td></tr></table></figure><h3 id="安装kubernetes"><a href="#安装kubernetes" class="headerlink" title="安装kubernetes"></a>安装kubernetes</h3><p>参考：<a href="/k8s/k8s-install-on-centos7-20180609.html">安装k8s集群</a></p><h3 id="kubernetes-v1-11-1"><a href="#kubernetes-v1-11-1" class="headerlink" title="kubernetes v1.11.1"></a>kubernetes v1.11.1</h3><p>kubernetes更新到v1.11.1版本，dns服务使用corends替代原有dns插件。其他插件镜像也升级了，国内无法下载，可提前下载Dokcer镜像，如果你机器有科学上网请忽略这一步。我提前将Docker镜像下载到国内私有hub中。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ARCH</span>=amd64</span><br><span class="line"><span class="attribute">mversion</span>=v1.11.1</span><br><span class="line"><span class="attribute">username</span>=luoji</span><br><span class="line"><span class="attribute">password</span>=password</span><br><span class="line"><span class="attribute">repo</span>=k8s.gcr.io</span><br><span class="line"><span class="attribute">store_repo</span>=r.xiaozhou.net</span><br><span class="line"><span class="attribute">store_repo_path</span>=r.xiaozhou.net/kubernetes</span><br><span class="line"></span><br><span class="line">images=(<span class="variable">$&#123;repo&#125;</span>/kube-apiserver-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-controller-manager-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-scheduler-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-proxy-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/coredns:1.1.3 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/etcd-<span class="variable">$&#123;ARCH&#125;</span>:3.2.18 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/pause:3.1 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kubernetes-dashboard-<span class="variable">$&#123;ARCH&#125;</span>:v1.8.3 \</span><br><span class="line">    quay.io/coreos/flannel:v0.10.0-amd64 \</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">docker login -u <span class="variable">$username</span> -p <span class="variable">$password</span> <span class="variable">$store_repo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="attribute">sub</span>=<span class="variable">$&#123;url%/*&#125;</span></span><br><span class="line">    <span class="attribute">idx</span>=<span class="variable">$&#123;#sub&#125;</span></span><br><span class="line">    <span class="attribute">image</span>=<span class="variable">$&#123;url:$idx+1&#125;</span></span><br><span class="line">    echo -e <span class="string">&quot;download -&gt; <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> -&gt; <span class="variable">$url</span>&quot;</span></span><br><span class="line">docker pull <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">docker tag <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> <span class="variable">$url</span></span><br><span class="line">docker rmi <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset ARCH mversion images username password repo store_repo store_repo_path</span><br></pre></td></tr></table></figure><p>配置Hosts</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/hosts</span><br><span class="line"><span class="number">10.0.100.2</span> master</span><br><span class="line"><span class="number">10.0.100.3</span> node01</span><br><span class="line"><span class="number">10.0.100.4</span> node02</span><br></pre></td></tr></table></figure><p>主节点初始化命令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kubeadm</span> init --kubernetes-version=v<span class="number">1</span>.<span class="number">11</span>.<span class="number">1</span> --pod-network-cidr=<span class="number">10.244.0.0</span>/<span class="number">16</span> --apiserver-advertise-address=<span class="number">10.0.100.2</span></span><br></pre></td></tr></table></figure><p>因kubernetes的Servie使用NodeType类型时，默认对外暴露的端口范围是30000-32767，如果你的环境有LoadBalancer支持，建议不使用NodeType。由于这是本地环境，不支持Loadalancer(目前只支持一些云服务商)。我将端口范围扩展到1-32767，需要额外的配置，这里使用<code>--config</code>参数指定配置文件。</p><p>创建kubeadm-init.conf配置文件，内容如下:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> kubeadm.k8s.io/v1alpha2</span><br><span class="line"><span class="symbol">kind:</span> MasterConfiguration</span><br><span class="line"><span class="symbol">kubernetesVersion:</span> v1<span class="number">.11</span><span class="number">.1</span></span><br><span class="line"><span class="symbol">api:</span></span><br><span class="line"><span class="symbol">  advertiseAddress:</span> <span class="number">10.0</span><span class="number">.100</span><span class="number">.2</span></span><br><span class="line"><span class="symbol">apiServerExtraArgs:</span></span><br><span class="line">  <span class="string">&quot;service-node-port-range&quot;</span>: <span class="string">&quot;1-32767&quot;</span></span><br><span class="line"><span class="symbol">networking:</span></span><br><span class="line"><span class="symbol">  podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">16</span></span><br></pre></td></tr></table></figure><p>配置<code>service-node-port-range: 1-32767</code> 指定端口范围。使用<code>kubeadm init --config kubeadm-init.conf</code>初始化命令。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vagrant是用来管理虚拟机的，如VirtualBox、VMware、AWS等，主要好处是可以提供一个可配置、可移植和复用的软件环境，可以使用shell、chef、puppet等工具部署。所以vagrant不能单独使用，如果你用它来管理自己的开发环境的话，必须在自己的电脑里安装了虚拟机软件，这里使用virtualbox。 virtualbox是免费使用，VMware使用需要购买license。使用Vagrant方便快捷的搭建kubernetes集群.&lt;/p&gt;</summary>
    
    
    
    <category term="k8s" scheme="https://luoji.live/categories/k8s/"/>
    
    
    <category term="kubernetes" scheme="https://luoji.live/tags/kubernetes/"/>
    
    <category term="k8s" scheme="https://luoji.live/tags/k8s/"/>
    
    <category term="kubeadm" scheme="https://luoji.live/tags/kubeadm/"/>
    
    <category term="vagrant" scheme="https://luoji.live/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>使用Let’s Encrypt为你的网站开启HTTPS</title>
    <link href="https://luoji.live/%E5%B7%A5%E5%85%B7/websit-enable-https-20180623.html"/>
    <id>https://luoji.live/%E5%B7%A5%E5%85%B7/websit-enable-https-20180623.html</id>
    <published>2018-06-22T18:11:27.000Z</published>
    <updated>2021-01-05T16:26:11.358Z</updated>
    
    <content type="html"><![CDATA[<p>之前使用Let’s Encrypt没有记录步骤，服务器到期迁移Blog又花了1个多小时。最终决定记录下步骤，真是好记性不如烂笔头。</p><a id="more"></a><h3 id="下载Certbot"><a href="#下载Certbot" class="headerlink" title="下载Certbot"></a>下载Certbot</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/certbot/</span>certbot</span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>生成证书前要先配置好DNS和关闭Nginx。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> certbot</span><br><span class="line"><span class="variable">$</span> ./letsencrypt<span class="literal">-auto</span> certonly <span class="literal">-d</span> www.jerrylou.me <span class="literal">-d</span> jerrylou.me</span><br></pre></td></tr></table></figure><p>选择standalone选择，证书生成在/etc/letsencrypt/live/<a href="http://www.jerrylou.me/">www.jerrylou.me/</a></p><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  www.jerrylou.me blog.jerrylou.me jerrylou.me;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/www.jerrylou.me/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/www.jerrylou.me/privkey.pem;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span>         /var/www/gunsluo.github.io;</span><br><span class="line">    <span class="attribute">index</span>        index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span>  www.jerrylou.me blog.jerrylou.me jerrylou.me;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置Cron"><a href="#配置Cron" class="headerlink" title="配置Cron"></a>配置Cron</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat <span class="regexp">/etc/</span>crontab</span><br><span class="line"><span class="number">0</span>  <span class="number">0</span>    <span class="number">1</span> *<span class="regexp">/2 * root    systemctl stop nginx &amp;&amp; /</span>root<span class="regexp">/certbot/</span>certbot-auto renew --post-hook <span class="string">&quot;systemctl start nginx&quot;</span></span><br><span class="line"></span><br><span class="line">$ <span class="regexp">/etc/i</span>nit.d/cron reload</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前使用Let’s Encrypt没有记录步骤，服务器到期迁移Blog又花了1个多小时。最终决定记录下步骤，真是好记性不如烂笔头。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://luoji.live/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="https" scheme="https://luoji.live/tags/https/"/>
    
    <category term="ssl" scheme="https://luoji.live/tags/ssl/"/>
    
    <category term="websit" scheme="https://luoji.live/tags/websit/"/>
    
    <category term="let&#39;s encrypt" scheme="https://luoji.live/tags/let-s-encrypt/"/>
    
  </entry>
  
  <entry>
    <title>在Centos7上安装Kubernetes</title>
    <link href="https://luoji.live/k8s/k8s-install-on-centos7-20180609.html"/>
    <id>https://luoji.live/k8s/k8s-install-on-centos7-20180609.html</id>
    <published>2018-06-09T13:28:27.000Z</published>
    <updated>2021-01-05T16:26:11.380Z</updated>
    
    <content type="html"><![CDATA[<p>使用KubeAdm官方工具在Centos7上安装kubernetes.</p><a id="more"></a><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>OS:          Centos7<br>K8s Version: v1.10.4</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>更新系统</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>yum update -y </span><br></pre></td></tr></table></figure><p>时区</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="string">timedatectl</span> <span class="built_in">set-timezone</span> <span class="string">Asia</span>/<span class="string">Shanghai</span></span><br></pre></td></tr></table></figure><p>配置Hosts</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/hosts</span><br><span class="line"><span class="number">10.0.100.2</span> k8smaster</span><br><span class="line"><span class="number">10.0.100.3</span> k8snode01</span><br><span class="line"><span class="number">10.0.100.4</span> k8snode02</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl stop firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl status firewalld</span></span><br></pre></td></tr></table></figure><p>关闭内存交换分区</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> swapoff <span class="literal">-a</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">cat</span> /etc/fstab</span><br><span class="line"><span class="comment">#/dev/mapper/centos-swap swap                    swap    defaults        0 0</span></span><br></pre></td></tr></table></figure><p>禁用SELINUX</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> setenforce <span class="number">0</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">cat</span> /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>配置网络</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-ip6tables</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-iptables</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_forward</span> = <span class="number">1</span></span><br><span class="line">EOF</span><br><span class="line">$ modprobe br_netfilter</span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum <span class="keyword">install</span> -y docker</span><br></pre></td></tr></table></figure><p>配置cgroupdriver为cgroupfs</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">&quot;s/native.cgroupdriver=systemd/native.cgroupdriver=cgroupfs/g&quot;</span> <span class="regexp">/usr/</span>lib<span class="regexp">/systemd/</span>system/docker.service</span><br><span class="line">$ cat <span class="regexp">/usr/</span>lib<span class="regexp">/systemd/</span>system/docker.service</span><br><span class="line"></span><br><span class="line">$ systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line">$ docker info | <span class="keyword">grep</span> Cgroup</span><br></pre></td></tr></table></figure><h3 id="安装kubeadm-kubelet-kubectl"><a href="#安装kubeadm-kubelet-kubectl" class="headerlink" title="安装kubeadm kubelet kubectl"></a>安装kubeadm kubelet kubectl</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt; <span class="regexp">/etc/yum</span>.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https:<span class="regexp">//</span>packages.cloud.google.com<span class="regexp">/yum/</span>repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">repo_gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=https:<span class="regexp">//</span>packages.cloud.google.com<span class="regexp">/yum/</span>doc<span class="regexp">/yum-key.gpg https:/</span><span class="regexp">/packages.cloud.google.com/yum</span><span class="regexp">/doc/</span>rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ yum install -y kubelet kubeadm kubectl</span><br><span class="line">$ systemctl enable kubelet &amp;&amp; systemctl start kubelet </span><br></pre></td></tr></table></figure><p>Note: kubelet在这里启动时不会成功的，它会定时检查重启。后面程序安装后，kubectl会启动成功。</p><h3 id="配置kubeadm的cgroup-driver为Cgroupfs"><a href="#配置kubeadm的cgroup-driver为Cgroupfs" class="headerlink" title="配置kubeadm的cgroup driver为Cgroupfs"></a>配置kubeadm的cgroup driver为Cgroupfs</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">&quot;s/cgroup-driver=systemd/cgroup-driver=cgroupfs --runtime-cgroups=\/systemd\/system.slice --kubelet-cgroups=\/systemd\/system.slice/g&quot;</span> <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>kubelet.service.d/<span class="number">10</span>-kubeadm.conf</span><br><span class="line">$ cat <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>kubelet.service.d/<span class="number">10</span>-kubeadm.conf</span><br><span class="line"></span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><p>查看kubelet日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> journalctl <span class="literal">-u</span> kubelet <span class="operator">-f</span></span><br></pre></td></tr></table></figure><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>提前下载Dokcer镜像，如果你机器有科学上网请忽略这一步。我提前将Docker镜像下载到国内私有hub中。下面是下载脚本</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ARCH</span>=amd64</span><br><span class="line"><span class="attribute">mversion</span>=v1.10.4</span><br><span class="line"><span class="attribute">nversion</span>=1.14.8</span><br><span class="line"><span class="attribute">username</span>=luoji</span><br><span class="line"><span class="attribute">password</span>=password</span><br><span class="line"><span class="attribute">repo</span>=k8s.gcr.io</span><br><span class="line"><span class="attribute">store_repo</span>=r.xiaozhou.net</span><br><span class="line"><span class="attribute">store_repo_path</span>=r.xiaozhou.net/kubernetes</span><br><span class="line"></span><br><span class="line">images=(<span class="variable">$&#123;repo&#125;</span>/kube-apiserver-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-controller-manager-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-scheduler-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kube-proxy-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;mversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/etcd-<span class="variable">$&#123;ARCH&#125;</span>:3.1.12 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/pause-<span class="variable">$&#123;ARCH&#125;</span>:3.1 \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-sidecar-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-kube-dns-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/k8s-dns-dnsmasq-nanny-<span class="variable">$&#123;ARCH&#125;</span>:<span class="variable">$&#123;nversion&#125;</span> \</span><br><span class="line"><span class="variable">$&#123;repo&#125;</span>/kubernetes-dashboard-<span class="variable">$&#123;ARCH&#125;</span>:v1.8.3 \</span><br><span class="line">    quay.io/coreos/flannel:v0.10.0-amd64 \</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">docker login -u <span class="variable">$username</span> -p <span class="variable">$password</span> <span class="variable">$store_repo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="attribute">sub</span>=<span class="variable">$&#123;url%/*&#125;</span></span><br><span class="line">    <span class="attribute">idx</span>=<span class="variable">$&#123;#sub&#125;</span></span><br><span class="line">    <span class="attribute">image</span>=<span class="variable">$&#123;url:$idx+1&#125;</span></span><br><span class="line">    echo -e <span class="string">&quot;download -&gt; <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> -&gt; <span class="variable">$url</span>&quot;</span></span><br><span class="line">docker pull <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">docker tag <span class="variable">$store_repo_path</span>/<span class="variable">$image</span> <span class="variable">$url</span></span><br><span class="line">docker rmi <span class="variable">$store_repo_path</span>/<span class="variable">$image</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset ARCH mversion nversion images username password repo store_repo store_repo_path</span><br></pre></td></tr></table></figure><p>上传脚本可以在这里找到：<a href="https://github.com/gunsluo/k8s-example/tree/master/version">https://github.com/gunsluo/k8s-example/tree/master/version</a></p><h3 id="初始化主节点"><a href="#初始化主节点" class="headerlink" title="初始化主节点"></a>初始化主节点</h3><p>$ kubeadm init –kubernetes-version v1.10.4 –service-cidr 10.96.0.0/16 –pod-network-cidr 10.244.0.0/16 –apiserver-advertise-address 10.0.100.2<br>$ kubeadm init –config kubeadm.yaml –service-cidr 10.96.0.0/16 –pod-network-cidr 10.244.0.0/16<br>$ cat kubeadm.yaml<br>apiVersion: kubeadm.k8s.io/v1alpha1<br>kind: MasterConfiguration<br>kubernetesVersion: v1.10.4<br>api:<br>  advertiseAddress: ‘10.0.100.2’<br>etcd:<br>  extraArgs:<br>    ‘listen-peer-urls’: ‘<a href="http://127.0.0.1:2380&#39;">http://127.0.0.1:2380&#39;</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> mkdir <span class="literal">-p</span> <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="variable">$</span> <span class="built_in">cp</span> <span class="literal">-i</span> /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="variable">$</span> chown <span class="variable">$</span>(id <span class="literal">-u</span>):<span class="variable">$</span>(id <span class="literal">-g</span>) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h3 id="主节点初始化网络"><a href="#主节点初始化网络" class="headerlink" title="主节点初始化网络"></a>主节点初始化网络</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/coreos/</span>flannel<span class="regexp">/v0.10.0/</span>Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p>flanneld启动参数加上–iface=<iface-name></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">command</span>:</span><br><span class="line">- <span class="string">/opt/bin/flanneld</span></span><br><span class="line">args:</span><br><span class="line">- <span class="params">--ip-masq</span></span><br><span class="line">- <span class="params">--kube-subnet-mgr</span></span><br><span class="line">- <span class="params">--iface=eth1</span></span><br></pre></td></tr></table></figure><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> kubectl apply -f kube-flannel.yml</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span> kubectl get nodes</span><br><span class="line"><span class="symbol">$</span> kubectl get pods --<span class="keyword">all</span>-namespaces</span><br></pre></td></tr></table></figure><h3 id="加入工作节点"><a href="#加入工作节点" class="headerlink" title="加入工作节点"></a>加入工作节点</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm <span class="keyword">join</span> --token <span class="symbol">&lt;token&gt;</span> <span class="symbol">&lt;master-ip&gt;</span>:<span class="symbol">&lt;master-port&gt;</span> --discovery-token-<span class="keyword">ca</span>-cert-hash <span class="built_in">sha256</span>:<span class="symbol">&lt;hash&gt;</span></span><br></pre></td></tr></table></figure><h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/kubernetes/</span>dashboard<span class="regexp">/master/</span>src<span class="regexp">/deploy/</span>recommended/kubernetes-dashboard.yaml</span><br><span class="line">$ kubectl create -f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>$ kubectl apply -f kubernetes-dashboard-admin.yaml</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="attribute">kind</span>: ClusterRoleBinding</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">k8s-app</span>: kubernetes-dashboard</span><br><span class="line"><span class="attribute">roleRef</span>:</span><br><span class="line">  <span class="attribute">apiGroup</span>: rbac.authorization.k8s.io</span><br><span class="line">  <span class="attribute">kind</span>: ClusterRole</span><br><span class="line">  <span class="attribute">name</span>: cluster-admin</span><br><span class="line"><span class="attribute">subjects</span>:</span><br><span class="line">- <span class="attribute">kind</span>: ServiceAccount</span><br><span class="line">  <span class="attribute">name</span>: kubernetes-dashboard</span><br><span class="line">  <span class="attribute">namespace</span>: kube-system</span><br></pre></td></tr></table></figure><p>配置代理</p><p>将Master节点的/etc/kubernetes/admin.conf拷贝到本机的$HOME/.kube目录下，然后运行<code>kubectl proxy</code>。最后在浏览器中输入：<a href="http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a> 现在可以登录dashboard</p><p>配置远程访问dashboard，上面方法需要在本机启动代理。我们可以直接使用IP进行访问，这需要修改kubernetes-dashboard-admin.yaml配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">31000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><p>指定NodePort类型和对外提供端口31000。 使用命令<code>kubectl replace -f kubernetes-dashboard.yaml --force</code>重启服务。浏览器中输入: <a href="https://ip:31000/">https://ip:31000/</a> 即可访问。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用KubeAdm官方工具在Centos7上安装kubernetes.&lt;/p&gt;</summary>
    
    
    
    <category term="k8s" scheme="https://luoji.live/categories/k8s/"/>
    
    
    <category term="kubernetes" scheme="https://luoji.live/tags/kubernetes/"/>
    
    <category term="k8s" scheme="https://luoji.live/tags/k8s/"/>
    
    <category term="centos" scheme="https://luoji.live/tags/centos/"/>
    
    <category term="kubeadm" scheme="https://luoji.live/tags/kubeadm/"/>
    
  </entry>
  
  <entry>
    <title>使用Dnsmasq在Mac上搭建私有网络开发环境</title>
    <link href="https://luoji.live/%E5%B7%A5%E5%85%B7/dnsmasq-install-for-mac-20180605.html"/>
    <id>https://luoji.live/%E5%B7%A5%E5%85%B7/dnsmasq-install-for-mac-20180605.html</id>
    <published>2018-06-05T13:15:30.000Z</published>
    <updated>2021-01-05T16:26:11.347Z</updated>
    
    <content type="html"><![CDATA[<p>对于经常移动办公的童鞋，网络环境也随之改变，开发过程中部署的本地环境也需要重新配置IP地址等，或者虚拟机（使用桥接方式，桥接好处在于局域网内其它电脑方便访问，虚拟机系统访问外网不需要额外配置）时系统IP改变。我在这样的环境下痛苦针扎了一段时间，决定在本机组建一个私有网络不随连接Internet网络的改变而变动。</p><blockquote><p>先说说我的想法：在电脑上模拟新的一张网卡，用此网卡组建一个网络，此网卡IP使用静态配置。如果想在同一局域网中共享该私有网络要使用dnsmasq，只是本机使用可以不使用dnsmasq。我使用的Mac电脑，由于mac不支持创建虚拟网卡，我只能使用虚拟IP来实现。</p></blockquote><a id="more"></a><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Mac: 宿主机 (通常使用wifi的网卡)<br>CentOS7 1: 虚拟机(VMware Fusion) (双网卡 桥接模式)<br>CentOS7 2: 虚拟机(VMware Fusion) (双网卡 桥接模式)<br>CentOS7 3: 虚拟机(VMware Fusion) (双网卡 桥接模式)</p><h3 id="配置宿主机网络"><a href="#配置宿主机网络" class="headerlink" title="配置宿主机网络"></a>配置宿主机网络</h3><p>由于Mac不支持创建虚拟网卡，使用虚拟IP。给en0网卡添加虚拟IP</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> ifconfig en<span class="number">0</span> alias <span class="number">10.0.100.1</span></span><br><span class="line"><span class="attribute">sudo</span> ifconfig en<span class="number">0</span> -alias <span class="number">10.0.100.1</span></span><br></pre></td></tr></table></figure><p>linux系统命令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ifconfig</span> eth<span class="number">0</span>:<span class="number">1</span> <span class="number">10.0.100.2</span> netmask <span class="number">255.255.255.0</span></span><br><span class="line"><span class="attribute">ip</span> addr del <span class="number">10.0.100.2</span>/<span class="number">24</span> dev eth<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="配置虚拟机网络"><a href="#配置虚拟机网络" class="headerlink" title="配置虚拟机网络"></a>配置虚拟机网络</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/i</span>fcfg-eth0 <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/i</span>fcfg-eth1</span><br><span class="line">uuidgen eth1</span><br></pre></td></tr></table></figure><p>配置eth1网卡 <code>vi /etc/sysconfig/network-scripts/ifcfg-eth1</code> (uuid使用uuidgen命令生成)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">PROXY_METHOD</span>=none</span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class="line"><span class="attr">NAME</span>=eth1</span><br><span class="line"><span class="attr">UUID</span>=<span class="number">123</span>a9032-c938-<span class="number">4404</span>-bc95-<span class="number">7103</span>accbdcc3</span><br><span class="line"><span class="attr">DEVICE</span>=eth1</span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">10.0</span>.<span class="number">100.2</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">10.0</span>.<span class="number">100.1</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>其他虚拟机的IP<code>10.0.100.3</code> <code>10.0.100.4</code></p><h3 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h3><p>宿主机: <code>ping 10.0.100.2</code><br>虚拟机: <code>ping 10.0.100.1</code></p><h3 id="安装dnsmasq"><a href="#安装dnsmasq" class="headerlink" title="安装dnsmasq"></a>安装dnsmasq</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>dnsmasq</span><br></pre></td></tr></table></figure><p>配置 <code>vim /usr/local/etc/dnsmasq.conf</code></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strict-<span class="keyword">order</span></span><br><span class="line">listen-address=10.0.100.1,127.0.0.1</span><br><span class="line"><span class="keyword">conf</span>-<span class="keyword">dir</span>=/usr/<span class="keyword">local</span>/etc/dnsmasq.<span class="keyword">d</span>/,*.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>添加<code>/usr/local/etc/dnsmasq.d/k8s.conf</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">address</span>=/k<span class="number">8</span>s-master.lan/<span class="number">10.0.100.2</span></span><br><span class="line"><span class="attribute">address</span>=/k<span class="number">8</span>s-node<span class="number">1</span>.lan/<span class="number">10.0.100.3</span></span><br><span class="line"><span class="attribute">address</span>=/k<span class="number">8</span>s-node<span class="number">2</span>.lan/<span class="number">10.0.100.4</span></span><br></pre></td></tr></table></figure><p>启动: </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo brew services <span class="literal">start</span> dnsmasq</span><br></pre></td></tr></table></figure><p>开机启动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">launchctl</span> <span class="selector-tag">start</span> <span class="selector-tag">homebrew</span><span class="selector-class">.mxcl</span><span class="selector-class">.dnsmasq</span></span><br></pre></td></tr></table></figure><p>清除DNS缓存</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo killall -HUP mDNSResponder</span></span><br></pre></td></tr></table></figure><p>如果使用该dns服务，修改dns<br>vi /etc/rsyslog.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nameserver</span> <span class="number">10.0.100.1</span></span><br></pre></td></tr></table></figure><p>测试<br>宿主机中修改/etc/rsyslog.conf<br><code>ping k8s-master.lan</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于经常移动办公的童鞋，网络环境也随之改变，开发过程中部署的本地环境也需要重新配置IP地址等，或者虚拟机（使用桥接方式，桥接好处在于局域网内其它电脑方便访问，虚拟机系统访问外网不需要额外配置）时系统IP改变。我在这样的环境下痛苦针扎了一段时间，决定在本机组建一个私有网络不随连接Internet网络的改变而变动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先说说我的想法：在电脑上模拟新的一张网卡，用此网卡组建一个网络，此网卡IP使用静态配置。如果想在同一局域网中共享该私有网络要使用dnsmasq，只是本机使用可以不使用dnsmasq。我使用的Mac电脑，由于mac不支持创建虚拟网卡，我只能使用虚拟IP来实现。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="工具" scheme="https://luoji.live/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="mac" scheme="https://luoji.live/tags/mac/"/>
    
    <category term="dns" scheme="https://luoji.live/tags/dns/"/>
    
    <category term="dnsmasq" scheme="https://luoji.live/tags/dnsmasq/"/>
    
  </entry>
  
  <entry>
    <title>Jitsi开源Web视频会议-安全认证</title>
    <link href="https://luoji.live/video/jitsi-auth-20180507.html"/>
    <id>https://luoji.live/video/jitsi-auth-20180507.html</id>
    <published>2018-05-07T03:47:35.000Z</published>
    <updated>2021-01-05T16:26:11.342Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jerrylou.me/video/jitsi-install-20180426.html">Jitsi安装教程</a>、之前安装Jitsi后所有人都能访问，当实际情况是需要认证后才能访问。通过配置jitsi提供了认证方式。</p><a id="more"></a><h3 id="Prosody认证配置"><a href="#Prosody认证配置" class="headerlink" title="Prosody认证配置"></a>Prosody认证配置</h3><p>配置<code>/etc/prosody/conf.d/meet.demo.com.cfg.lua</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-- Plugins path gets uncommented during jitsi-meet-tokens package install - that<span class="string">&#x27;s where token plugin is located</span></span><br><span class="line"><span class="string">--plugin_paths = &#123; &quot;/usr/share/jitsi-meet/prosody-plugins/&quot; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost &quot;meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    authentication = &quot;internal_plain&quot;</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = &quot;/var/lib/prosody/meet.demo.com.key&quot;;</span></span><br><span class="line"><span class="string">        certificate = &quot;/var/lib/prosody/meet.demo.com.crt&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    modules_enabled = &#123;</span></span><br><span class="line"><span class="string">        &quot;bosh&quot;;</span></span><br><span class="line"><span class="string">        &quot;pubsub&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost &quot;guest.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    authentication = &quot;anonymous&quot;</span></span><br><span class="line"><span class="string">    c2s_require_encryption = false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">admins = &#123; &quot;focus@auth.meet.demo.com&quot; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component &quot;conference.meet.demo.com&quot; &quot;muc&quot;</span></span><br><span class="line"><span class="string">Component &quot;jitsi-videobridge.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    component_secret = &quot;password1&quot;</span></span><br><span class="line"><span class="string">Component &quot;focus.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    component_secret = &quot;password2&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component &quot;callcontrol.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    component_secret = &quot;password4&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Nginx认证配置"><a href="#Nginx认证配置" class="headerlink" title="Nginx认证配置"></a>Nginx认证配置</h3><p>配置<code>/etc/nginx/sites-enabled/meet.demo.com</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://$host<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line"></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_ciphers <span class="string">&quot;EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED&quot;</span>;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /var/lib/prosody/meet.demo.com.crt;</span><br><span class="line">    ssl_certificate_key /var/lib/prosody/meet.demo.com.key;</span><br><span class="line"></span><br><span class="line">    root /var/www/jitsi-meet;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    <span class="comment"># error_page 404 /static/404.html;</span></span><br><span class="line"></span><br><span class="line">    location ~ ^/([a-zA-Z0-9=\?]+)$ &#123;</span><br><span class="line">        rewrite ^/(.*)$ / <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        ssi on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BOSH</span></span><br><span class="line">    location /http-bind &#123;</span><br><span class="line">        proxy_pass      http://localhost:5280/http-bind;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="videobridge认证配置"><a href="#videobridge认证配置" class="headerlink" title="videobridge认证配置"></a>videobridge认证配置</h3><p>参数start.sh </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">&quot;-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=videobridge -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/videobridge -Djava.util.logging.config.file=/etc/jitsi/videobridge/logging.properties -Dlog4j.configurationFile=/etc/jitsi/videobridge/log4j2.xml&quot;</span></span><br><span class="line"></span><br><span class="line">./jvb.sh --host=localhost --domain=meet.demo.com --port=5347 --secret=password1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure><h3 id="Jicofo认证配置"><a href="#Jicofo认证配置" class="headerlink" title="Jicofo认证配置"></a>Jicofo认证配置</h3><p>参数start.sh </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mvn package -DskipTests -Dassembly.skipAssembly=false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">&quot;-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=jicofo -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/jicofo -Djava.util.logging.config.file=/etc/jitsi/jicofo/logging.properties -Dlog4j.configurationFile=/etc/jitsi/jicofo/log4j2.xml -Dorg.jitsi.jicofo.ALWAYS_TRUST_MODE_ENABLED=true&quot;</span></span><br><span class="line"></span><br><span class="line">./jicofo-linux-x64-1.1-SNAPSHOT/jicofo.sh --host=localhost --domain=meet.demo.com --secret=password2 --user_domain=auth.meet.demo.com --user_name=focus --user_password=password3 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure><h3 id="Jitsi-meet认证配置"><a href="#Jitsi-meet认证配置" class="headerlink" title="Jitsi-meet认证配置"></a>Jitsi-meet认证配置</h3><p>config.js配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br></pre></td><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    // Configuration</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Alternative location <span class="keyword">for</span> the configuration.</span><br><span class="line">    // configLocation: <span class="string">&#x27;./config.json&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    // Custom <span class="keyword">function</span> <span class="built_in">which</span> given the URL path should <span class="built_in">return</span> a room name.</span><br><span class="line">    // getroomnode: <span class="keyword">function</span> (path) &#123; <span class="built_in">return</span> <span class="string">&#x27;someprefixpossiblybasedonpath&#x27;</span>; &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Connection</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    hosts: &#123;</span><br><span class="line">        // XMPP domain.</span><br><span class="line">        domain: <span class="string">&#x27;meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // XMPP MUC domain. FIXME: use XEP-0030 to discover it.</span><br><span class="line">        muc: <span class="string">&#x27;conference.meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // When using authentication, domain <span class="keyword">for</span> guest users.</span><br><span class="line">        // anonymousdomain: <span class="string">&#x27;guest.example.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // Domain <span class="keyword">for</span> authenticated users. Defaults to &lt;domain&gt;.</span><br><span class="line">        // authdomain: <span class="string">&#x27;meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // Jirecon recording component domain.</span><br><span class="line">        // jirecon: <span class="string">&#x27;jirecon.meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // Call control component (Jigasi).</span><br><span class="line">        call_control: <span class="string">&#x27;callcontrol.meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        // Focus component domain. Defaults to focus.&lt;domain&gt;.</span><br><span class="line">        focus: <span class="string">&#x27;focus.meet.demo.com&#x27;</span>,</span><br><span class="line">        bridge: <span class="string">&#x27;jitsi-videobridge.meet.demo.com&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // BOSH URL. FIXME: use XEP-0156 to discover it.</span><br><span class="line">    bosh: <span class="string">&#x27;//meet.demo.com/http-bind&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    // The name of client node advertised <span class="keyword">in</span> XEP-0115 <span class="string">&#x27;c&#x27;</span> stanza</span><br><span class="line">    clientNode: <span class="string">&#x27;http://jitsi.org/jitsimeet&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    // The real JID of focus participant - can be overridden here</span><br><span class="line">    // focusUserJid: <span class="string">&#x27;focus@auth.meet.demo.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Testing / experimental features.</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    testing: &#123;</span><br><span class="line">        // Enables experimental simulcast support on Firefox.</span><br><span class="line">        enableFirefoxSimulcast: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">        // P2P <span class="built_in">test</span> mode disables automatic switching to P2P when there are 2</span><br><span class="line">        // participants <span class="keyword">in</span> the conference.</span><br><span class="line">        p2pTestMode: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        // Enables the <span class="built_in">test</span> specific features consumed by jitsi-meet-torture</span><br><span class="line">        // testMode: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // Disables ICE/UDP by filtering out <span class="built_in">local</span> and remote UDP candidates <span class="keyword">in</span></span><br><span class="line">    // signalling.</span><br><span class="line">    // webrtcIceUdpDisable: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Disables ICE/TCP by filtering out <span class="built_in">local</span> and remote TCP candidates <span class="keyword">in</span></span><br><span class="line">    // signalling.</span><br><span class="line">    // webrtcIceTcpDisable: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Media</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Audio</span><br><span class="line"></span><br><span class="line">    // Disable measuring of audio levels.</span><br><span class="line">    // disableAudioLevels: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Start the conference <span class="keyword">in</span> audio only mode (no video is being received nor</span><br><span class="line">    // sent).</span><br><span class="line">    // startAudioOnly: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Every participant after the Nth will start audio muted.</span><br><span class="line">    // startAudioMuted: 10,</span><br><span class="line"></span><br><span class="line">    // Start calls with audio muted. Unlike the option above, this one is only</span><br><span class="line">    // applied locally. FIXME: having these 2 options is confusing.</span><br><span class="line">    // startWithAudioMuted: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Video</span><br><span class="line"></span><br><span class="line">    // Sets the preferred resolution (height) <span class="keyword">for</span> <span class="built_in">local</span> video. Defaults to 720.</span><br><span class="line">    // resolution: 720,</span><br><span class="line"></span><br><span class="line">    // w3c spec-compliant video constraints to use <span class="keyword">for</span> video capture. Currently</span><br><span class="line">    // used by browsers that <span class="built_in">return</span> <span class="literal">true</span> from lib-jitsi-meet<span class="string">&#x27;s</span></span><br><span class="line"><span class="string">    // util#browser#usesNewGumFlow. The constraints are independency from</span></span><br><span class="line"><span class="string">    // this config&#x27;</span>s resolution value. Defaults to requesting an ideal aspect</span><br><span class="line">    // ratio of 16:9 with an ideal resolution of 1080p.</span><br><span class="line">    // constraints: &#123;</span><br><span class="line">    //     video: &#123;</span><br><span class="line">    //         aspectRatio: 16 / 9,</span><br><span class="line">    //         height: &#123;</span><br><span class="line">    //             ideal: 1080,</span><br><span class="line">    //             max: 1080,</span><br><span class="line">    //             min: 240</span><br><span class="line">    //         &#125;</span><br><span class="line">    //     &#125;</span><br><span class="line">    // &#125;,</span><br><span class="line"></span><br><span class="line">    // Enable / <span class="built_in">disable</span> simulcast support.</span><br><span class="line">    // disableSimulcast: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Suspend sending video <span class="keyword">if</span> bandwidth estimation is too low. This may cause</span><br><span class="line">    // problems with audio playback. Disabled until these are fixed.</span><br><span class="line">    disableSuspendVideo: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    // Every participant after the Nth will start video muted.</span><br><span class="line">    // startVideoMuted: 10,</span><br><span class="line"></span><br><span class="line">    // Start calls with video muted. Unlike the option above, this one is only</span><br><span class="line">    // applied locally. FIXME: having these 2 options is confusing.</span><br><span class="line">    // startWithVideoMuted: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // If <span class="built_in">set</span> to <span class="literal">true</span>, prefer to use the H.264 video codec (<span class="keyword">if</span> supported).</span><br><span class="line">    // Note that it<span class="string">&#x27;s not recommended to do this because simulcast is not</span></span><br><span class="line"><span class="string">    // supported when  using H.264. For 1-to-1 calls this setting is enabled by</span></span><br><span class="line"><span class="string">    // default and can be toggled in the p2p section.</span></span><br><span class="line"><span class="string">    // preferH264: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // If set to true, disable H.264 video codec by stripping it out of the</span></span><br><span class="line"><span class="string">    // SDP.</span></span><br><span class="line"><span class="string">    // disableH264: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Desktop sharing</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enable / disable desktop sharing</span></span><br><span class="line"><span class="string">    // disableDesktopSharing: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The ID of the jidesha extension for Chrome.</span></span><br><span class="line"><span class="string">    desktopSharingChromeExtId: null,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether desktop sharing should be disabled on Chrome.</span></span><br><span class="line"><span class="string">    desktopSharingChromeDisabled: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The media sources to use when using screen sharing with the Chrome</span></span><br><span class="line"><span class="string">    // extension.</span></span><br><span class="line"><span class="string">    desktopSharingChromeSources: [ &#x27;</span>screen<span class="string">&#x27;, &#x27;</span>window<span class="string">&#x27;, &#x27;</span>tab<span class="string">&#x27; ],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Required version of Chrome extension</span></span><br><span class="line"><span class="string">    desktopSharingChromeMinExtVersion: &#x27;</span>0.1<span class="string">&#x27;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether desktop sharing should be disabled on Firefox.</span></span><br><span class="line"><span class="string">    desktopSharingFirefoxDisabled: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Optional desktop sharing frame rate options. Default value: min:5, max:5.</span></span><br><span class="line"><span class="string">    // desktopSharingFrameRate: &#123;</span></span><br><span class="line"><span class="string">    //     min: 5,</span></span><br><span class="line"><span class="string">    //     max: 5</span></span><br><span class="line"><span class="string">    // &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Try to start calls with screen-sharing instead of camera video.</span></span><br><span class="line"><span class="string">    // startScreenSharing: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Recording</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether to enable recording or not.</span></span><br><span class="line"><span class="string">    // enableRecording: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Type for recording: one of jibri or jirecon.</span></span><br><span class="line"><span class="string">    // recordingType: &#x27;</span>jibri<span class="string">&#x27;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Misc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Default value for the channel &quot;last N&quot; attribute. -1 for unlimited.</span></span><br><span class="line"><span class="string">    channelLastN: -1,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables RTX (RFC 4588) (defaults to false).</span></span><br><span class="line"><span class="string">    // disableRtx: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables TCC (the default is in Jicofo and set to true)</span></span><br><span class="line"><span class="string">    // (draft-holmer-rmcat-transport-wide-cc-extensions-01). This setting</span></span><br><span class="line"><span class="string">    // affects congestion control, it practically enables send-side bandwidth</span></span><br><span class="line"><span class="string">    // estimations.</span></span><br><span class="line"><span class="string">    // enableTcc: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disables or enables REMB (the default is in Jicofo and set to false)</span></span><br><span class="line"><span class="string">    // (draft-alvestrand-rmcat-remb-03). This setting affects congestion</span></span><br><span class="line"><span class="string">    // control, it practically enables recv-side bandwidth estimations. When</span></span><br><span class="line"><span class="string">    // both TCC and REMB are enabled, TCC takes precedence. When both are</span></span><br><span class="line"><span class="string">    // disabled, then bandwidth estimations are disabled.</span></span><br><span class="line"><span class="string">    // enableRemb: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Defines the minimum number of participants to start a call (the default</span></span><br><span class="line"><span class="string">    // is set in Jicofo and set to 2).</span></span><br><span class="line"><span class="string">    // minParticipants: 2,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Use XEP-0215 to fetch STUN and TURN servers.</span></span><br><span class="line"><span class="string">    // useStunTurn: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enable IPv6 support.</span></span><br><span class="line"><span class="string">    // useIPv6: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enables / disables a data communication channel with the Videobridge.</span></span><br><span class="line"><span class="string">    // Values can be &#x27;</span>datachannel<span class="string">&#x27;, &#x27;</span>websocket<span class="string">&#x27;, true (treat it as</span></span><br><span class="line"><span class="string">    // &#x27;</span>datachannel<span class="string">&#x27;), undefined (treat it as &#x27;</span>datachannel<span class="string">&#x27;) and false (don&#x27;</span>t</span><br><span class="line">    // open any channel).</span><br><span class="line">    // openBridgeChannel: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // UI</span><br><span class="line">    //</span><br><span class="line"></span><br><span class="line">    // Use display name as XMPP nickname.</span><br><span class="line">    useNicks: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Require users to always specify a display name.</span><br><span class="line">    // requireDisplayName: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    // Whether to use a welcome page or not. In <span class="keyword">case</span> it<span class="string">&#x27;s false a random room</span></span><br><span class="line"><span class="string">    // will be joined when no room is specified.</span></span><br><span class="line"><span class="string">    enableWelcomePage: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Enabling the close page will ignore the welcome page redirection when</span></span><br><span class="line"><span class="string">    // a call is hangup.</span></span><br><span class="line"><span class="string">    // enableClosePage: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Disable hiding of remote thumbnails when in a 1-on-1 conference call.</span></span><br><span class="line"><span class="string">    // disable1On1Mode: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // The minimum value a video&#x27;</span>s height (or width, whichever is smaller) needs</span><br><span class="line">    // to be <span class="keyword">in</span> order to be considered high-definition.</span><br><span class="line">    minHDHeight: 540,</span><br><span class="line"></span><br><span class="line">    // Default language <span class="keyword">for</span> the user interface.</span><br><span class="line">    // defaultLanguage: <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    // If <span class="literal">true</span> all users without a token will be considered guests and all users</span><br><span class="line">    // with token will be considered non-guests. Only guests will be allowed to</span><br><span class="line">    // edit their profile.</span><br><span class="line">    enableUserRolesBasedOnToken: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    // Message to show the users. Example: <span class="string">&#x27;The service will be down for</span></span><br><span class="line"><span class="string">    // maintenance at 01:00 AM GMT,</span></span><br><span class="line"><span class="string">    // noticeMessage: &#x27;</span><span class="string">&#x27;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Stats</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Whether to enable stats collection or not in the TraceablePeerConnection.</span></span><br><span class="line"><span class="string">    // This can be useful for debugging purposes (post-processing/analysis of</span></span><br><span class="line"><span class="string">    // the webrtc stats) as it is done in the jitsi-meet-torture bandwidth</span></span><br><span class="line"><span class="string">    // estimation tests.</span></span><br><span class="line"><span class="string">    // gatherStats: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // To enable sending statistics to callstats.io you must provide the</span></span><br><span class="line"><span class="string">    // Application ID and Secret.</span></span><br><span class="line"><span class="string">    // callStatsID: &#x27;</span><span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    // callStatsSecret: &#x27;</span><span class="string">&#x27;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // enables callstatsUsername to be reported as statsId and used</span></span><br><span class="line"><span class="string">    // by callstats as repoted remote id</span></span><br><span class="line"><span class="string">    // enableStatsID: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // enables sending participants display name to callstats</span></span><br><span class="line"><span class="string">    // enableDisplayNameInStats: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Privacy</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // If third party requests are disabled, no other server will be contacted.</span></span><br><span class="line"><span class="string">    // This means avatars will be locally generated and callstats integration</span></span><br><span class="line"><span class="string">    // will not function.</span></span><br><span class="line"><span class="string">    // disableThirdPartyRequests: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Peer-To-Peer mode: used (if enabled) when there are just 2 participants.</span></span><br><span class="line"><span class="string">    //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    p2p: &#123;</span></span><br><span class="line"><span class="string">        // Enables peer to peer mode. When enabled the system will try to</span></span><br><span class="line"><span class="string">        // establish a direct connection when there are exactly 2 participants</span></span><br><span class="line"><span class="string">        // in the room. If that succeeds the conference will stop sending data</span></span><br><span class="line"><span class="string">        // through the JVB and use the peer to peer connection instead. When a</span></span><br><span class="line"><span class="string">        // 3rd participant joins the conference will be moved back to the JVB</span></span><br><span class="line"><span class="string">        // connection.</span></span><br><span class="line"><span class="string">        enabled: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Use XEP-0215 to fetch STUN and TURN servers.</span></span><br><span class="line"><span class="string">        // useStunTurn: true,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // The STUN servers that will be used in the peer to peer connections</span></span><br><span class="line"><span class="string">        stunServers: [</span></span><br><span class="line"><span class="string">            &#123; urls: &#x27;</span>stun:stun.l.google.com:19302<span class="string">&#x27; &#125;,</span></span><br><span class="line"><span class="string">            &#123; urls: &#x27;</span>stun:stun1.l.google.com:19302<span class="string">&#x27; &#125;,</span></span><br><span class="line"><span class="string">            &#123; urls: &#x27;</span>stun:stun2.l.google.com:19302<span class="string">&#x27; &#125;</span></span><br><span class="line"><span class="string">        ],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Sets the ICE transport policy for the p2p connection. At the time</span></span><br><span class="line"><span class="string">        // of this writing the list of possible values are &#x27;</span>all<span class="string">&#x27; and &#x27;</span>relay<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">        // but that is subject to change in the future. The enum is defined in</span></span><br><span class="line"><span class="string">        // the WebRTC standard:</span></span><br><span class="line"><span class="string">        // https://www.w3.org/TR/webrtc/#rtcicetransportpolicy-enum.</span></span><br><span class="line"><span class="string">        // If not set, the effective value is &#x27;</span>all<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">        // iceTransportPolicy: &#x27;</span>all<span class="string">&#x27;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // If set to true, it will prefer to use H.264 for P2P calls (if H.264</span></span><br><span class="line"><span class="string">        // is supported).</span></span><br><span class="line"><span class="string">        preferH264: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // If set to true, disable H.264 video codec by stripping it out of the</span></span><br><span class="line"><span class="string">        // SDP.</span></span><br><span class="line"><span class="string">        // disableH264: false,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // How long we&#x27;</span>re going to <span class="built_in">wait</span>, before going back to P2P after the 3rd</span><br><span class="line">        // participant has left the conference (to filter out page reload).</span><br><span class="line">        // backToP2PDelay: 5</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // A list of scripts to load as lib-jitsi-meet <span class="string">&quot;analytics handlers&quot;</span>.</span><br><span class="line">    // analyticsScriptUrls: [</span><br><span class="line">    //      <span class="string">&quot;libs/analytics-ga.js&quot;</span>, // google-analytics</span><br><span class="line">    //      <span class="string">&quot;https://example.com/my-custom-analytics.js&quot;</span></span><br><span class="line">    // ],</span><br><span class="line"></span><br><span class="line">    // The Google Analytics Tracking ID</span><br><span class="line">    // googleAnalyticsTrackingId = <span class="string">&#x27;your-tracking-id-here-UA-123456-1&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    // Information about the jitsi-meet instance we are connecting to, including</span><br><span class="line">    // the user region as seen by the server.</span><br><span class="line">    deploymentInfo: &#123;</span><br><span class="line">        // shard: <span class="string">&quot;shard1&quot;</span>,</span><br><span class="line">        // region: <span class="string">&quot;europe&quot;</span>,</span><br><span class="line">        // userRegion: <span class="string">&quot;asia&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // List of undocumented settings used <span class="keyword">in</span> jitsi-meet</span><br><span class="line">    /**</span><br><span class="line">     alwaysVisibleToolbar</span><br><span class="line">     autoRecord</span><br><span class="line">     autoRecordToken</span><br><span class="line">     debug</span><br><span class="line">     debugAudioLevels</span><br><span class="line">     deploymentInfo</span><br><span class="line">     dialInConfCodeUrl</span><br><span class="line">     dialInNumbersUrl</span><br><span class="line">     dialOutAuthUrl</span><br><span class="line">     dialOutCodesUrl</span><br><span class="line">     disableRemoteControl</span><br><span class="line">     displayJids</span><br><span class="line">     enableLocalVideoFlip</span><br><span class="line">     etherpad_base</span><br><span class="line">     externalConnectUrl</span><br><span class="line">     firefox_fake_device</span><br><span class="line">     googleApiApplicationClientID</span><br><span class="line">     iAmRecorder</span><br><span class="line">     iAmSipGateway</span><br><span class="line">     peopleSearchQueryTypes</span><br><span class="line">     peopleSearchUrl</span><br><span class="line">     requireDisplayName</span><br><span class="line">     tokenAuthUrl</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    // List of undocumented settings used <span class="keyword">in</span> lib-jitsi-meet</span><br><span class="line">    /**</span><br><span class="line">     _peerConnStatusOutOfLastNTimeout</span><br><span class="line">     _peerConnStatusRtcMuteTimeout</span><br><span class="line">     abTesting</span><br><span class="line">     avgRtpStatsN</span><br><span class="line">     callStatsConfIDNamespace</span><br><span class="line">     callStatsCustomScriptUrl</span><br><span class="line">     desktopSharingSources</span><br><span class="line">     disableAEC</span><br><span class="line">     disableAGC</span><br><span class="line">     disableAP</span><br><span class="line">     disableHPF</span><br><span class="line">     disableNS</span><br><span class="line">     enableLipSync</span><br><span class="line">     enableTalkWhileMuted</span><br><span class="line">     forceJVB121Ratio</span><br><span class="line">     hiddenDomain</span><br><span class="line">     ignoreStartMuted</span><br><span class="line">     nick</span><br><span class="line">     startBitrate</span><br><span class="line">     */</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改配置后，重启服务。</p><p>浏览器中输入：<a href="https://meet.demo.com/">https://meet.demo.com/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.jerrylou.me/video/jitsi-install-20180426.html&quot;&gt;Jitsi安装教程&lt;/a&gt;、之前安装Jitsi后所有人都能访问，当实际情况是需要认证后才能访问。通过配置jitsi提供了认证方式。&lt;/p&gt;</summary>
    
    
    
    <category term="video" scheme="https://luoji.live/categories/video/"/>
    
    
    <category term="linux" scheme="https://luoji.live/tags/linux/"/>
    
    <category term="jitsi" scheme="https://luoji.live/tags/jitsi/"/>
    
    <category term="meet" scheme="https://luoji.live/tags/meet/"/>
    
    <category term="video" scheme="https://luoji.live/tags/video/"/>
    
    <category term="conferences" scheme="https://luoji.live/tags/conferences/"/>
    
    <category term="web" scheme="https://luoji.live/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Jitsi开源Web视频会议-安装篇</title>
    <link href="https://luoji.live/video/jitsi-install-20180426.html"/>
    <id>https://luoji.live/video/jitsi-install-20180426.html</id>
    <published>2018-04-26T12:57:00.000Z</published>
    <updated>2021-01-05T16:26:11.365Z</updated>
    
    <content type="html"><![CDATA[<p>Jitsi是安全、简单和可伸缩的视频会议，您可以作为一个独立的应用程序或嵌入到您的web应用程序中。它是基于Prosody之上实现的，按照官方文档安装会出现一些问题，经过一些实验成功安装，并记录下安装步骤。</p><a id="more"></a><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul><li>Env: ubuntu 18.04</li><li>User: root</li></ul><h3 id="安装Prosody"><a href="#安装Prosody" class="headerlink" title="安装Prosody"></a>安装Prosody</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb http://packages.prosody.im/debian $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list</span><br><span class="line">wget https://prosody.im/files/prosody-debian-packages.key -O- | sudo apt-key add -</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install prosody</span><br></pre></td></tr></table></figure><p>配置<code>/etc/prosody/conf.d/meet.demo.com.cfg.lua</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- Plugins path gets uncommented during jitsi-meet-tokens package install - that<span class="string">&#x27;s where token plugin is located</span></span><br><span class="line"><span class="string">--plugin_paths = &#123; &quot;/usr/share/jitsi-meet/prosody-plugins/&quot; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost &quot;meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    authentication = &quot;anonymous&quot;</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = &quot;/var/lib/prosody/meet.demo.com.key&quot;;</span></span><br><span class="line"><span class="string">        certificate = &quot;/var/lib/prosody/meet.demo.com.crt&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    modules_enabled = &#123;</span></span><br><span class="line"><span class="string">        &quot;bosh&quot;;</span></span><br><span class="line"><span class="string">        &quot;pubsub&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    c2s_require_encryption = false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">VirtualHost &quot;auth.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    ssl = &#123;</span></span><br><span class="line"><span class="string">        key = &quot;/var/lib/prosody/auth.meet.demo.com.key&quot;;</span></span><br><span class="line"><span class="string">        certificate = &quot;/var/lib/prosody/auth.meet.demo.com.crt&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    authentication = &quot;internal_plain&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">admins = &#123; &quot;focus@auth.meet.demo.com&quot; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Component &quot;conference.meet.demo.com&quot; &quot;muc&quot;</span></span><br><span class="line"><span class="string">Component &quot;jitsi-videobridge.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    component_secret = &quot;password1&quot;</span></span><br><span class="line"><span class="string">Component &quot;focus.meet.demo.com&quot;</span></span><br><span class="line"><span class="string">    component_secret = &quot;password2&quot;</span></span><br></pre></td></tr></table></figure><p>证书生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl cert generate meet.demo.com</span><br><span class="line">prosodyctl cert generate auth.meet.demo.com</span><br><span class="line">output: /var/lib/prosody/</span><br><span class="line"></span><br><span class="line">ln -sf /var/lib/prosody/auth.meet.demo.com.crt /usr/<span class="built_in">local</span>/share/ca-certificates/auth.meet.demo.com.crt</span><br><span class="line">update-ca-certificates -f</span><br></pre></td></tr></table></figure><p>注册用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl register focus auth.meet.demo.com password3</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prosodyctl restart</span><br></pre></td></tr></table></figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>配置<code>/etc/nginx/sites-enabled/meet.demo.com</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://$host<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name meet.demo.com;</span><br><span class="line"></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_ciphers <span class="string">&quot;EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED&quot;</span>;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /var/lib/prosody/meet.demo.com.crt;</span><br><span class="line">    ssl_certificate_key /var/lib/prosody/meet.demo.com.key;</span><br><span class="line"></span><br><span class="line">    root /var/www/jitsi-meet;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    <span class="comment"># error_page 404 /static/404.html;</span></span><br><span class="line"></span><br><span class="line">    location ~ ^/([a-zA-Z0-9=\?]+)$ &#123;</span><br><span class="line">        rewrite ^/(.*)$ / <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        ssi on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BOSH</span></span><br><span class="line">    location /http-bind &#123;</span><br><span class="line">        proxy_pass      http://localhost:5280/http-bind;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Videobridge"><a href="#安装Jitsi-Videobridge" class="headerlink" title="安装Jitsi Videobridge"></a>安装Jitsi Videobridge</h3><p>下载jdk1.8(jdk-8u171-linux-x64.tar.gz)，<strong>不能使用openjdk和default-jre</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/share/jdk</span><br><span class="line"><span class="built_in">cd</span> /usr/share/jdk</span><br><span class="line">tar zxvf jdk-8u171-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/jdk/jdk1.8.0_171</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>下载Jitsi Videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/jitsi</span><br><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">wget https://download.jitsi.org/jitsi-videobridge/linux/jitsi-videobridge-linux-x64-1055.zip</span><br><span class="line">unzip jitsi-videobridge-linux-x64-1055.zip</span><br><span class="line">mv jitsi-videobridge-linux-x64-1055 videobridge</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> videobridge</span><br></pre></td></tr></table></figure><p>配置Jitsi Videobridge</p><p>添加启动脚本<code>start.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">&quot;-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=videobridge -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/videobridge -Djava.util.logging.config.file=/etc/jitsi/videobridge/logging.properties -Dlog4j.configurationFile=/etc/jitsi/videobridge/log4j2.xml&quot;</span></span><br><span class="line"></span><br><span class="line">./jvb.sh --host=localhost --domain=meet.demo.com --port=5347 --secret=password1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br><span class="line"></span><br><span class="line">chmod +x start.sh</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/jitsi/videobridge</span><br><span class="line"><span class="built_in">cd</span> /etc/jitsi/videobridge</span><br></pre></td></tr></table></figure><p>添加logging.properties 到 /etc/jitsi/videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">handlers= java.util.logging.FileHandler</span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler, com.agafua.syslog.SyslogHandler</span></span><br><span class="line"></span><br><span class="line">java.util.logging.ConsoleHandler.level = ALL</span><br><span class="line">java.util.logging.ConsoleHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line"></span><br><span class="line">net.java.sip.communicator.util.ScLogFormatter.programname=JVB</span><br><span class="line"></span><br><span class="line">.level=INFO</span><br><span class="line"></span><br><span class="line">org.jitsi.videobridge.xmpp.ComponentImpl.level=FINE</span><br><span class="line"></span><br><span class="line"><span class="comment"># All of the INFO level logs from MediaStreamImpl are unnecessary in the context of jitsi-videobridge.</span></span><br><span class="line">org.jitsi.impl.neomedia.MediaStreamImpl.level=WARNING</span><br><span class="line"></span><br><span class="line"><span class="comment"># Syslog(uncomment handler to use)</span></span><br><span class="line">com.agafua.syslog.SyslogHandler.transport = udp</span><br><span class="line">com.agafua.syslog.SyslogHandler.facility = local0</span><br><span class="line">com.agafua.syslog.SyslogHandler.port = 514</span><br><span class="line">com.agafua.syslog.SyslogHandler.hostname = localhost</span><br><span class="line">com.agafua.syslog.SyslogHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line">com.agafua.syslog.SyslogHandler.escapeNewlines = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to disable double timestamps in syslog uncomment next line</span></span><br><span class="line"><span class="comment">#net.java.sip.communicator.util.ScLogFormatter.disableTimestamp=true</span></span><br><span class="line"></span><br><span class="line">java.util.logging.FileHandler.level = ALL</span><br><span class="line">java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter</span><br><span class="line">java.util.logging.FileHandler.limit=1024000</span><br><span class="line">java.util.logging.FileHandler.count=10</span><br><span class="line">java.util.logging.FileHandler.pattern=/var/<span class="built_in">log</span>/jitsi/videobridge/jvb%u.log</span><br><span class="line">java.util.logging.FileHandler.append=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>添加 log4j2.xml 到 /etc/jitsi/videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;Configuration&gt;</span><br><span class="line">    &lt;Properties&gt;</span><br><span class="line">        &lt;Property name=<span class="string">&quot;log-path&quot;</span>&gt;/var/<span class="built_in">log</span>/jitsi/videobridge&lt;/Property&gt;</span><br><span class="line">&lt;/Properties&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;RollingFile name=<span class="string">&quot;RollingFile&quot;</span> fileName=<span class="string">&quot;<span class="variable">$&#123;log-path&#125;</span>/cs.log&quot;</span></span><br><span class="line">                 filePattern=<span class="string">&quot;<span class="variable">$&#123;log-path&#125;</span>/$<span class="variable">$&#123;date:yyyy-MM&#125;</span>/cs-%d&#123;MM-dd-yyyy&#125;-%i.log.gz&quot;</span>&gt;</span><br><span class="line">&lt;PatternLayout pattern=<span class="string">&quot;%d %-5p (%F:%L) - %m%n&quot;</span>/&gt;</span><br><span class="line">      &lt;Policies&gt;</span><br><span class="line">        &lt;TimeBasedTriggeringPolicy /&gt;</span><br><span class="line">        &lt;SizeBasedTriggeringPolicy size=<span class="string">&quot;250 MB&quot;</span>/&gt;</span><br><span class="line">      &lt;/Policies&gt;</span><br><span class="line">    &lt;/RollingFile&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;Console name=<span class="string">&quot;STDOUT&quot;</span> target=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span><br><span class="line">      &lt;PatternLayout pattern=<span class="string">&quot;%d %-5p (%F:%L) - %m%n&quot;</span>/&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">    &lt;!--&lt;Logger name=<span class="string">&quot;org.apache.log4j.xml&quot;</span> level=<span class="string">&quot;debug&quot;</span>/&gt;--&gt;</span><br><span class="line">    &lt;Logger name=<span class="string">&quot;org.apache.log4j.xml&quot;</span> level=<span class="string">&quot;info&quot;</span>/&gt;</span><br><span class="line">        &lt;Root level=<span class="string">&quot;info&quot;</span>&gt;</span><br><span class="line">            &lt;AppenderRef ref=<span class="string">&quot;RollingFile&quot;</span>/&gt;</span><br><span class="line">           &lt;!--  &lt;AppenderRef ref=<span class="string">&quot;STDOUT&quot;</span>/&gt;  --&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>添加 sip-communicator.properties 到 /etc/jitsi/videobridge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.jitsi.impl.neomedia.transform.srtp.SRTPCryptoContext.checkReplay=<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/<span class="built_in">log</span>/jitsi/videobridge</span><br><span class="line"><span class="built_in">cd</span> /root/jitsi/videobridge</span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Jicofo"><a href="#安装Jitsi-Jicofo" class="headerlink" title="安装Jitsi Jicofo"></a>安装Jitsi Jicofo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install  maven</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jitsi/jicofo.git</span><br><span class="line"><span class="built_in">cd</span> jicofo</span><br><span class="line">mvn package -DskipTests -Dassembly.skipAssembly=<span class="literal">false</span></span><br><span class="line">unzip target/jicofo-linux-x64-1.1-SNAPSHOT.zip</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/jitsi/jicofo</span><br><span class="line"><span class="built_in">cd</span> /etc/jitsi/jicofo</span><br></pre></td></tr></table></figure><p>添加 logging.properties 到 /etc/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">handlers= java.util.logging.FileHandler</span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="comment">#handlers= java.util.logging.ConsoleHandler, com.agafua.syslog.SyslogHandler</span></span><br><span class="line"></span><br><span class="line">java.util.logging.ConsoleHandler.level = ALL</span><br><span class="line">java.util.logging.ConsoleHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line"></span><br><span class="line">net.java.sip.communicator.util.ScLogFormatter.programname=Jicofo</span><br><span class="line"></span><br><span class="line">.level=INFO</span><br><span class="line">net.sf.level=SEVERE</span><br><span class="line">net.java.sip.communicator.plugin.reconnectplugin.level=FINE</span><br><span class="line">org.ice4j.level=SEVERE</span><br><span class="line">org.jitsi.impl.neomedia.level=SEVERE</span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not worry about missing strings</span></span><br><span class="line">net.java.sip.communicator.service.resources.AbstractResourcesService.level=SEVERE</span><br><span class="line"></span><br><span class="line"><span class="comment">#net.java.sip.communicator.service.protocol.level=ALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable debug packets logging</span></span><br><span class="line"><span class="comment">#org.jitsi.impl.protocol.xmpp.level=FINE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Syslog(uncomment handler to use)</span></span><br><span class="line">com.agafua.syslog.SyslogHandler.transport = udp</span><br><span class="line">com.agafua.syslog.SyslogHandler.facility = local0</span><br><span class="line">com.agafua.syslog.SyslogHandler.port = 514</span><br><span class="line">com.agafua.syslog.SyslogHandler.hostname = localhost</span><br><span class="line">com.agafua.syslog.SyslogHandler.formatter = net.java.sip.communicator.util.ScLogFormatter</span><br><span class="line">com.agafua.syslog.SyslogHandler.escapeNewlines = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to disable double timestamps in syslog uncomment next line</span></span><br><span class="line"><span class="comment">#net.java.sip.communicator.util.ScLogFormatter.disableTimestamp=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># uncomment to see how Jicofo talks to the JVB</span></span><br><span class="line"><span class="comment">#org.jitsi.impl.protocol.xmpp.colibri.level=ALL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java.util.logging.FileHandler.level = ALL</span><br><span class="line">java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter</span><br><span class="line">java.util.logging.FileHandler.limit=1024000</span><br><span class="line">java.util.logging.FileHandler.count=10</span><br><span class="line">java.util.logging.FileHandler.pattern=/var/<span class="built_in">log</span>/jitsi/jicofo/jicofo%u.log</span><br><span class="line">java.util.logging.FileHandler.append=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>添加 log4j2.xml 到 /etc/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;Configuration&gt;</span><br><span class="line">    &lt;Properties&gt;</span><br><span class="line">        &lt;Property name=<span class="string">&quot;log-path&quot;</span>&gt;/var/<span class="built_in">log</span>/jitsi/jicofo&lt;/Property&gt;</span><br><span class="line">&lt;/Properties&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;RollingFile name=<span class="string">&quot;RollingFile&quot;</span> fileName=<span class="string">&quot;<span class="variable">$&#123;log-path&#125;</span>/cs.log&quot;</span></span><br><span class="line">                 filePattern=<span class="string">&quot;<span class="variable">$&#123;log-path&#125;</span>/$<span class="variable">$&#123;date:yyyy-MM&#125;</span>/cs-%d&#123;MM-dd-yyyy&#125;-%i.log.gz&quot;</span>&gt;</span><br><span class="line">&lt;PatternLayout pattern=<span class="string">&quot;%d %-5p (%F:%L) - %m%n&quot;</span>/&gt;</span><br><span class="line">      &lt;Policies&gt;</span><br><span class="line">        &lt;TimeBasedTriggeringPolicy /&gt;</span><br><span class="line">        &lt;SizeBasedTriggeringPolicy size=<span class="string">&quot;250 MB&quot;</span>/&gt;</span><br><span class="line">      &lt;/Policies&gt;</span><br><span class="line">    &lt;/RollingFile&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;Console name=<span class="string">&quot;STDOUT&quot;</span> target=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span><br><span class="line">      &lt;PatternLayout pattern=<span class="string">&quot;%d %-5p (%F:%L) - %m%n&quot;</span>/&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">    &lt;!--&lt;Logger name=<span class="string">&quot;org.apache.log4j.xml&quot;</span> level=<span class="string">&quot;debug&quot;</span>/&gt;--&gt;</span><br><span class="line">    &lt;Logger name=<span class="string">&quot;org.apache.log4j.xml&quot;</span> level=<span class="string">&quot;info&quot;</span>/&gt;</span><br><span class="line">        &lt;Root level=<span class="string">&quot;info&quot;</span>&gt;</span><br><span class="line">            &lt;AppenderRef ref=<span class="string">&quot;RollingFile&quot;</span>/&gt;</span><br><span class="line">           &lt;!--  &lt;AppenderRef ref=<span class="string">&quot;STDOUT&quot;</span>/&gt;  --&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure><p>添加 sip-communicator.properties 到 /etc/jitsi/jicofo (empty file)</p><p>启动脚本<br>cd /root/jitsi/jicofo</p><p>添加 start.sh 到 /root/jitsi/jicofo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mvn package -DskipTests -Dassembly.skipAssembly=false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_SYS_PROPS=<span class="string">&quot;-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=jicofo -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi/jicofo -Djava.util.logging.config.file=/etc/jitsi/jicofo/logging.properties -Dlog4j.configurationFile=/etc/jitsi/jicofo/log4j2.xml&quot;</span></span><br><span class="line"></span><br><span class="line">./jicofo-linux-x64-1.1-SNAPSHOT/jicofo.sh --host=localhost --domain=meet.demo.com --secret=password2 --user_domain=auth.meet.demo.com --user_name=focus --user_password=password3 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> JAVA_SYS_PROPS</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start.sh</span><br><span class="line"></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/jitsi/jicofo/</span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><h3 id="安装Jitsi-Meet"><a href="#安装Jitsi-Meet" class="headerlink" title="安装Jitsi Meet"></a>安装Jitsi Meet</h3><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/jitsi</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jitsi/jitsi-meet.git</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -fr jitsi-meet /var/www/</span><br><span class="line"><span class="built_in">cd</span> /var/www/jitsi-meet</span><br></pre></td></tr></table></figure><p>修改config.js </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    hosts: &#123;</span><br><span class="line">        domain: <span class="string">&#x27;meet.demo.com&#x27;</span>,</span><br><span class="line">        muc: <span class="string">&#x27;conference.meet.demo.com&#x27;</span>,</span><br><span class="line">        bridge: <span class="string">&#x27;jitsi-videobridge.meet.demo.com&#x27;</span>,</span><br><span class="line">        focus: <span class="string">&#x27;focus.meet.demo.com&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    useNicks: <span class="literal">false</span>,</span><br><span class="line">    bosh: <span class="string">&#x27;//meet.demo.com/http-bind&#x27;</span>, // FIXME: use xep-0156 <span class="keyword">for</span> that</span><br><span class="line">    //chromeExtensionId: <span class="string">&#x27;diibjkoicjeejcmhdnailmkgecihlobk&#x27;</span>, // Id of desktop streamer Chrome extension</span><br><span class="line">    //minChromeExtVersion: <span class="string">&#x27;0.1&#x27;</span> // Required version of Chrome extension</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">check /etc/nginx/sites-enabled/meet.demo.com root</span><br><span class="line">root /var/www/jitsi-meet;</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>浏览器中输入：<a href="https://meet.demo.com/">https://meet.demo.com/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Jitsi是安全、简单和可伸缩的视频会议，您可以作为一个独立的应用程序或嵌入到您的web应用程序中。它是基于Prosody之上实现的，按照官方文档安装会出现一些问题，经过一些实验成功安装，并记录下安装步骤。&lt;/p&gt;</summary>
    
    
    
    <category term="video" scheme="https://luoji.live/categories/video/"/>
    
    
    <category term="linux" scheme="https://luoji.live/tags/linux/"/>
    
    <category term="jitsi" scheme="https://luoji.live/tags/jitsi/"/>
    
    <category term="meet" scheme="https://luoji.live/tags/meet/"/>
    
    <category term="video" scheme="https://luoji.live/tags/video/"/>
    
    <category term="conferences" scheme="https://luoji.live/tags/conferences/"/>
    
    <category term="web" scheme="https://luoji.live/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果hackintosh 安装macos high sierra系统</title>
    <link href="https://luoji.live/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/hackintosh-to-high-sierra-20180212.html"/>
    <id>https://luoji.live/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/hackintosh-to-high-sierra-20180212.html</id>
    <published>2018-02-12T12:50:34.000Z</published>
    <updated>2021-01-05T16:26:11.374Z</updated>
    
    <content type="html"><![CDATA[<p>macos high sierra更新一段时间了，以前的hackintosh系统已经很久没有更新了，趁过年更新下系统。系统硬件参考：<a href="/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/hackintosh-window-install-20130429.html">&lt;&lt;安装Mac Window10 双系统，为发烧而生&gt;&gt;</a></p><a id="more"></a><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>mac电脑</li><li>下载Install macOS High Sierra</li><li>16G U盘</li><li>下载uniBeast、MultiBeast、clover configurator软件</li><li>下载显卡驱动WebDriver-387.10.10.10.25.156(根据自己的显卡)</li></ul><p><img src="https://static.oschina.net/uploads/space/2018/0213/122106_defq_3724856.png" alt="Alt text"></p><h3 id="启动盘"><a href="#启动盘" class="headerlink" title="启动盘"></a>启动盘</h3><p>格式化U盘<br><img src="https://static.oschina.net/uploads/space/2018/0213/115111_17aS_3724856.png" alt="Alt text" title="format usb"></p><p>双击UniBeast并安装<br><img src="https://static.oschina.net/uploads/space/2018/0213/115255_ZexK_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115317_EgnB_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115334_m6Pu_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115431_JH70_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115414_p3Dy_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115450_kB3n_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115505_2OKd_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115525_uikz_3724856.png" alt="Alt text"></p><p>将下载的软件拷贝到U盘<br><img src="https://static.oschina.net/uploads/space/2018/0213/115537_S3XO_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/115631_EFbs_3724856.png" alt="Alt text"></p><p>将U盘插入你的PC。</p><h3 id="Bios设置"><a href="#Bios设置" class="headerlink" title="Bios设置"></a>Bios设置</h3><ul><li>cpu支持VT-d，禁用它。</li><li>支持CFG-Lock，禁用它。</li><li>支持Secure Boot Mode，禁用它。</li><li>支持IO Serial Port，禁用它。</li><li>Set OS 类型 Other OS</li><li>Set XHCI Handoff 选项为Enable。</li><li>设置第一启动为U盘 （或者重启按F12选择启动项）</li></ul><p>保存并退出</p><h3 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h3><p>选择Boot OS X Install from Install macOS high Sierra<br><img src="https://static.oschina.net/uploads/space/2018/0213/121635_V7HG_3724856.png" alt="Alt text"><br>进入安装mac 系统，这里就不截图了，安装过程中可能会重启几次。</p><h3 id="系统补丁"><a href="#系统补丁" class="headerlink" title="系统补丁"></a>系统补丁</h3><p>使用MultiBeast安装补丁<br><img src="https://static.oschina.net/uploads/space/2018/0213/121655_R931_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121711_R8X3_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121727_H49N_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121742_kjKG_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121801_gtoK_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121817_wkkb_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121831_ghKL_3724856.png" alt="Alt text"></p><h3 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h3><p><img src="https://static.oschina.net/uploads/space/2018/0213/121846_p6JB_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121917_AGvM_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/121932_w8JX_3724856.png" alt="Alt text"></p><h3 id="修复声卡"><a href="#修复声卡" class="headerlink" title="修复声卡"></a>修复声卡</h3><p>参看：<a href="https://hackintosher.com/guides/get-hackintosh-audio-working/">https://hackintosher.com/guides/get-hackintosh-audio-working/</a></p><p>打开终端: <code>diskutil list</code> <code>diskutil mount /dev/disk0s1</code><br><img src="https://static.oschina.net/uploads/space/2018/0213/121948_lQLH_3724856.png" alt="Alt text"></p><p>拷贝kext到EFI-&gt;kexts-&gt;other目录下<br><img src="https://static.oschina.net/uploads/space/2018/0213/122006_IJJ4_3724856.png" alt="Alt text"></p><p>使用clover configurator配置<br><img src="https://static.oschina.net/uploads/space/2018/0213/122021_sxke_3724856.png" alt="Alt text"><br><img src="https://static.oschina.net/uploads/space/2018/0213/122038_U79e_3724856.png" alt="Alt text"></p><p>关闭clover configurator，保存config.plist. 然后重启电脑。ok，你可以听音乐了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;macos high sierra更新一段时间了，以前的hackintosh系统已经很久没有更新了，趁过年更新下系统。系统硬件参考：&lt;a href=&quot;/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/hackintosh-window-install-20130429.html&quot;&gt;&amp;lt;&amp;lt;安装Mac Window10 双系统，为发烧而生&amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="电脑硬件" scheme="https://luoji.live/categories/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="mac" scheme="https://luoji.live/tags/mac/"/>
    
    <category term="high sierra" scheme="https://luoji.live/tags/high-sierra/"/>
    
    <category term="hackintosh" scheme="https://luoji.live/tags/hackintosh/"/>
    
    <category term="黑苹果" scheme="https://luoji.live/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    <category term="安装" scheme="https://luoji.live/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="UEFI" scheme="https://luoji.live/tags/UEFI/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL查询语言实践-实现BoltMQ的Console</title>
    <link href="https://luoji.live/graphql/graphql-golang-fulfill-20180206.html"/>
    <id>https://luoji.live/graphql/graphql-golang-fulfill-20180206.html</id>
    <published>2018-02-06T06:46:36.000Z</published>
    <updated>2021-01-05T16:26:11.346Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文章<a href="graphql/graphql-golang-20180123.html">《GraphQL查询语言学习笔记》</a>学习了GraphQL的语法和介绍Golang的库。最近再使用Golang编写一款分布式消息队列<a href="https://github.com/boltmq/boltmq">BoltMQ</a>，我将GraphQL用到BoltMQ的web管理UI上，这样更进一步了解GraphQL。</p><a id="more"></a><h3 id="GraphQL-设计篇"><a href="#GraphQL-设计篇" class="headerlink" title="GraphQL 设计篇"></a>GraphQL 设计篇</h3><p>有了将GraphQL应用到BoltMQ的web UI上的需求，那如何来做呢。我总结了下：</p><ol><li>业务梳理</li><li>GraphQL API设计</li><li>GraphQL Schema设计</li><li>GraphQL 第三方库的选择</li><li>GraphQL 客户端与服务端的实现</li></ol><h3 id="GraphQL-API设计"><a href="#GraphQL-API设计" class="headerlink" title="GraphQL API设计"></a>GraphQL API设计</h3><p>API的设计比较重要，需要开发人员充分理解业务，在业务的基础抽象有查询Graph。例如<a href="git@github.com:boltmq/console.git">console</a>是BolotMQ的集群管理UI。需求：</p><ul><li>管理多个BoltMQ集群</li><li>查询集群的节点信息</li><li>查询集群的统计信息</li><li>查询集群的topic信息</li><li>查询集群的消息信息</li><li>查询集群的订阅组信息</li><li>查询集群的消费进度</li><li>查询集群的在线消费进程<br>意思列举了几个功能点，首先将集群这个概念抽象出来，用户在选定集群的情况下才会做下面的查询操作，所有集群就可以作为第一层，然后再往下梳理。graphql就是将业务抽象成图（树）的形式的。</li></ul><p>以下是对console的查询操作的API设计，当然你需要理解BoltMQ的一些知识。你可查看<a href="https://github.com/boltmq/boltmq">BoltMQ</a>了解。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">query clusters(<span class="variable">$name</span>: String, <span class="variable">$like</span>: String, <span class="variable">$group</span>: String, <span class="variable">$msgId</span>: String!) &#123;</span><br><span class="line">  clusters(name: <span class="variable">$name</span>) &#123;</span><br><span class="line">    name</span><br><span class="line">    stats &#123;</span><br><span class="line">      producerNums</span><br><span class="line">      consumerNums</span><br><span class="line">      brokerNums</span><br><span class="line">      namesrvNums</span><br><span class="line">      topicNums</span><br><span class="line">      outTotalTodayNums</span><br><span class="line">      outTotalYestNums</span><br><span class="line">      inTotalTodayNums</span><br><span class="line">      inTotalYestNums</span><br><span class="line">    &#125;</span><br><span class="line">    nodes &#123;</span><br><span class="line">      namesrvAddrs</span><br><span class="line">      brokerNodes &#123;</span><br><span class="line">        role</span><br><span class="line">        addr</span><br><span class="line">        version</span><br><span class="line">        desc</span><br><span class="line">        outTps</span><br><span class="line">        inTps</span><br><span class="line">        outTotalTodayNums</span><br><span class="line">        outTotalYestNums</span><br><span class="line">        inTotalTodayNums</span><br><span class="line">        inTotalYestNums</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    topics(like: <span class="variable">$like</span>) &#123;</span><br><span class="line">      topic</span><br><span class="line">      <span class="built_in">type</span></span><br><span class="line">      isSystem</span><br><span class="line">      store &#123;</span><br><span class="line">        brokerName</span><br><span class="line">        queueId</span><br><span class="line">        maxOffset</span><br><span class="line">        minOffset</span><br><span class="line">        lastUpdateTime</span><br><span class="line">      &#125;</span><br><span class="line">      route &#123;</span><br><span class="line">        queues &#123;</span><br><span class="line">          brokerName</span><br><span class="line">          writeQueueNums</span><br><span class="line">          readQueueNums</span><br><span class="line">          perm</span><br><span class="line">          sysFlag</span><br><span class="line">        &#125;</span><br><span class="line">        brokers &#123;</span><br><span class="line">          brokerName</span><br><span class="line">          brokerAddrs &#123;</span><br><span class="line">            brokerId</span><br><span class="line">            addr</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      groups</span><br><span class="line">      consumeConn &#123;</span><br><span class="line">        describe</span><br><span class="line">        conns &#123;</span><br><span class="line">          consumeGroup</span><br><span class="line">          clientId</span><br><span class="line">          clientAddr</span><br><span class="line">          language</span><br><span class="line">          version</span><br><span class="line">          consumeTps</span><br><span class="line">          consumeFromWhere</span><br><span class="line">          consumeType</span><br><span class="line">          diff</span><br><span class="line">          messageModel</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      consumeProgress(group: <span class="variable">$group</span>) &#123;</span><br><span class="line">        consumeGroup</span><br><span class="line">        tps</span><br><span class="line">        diff</span><br><span class="line">        total</span><br><span class="line">        progress &#123;</span><br><span class="line">          brokerOffset</span><br><span class="line">          consumeOffset</span><br><span class="line">          diff</span><br><span class="line">          brokerName</span><br><span class="line">          queueId</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  msg(msgId: <span class="variable">$msgId</span>) &#123;</span><br><span class="line">    info &#123;</span><br><span class="line">      msgId</span><br><span class="line">      topic</span><br><span class="line">      flag</span><br><span class="line">      body</span><br><span class="line">      queueId</span><br><span class="line">      storeSize</span><br><span class="line">      queueOffset</span><br><span class="line">      sysFlag</span><br><span class="line">      bornTimestamp</span><br><span class="line">      bornHost</span><br><span class="line">      storeTimestamp</span><br><span class="line">      storeHost</span><br><span class="line">      commitLogOffset</span><br><span class="line">      bodyCRC</span><br><span class="line">      reconsumeTimes</span><br><span class="line">      preparedTransactionOffset</span><br><span class="line">      properties &#123;</span><br><span class="line">        key</span><br><span class="line">        val</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    tracks &#123;</span><br><span class="line">      code</span><br><span class="line">      <span class="built_in">type</span></span><br><span class="line">      consumeGroup</span><br><span class="line">      desc</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GraphQL-Schema-设计"><a href="#GraphQL-Schema-设计" class="headerlink" title="GraphQL Schema 设计"></a>GraphQL Schema 设计</h3><p>结合GraphQL API设计类型系统Schema，这里的设计偏后端一些，和API是相辅相成的。在API基础上再次确定返回值的类型以及结构的优化。当然API和Schema的设计可以同时做，也可以分开进行。</p><p>console的类型系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># boltmq contole graphql schema</span></span><br><span class="line">schema &#123;</span><br><span class="line">    query: Query</span><br><span class="line">    mutation: Mutation</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The query type, represents all of the entry points into our object graph</span></span><br><span class="line"><span class="built_in">type</span> Query &#123;</span><br><span class="line">    clusters(name: String): [Cluster]!</span><br><span class="line">    msg(name: String, msgId: String!): Message</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Cluster from the boltmq server</span></span><br><span class="line"><span class="built_in">type</span> Cluster &#123;</span><br><span class="line">    <span class="comment"># The name of cluster</span></span><br><span class="line">    name: String!</span><br><span class="line">    <span class="comment"># The stats info of cluster</span></span><br><span class="line">    stats: ClusterStats!</span><br><span class="line">    <span class="comment"># The node info of cluster</span></span><br><span class="line">    nodes: ClusterNode!</span><br><span class="line">    <span class="comment"># The topics of cluster</span></span><br><span class="line">    topics(like: String): [Topic]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A ClusterStats info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> ClusterStats &#123;</span><br><span class="line">    <span class="comment"># The producer nums of cluster</span></span><br><span class="line">    producerNums: Int!</span><br><span class="line">    <span class="comment"># The consumer nums of cluster</span></span><br><span class="line">    consumerNums: Int!</span><br><span class="line">    <span class="comment"># The broker nums of cluster</span></span><br><span class="line">    brokerNums: Int!</span><br><span class="line">    <span class="comment"># The name server nums of cluster</span></span><br><span class="line">    namesrvNums: Int!</span><br><span class="line">    <span class="comment"># The topic nums of cluster</span></span><br><span class="line">    topicNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number today</span></span><br><span class="line">    outTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number yest</span></span><br><span class="line">    outTotalYestNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number yest</span></span><br><span class="line">    inTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number today</span></span><br><span class="line">    inTotalYestNums: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Cluster node info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> ClusterNode &#123;</span><br><span class="line">    <span class="comment"># The namesrv addr list fo cluster</span></span><br><span class="line">    namesrvAddrs: [String!]!</span><br><span class="line">    <span class="comment"># The broker node list fo cluster</span></span><br><span class="line">    brokerNodes: [BrokerNode]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A Boker node info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> BrokerNode &#123;</span><br><span class="line">    <span class="comment"># The borker role</span></span><br><span class="line">    role: Int!</span><br><span class="line">    <span class="comment"># The borker addr</span></span><br><span class="line">    addr: String!</span><br><span class="line">    <span class="comment"># The borker server version</span></span><br><span class="line">    version: String!</span><br><span class="line">    <span class="comment"># The borker server describe</span></span><br><span class="line">    desc: String!</span><br><span class="line">    <span class="comment"># The borker server current out tps</span></span><br><span class="line">    outTps: Float!</span><br><span class="line">    <span class="comment"># The borker server current in tps</span></span><br><span class="line">    inTps: Float!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number today</span></span><br><span class="line">    outTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster consumer msg total number yest</span></span><br><span class="line">    outTotalYestNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number yest</span></span><br><span class="line">    inTotalTodayNums: Int!</span><br><span class="line">    <span class="comment"># The cluster producer msg total number today</span></span><br><span class="line">    inTotalYestNums: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> Topic &#123;</span><br><span class="line">    <span class="comment"># The topic name</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The topic type</span></span><br><span class="line">    <span class="built_in">type</span>: Int!</span><br><span class="line">    <span class="comment"># The topic type</span></span><br><span class="line">    isSystem: Boolean!</span><br><span class="line">    <span class="comment"># The topic store</span></span><br><span class="line">    store: TopicStore!</span><br><span class="line">    <span class="comment"># The topic route</span></span><br><span class="line">    route: TopicRoute!</span><br><span class="line">    <span class="comment"># The consume group</span></span><br><span class="line">    groups: [String!]!</span><br><span class="line">    <span class="comment"># The consume connection</span></span><br><span class="line">    consumeConn: ConsumeConn!</span><br><span class="line">    consumeProgress(group: String): [ConsumeProgress]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># topic type</span></span><br><span class="line">enum TopicType &#123;</span><br><span class="line">    <span class="comment"># normal topic</span></span><br><span class="line">    NORMAL_TOPIC</span><br><span class="line">    <span class="comment"># retry topic</span></span><br><span class="line">    RETRY_TOPIC</span><br><span class="line">    <span class="comment"># deadline queue topic</span></span><br><span class="line">    DLQ_TOPIC</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic stroe info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> TopicStore &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">    <span class="comment"># The max offset</span></span><br><span class="line">    maxOffset: Int!</span><br><span class="line">    <span class="comment"># The min offset</span></span><br><span class="line">    minOffset: Int!</span><br><span class="line">    <span class="comment"># The last update time</span></span><br><span class="line">    lastUpdateTime: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A topic route info of boltmq cluster</span></span><br><span class="line"><span class="built_in">type</span> TopicRoute &#123;</span><br><span class="line">    <span class="comment"># The route data of queue</span></span><br><span class="line">    queues: [QueueData]!</span><br><span class="line">    <span class="comment"># The route data of broker</span></span><br><span class="line">    brokers: [BrokerData]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A queue route data of topic</span></span><br><span class="line"><span class="built_in">type</span> QueueData &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The write queue nums</span></span><br><span class="line">    writeQueueNums: Int!</span><br><span class="line">    <span class="comment"># The read queue nums</span></span><br><span class="line">    readQueueNums: Int!</span><br><span class="line">    <span class="comment"># The permissions of topic on broker</span></span><br><span class="line">    perm: Int!</span><br><span class="line">    <span class="comment"># The permissions of topic on broker</span></span><br><span class="line">    sysFlag: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A broker route data of topic</span></span><br><span class="line"><span class="built_in">type</span> BrokerData &#123;</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The broker addrs</span></span><br><span class="line">    brokerAddrs: [BrokerAddr]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A broker addr of topic route</span></span><br><span class="line"><span class="built_in">type</span> BrokerAddr &#123;</span><br><span class="line">    <span class="comment"># The broker id</span></span><br><span class="line">    brokerId: Int!</span><br><span class="line">    <span class="comment"># The broker addr</span></span><br><span class="line">    addr: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume connection</span></span><br><span class="line"><span class="built_in">type</span> ConsumeConn &#123;</span><br><span class="line">    <span class="comment"># The describe</span></span><br><span class="line">    describe: String!</span><br><span class="line">    <span class="comment"># The connection</span></span><br><span class="line">    conns: [Connection]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># connection info</span></span><br><span class="line"><span class="built_in">type</span> Connection &#123;</span><br><span class="line">    <span class="comment"># The consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># The client id</span></span><br><span class="line">    clientId: String!</span><br><span class="line">    <span class="comment"># The client addr</span></span><br><span class="line">    clientAddr: String!</span><br><span class="line">    <span class="comment"># The language</span></span><br><span class="line">    language: String!</span><br><span class="line">    <span class="comment"># The version</span></span><br><span class="line">    version: String!</span><br><span class="line">    <span class="comment"># The consume tps</span></span><br><span class="line">    consumeTps: Float!</span><br><span class="line">    <span class="comment"># The consume from where</span></span><br><span class="line">    consumeFromWhere: String!</span><br><span class="line">    <span class="comment"># The consume type</span></span><br><span class="line">    consumeType: Int!</span><br><span class="line">    <span class="comment"># The message diff total</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The message model</span></span><br><span class="line">    messageModel: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume type</span></span><br><span class="line">enum ConsumeType &#123;</span><br><span class="line">    <span class="comment"># actively consume</span></span><br><span class="line">    CONSUME_ACTIVELY</span><br><span class="line">    <span class="comment"># passively consume</span></span><br><span class="line">    CONSUME_PASSIVELY</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message model</span></span><br><span class="line">enum MessageModel &#123;</span><br><span class="line">    <span class="comment"># broadcasting</span></span><br><span class="line">    BROADCASTING </span><br><span class="line">    <span class="comment"># clustering</span></span><br><span class="line">    CLUSTERING</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume progress</span></span><br><span class="line"><span class="built_in">type</span> ConsumeProgress &#123;</span><br><span class="line">    <span class="comment"># The consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># The consume tps</span></span><br><span class="line">    tps: Float!</span><br><span class="line">    <span class="comment"># The consume diff</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The total</span></span><br><span class="line">    total: Int!</span><br><span class="line">    <span class="comment"># The progress data list</span></span><br><span class="line">    progress: [ConsumeProgressData]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># consume progress data</span></span><br><span class="line"><span class="built_in">type</span> ConsumeProgressData &#123;</span><br><span class="line">    <span class="comment"># The broker offset</span></span><br><span class="line">    brokerOffset: Int!</span><br><span class="line">    <span class="comment"># The broker offset</span></span><br><span class="line">    consumeOffset: Int!</span><br><span class="line">    <span class="comment"># The consume diff</span></span><br><span class="line">    diff: Int!</span><br><span class="line">    <span class="comment"># The broker name</span></span><br><span class="line">    brokerName: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message</span></span><br><span class="line"><span class="built_in">type</span> Message &#123;</span><br><span class="line">    <span class="comment"># The message base info</span></span><br><span class="line">    info: MessageInfo!</span><br><span class="line">    <span class="comment"># The message track list</span></span><br><span class="line">    tracks: [MessageTrack]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message info</span></span><br><span class="line"><span class="built_in">type</span> MessageInfo &#123;</span><br><span class="line">    <span class="comment"># The message id</span></span><br><span class="line">    msgId: String!</span><br><span class="line">    <span class="comment"># The topic name</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The message flag</span></span><br><span class="line">    flag: Int!</span><br><span class="line">    <span class="comment"># The message body</span></span><br><span class="line">    body: String!</span><br><span class="line">    <span class="comment"># The queue id</span></span><br><span class="line">    queueId: Int!</span><br><span class="line">    <span class="comment"># The store size</span></span><br><span class="line">    storeSize: Int!</span><br><span class="line">    <span class="comment"># The queue offset</span></span><br><span class="line">    queueOffset: Int!</span><br><span class="line">    <span class="comment"># The message sys flag</span></span><br><span class="line">    sysFlag: Int!</span><br><span class="line">    <span class="comment"># The born timestamp</span></span><br><span class="line">    bornTimestamp: String!</span><br><span class="line">    <span class="comment"># The born host </span></span><br><span class="line">    bornHost: String!</span><br><span class="line">    <span class="comment"># The store timestamp</span></span><br><span class="line">    storeTimestamp: String!</span><br><span class="line">    <span class="comment"># The store host </span></span><br><span class="line">    storeHost: String!</span><br><span class="line">    <span class="comment"># The commitlog offset</span></span><br><span class="line">    commitLogOffset: Int!</span><br><span class="line">    <span class="comment"># The message body crc</span></span><br><span class="line">    bodyCRC: Int!</span><br><span class="line">    <span class="comment"># The reconsume times</span></span><br><span class="line">    reconsumeTimes: Int!</span><br><span class="line">    <span class="comment"># The reconsume times</span></span><br><span class="line">    preparedTransactionOffset: Int!</span><br><span class="line">    <span class="comment"># The properties</span></span><br><span class="line">    properties: [Property!]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># property, replace map</span></span><br><span class="line"><span class="built_in">type</span> Property &#123;</span><br><span class="line">    key: String!</span><br><span class="line">    val: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># message track</span></span><br><span class="line"><span class="built_in">type</span> MessageTrack &#123;</span><br><span class="line">    <span class="comment"># The track code, 0: success, non-0: failed</span></span><br><span class="line">    code: Int!</span><br><span class="line">    <span class="comment"># track type</span></span><br><span class="line">    <span class="built_in">type</span>: Int!</span><br><span class="line">    <span class="comment"># consume group name</span></span><br><span class="line">    consumeGroup: String!</span><br><span class="line">    <span class="comment"># error describe</span></span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># track type</span></span><br><span class="line">enum TrackType &#123;</span><br><span class="line">    <span class="comment"># subscribed and consumed</span></span><br><span class="line">    SUBSCRIBEDANDCONSUMED</span><br><span class="line">    <span class="comment"># subscribed but filterd</span></span><br><span class="line">    SUBSCRIBEDBUTFILTERD</span><br><span class="line">    <span class="comment"># subscribed but pull</span></span><br><span class="line">    SUBSCRIBEDBUTPULL</span><br><span class="line">    <span class="comment"># subscribed and not consume yet</span></span><br><span class="line">    SUBSCRIBEDBUTNOTCONSUMEYET</span><br><span class="line">    <span class="comment"># unknow exeption</span></span><br><span class="line">    UNKNOWEXEPTION</span><br><span class="line">    <span class="comment"># not subscribed and not consumed</span></span><br><span class="line">    NOTSUBSCRIBEDANDNOTCONSUMED</span><br><span class="line">    <span class="comment"># consume groupId not online</span></span><br><span class="line">    CONSUMEGROUPIDNOTONLINE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The mutation type, represents all updates we can make to our data</span></span><br><span class="line"><span class="built_in">type</span> Mutation &#123;</span><br><span class="line">    create2UpdateTopic(name: String!, topic: TopicInput!): TopicResponse</span><br><span class="line">    deleteTopic(name: String!, topic: String!): TopicResponse</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The input object sent when cluster is creating a new topic</span></span><br><span class="line">input TopicInput &#123;</span><br><span class="line">    <span class="comment"># topic</span></span><br><span class="line">    topic: String!</span><br><span class="line">    <span class="comment"># The read queue nums, optional</span></span><br><span class="line">    readQueueNums: Int!</span><br><span class="line">    <span class="comment"># The write queue nums, optional</span></span><br><span class="line">    writeQueueNums: Int!</span><br><span class="line">    <span class="comment"># The order topic, optional</span></span><br><span class="line">    order: Boolean! </span><br><span class="line">    <span class="comment"># The unit topic, optional</span></span><br><span class="line">    unit: Boolean!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Represents a topic for a cluster</span></span><br><span class="line">interface Response &#123;</span><br><span class="line">    code: Int!</span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span> TopicResponse implements Response &#123;</span><br><span class="line">    code: Int!</span><br><span class="line">    desc: String!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GraphQL-代码实现"><a href="#GraphQL-代码实现" class="headerlink" title="GraphQL 代码实现"></a>GraphQL 代码实现</h3><p>console使用的<code>neelance/graphql-go</code>库，<a href="https://github.com/boltmq/console/tree/master/admin">代码查看</a>。使用的缺点和注意事项：</p><ul><li>neelance使用反射实现</li><li>graphql类型匹配严格，并缺少对于的int,int64等基础类型。</li><li>接口的实现不优雅，我提了<a href="https://github.com/neelance/graphql-go/issues/159">issue</a>，等待改进。</li><li>context无法向下传递</li></ul><p><strong>封装统一认证</strong></p><p>请求header中取得jwtToken进行验证。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> userClaims <span class="keyword">struct</span> &#123;</span><br><span class="line">    user</span><br><span class="line">    jwt.StandardClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> authenticator <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(auth *authenticator)</span> <span class="title">Chain</span><span class="params">(w http.ResponseWriter, r *http.Request, ctx *Context)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="comment">// extract jwt</span></span><br><span class="line">    jwtToken := r.Header.Get(<span class="string">&quot;Authorization&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// parse tokentoken</span></span><br><span class="line">    token, err := jwt.ParseWithClaims(jwtToken, &amp;userClaims&#123;&#125;, <span class="function"><span class="keyword">func</span><span class="params">(token *jwt.Token)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;Unexpected signing method&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwtSecret, <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;not authorized&quot;</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    claims, ok := token.Claims.(*userClaims)</span><br><span class="line">    <span class="keyword">if</span> !ok || !token.Valid &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;not authorized&quot;</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.ctx = context.WithValue(r.Context(), userAuthKey, claims.user)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录后生成token并返回。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> loginHandler <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *loginHandler)</span> <span class="title">ServeHTTP</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    decoder := json.NewDecoder(r.Body)</span><br><span class="line">    userParam := <span class="keyword">struct</span> &#123;</span><br><span class="line">        Username <span class="keyword">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">        Password <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">    &#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">    err := decoder.Decode(&amp;userParam)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, err.Error(), http.StatusInternalServerError)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> r.Body.Close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> userParam.Username != <span class="string">&quot;admin&quot;</span> || userParam.Password != <span class="string">&quot;admin&quot;</span> &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;invalid login&quot;</span>, http.StatusUnauthorized)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//generate token</span></span><br><span class="line">    expire := time.Now().Add(time.Hour * <span class="number">1</span>).Unix()</span><br><span class="line">    <span class="comment">// Create the Claims</span></span><br><span class="line">    claims := userClaims&#123;</span><br><span class="line">        user: user&#123;</span><br><span class="line">            UserID:   <span class="number">1</span>,</span><br><span class="line">            UserName: userParam.Username,</span><br><span class="line">            IsAdmin:  <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        StandardClaims: jwt.StandardClaims&#123;</span><br><span class="line">            ExpiresAt: expire,</span><br><span class="line">            Issuer:    <span class="string">&quot;login&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)</span><br><span class="line">    signedToken, _ := token.SignedString(jwtSecret)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//output token</span></span><br><span class="line">    tokenResponse := <span class="keyword">struct</span> &#123;</span><br><span class="line">        Token <span class="keyword">string</span> <span class="string">`json:&quot;token&quot;`</span></span><br><span class="line">    &#125;&#123;signedToken&#125;</span><br><span class="line">    json.NewEncoder(w).Encode(tokenResponse)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GraphQL接口接入认证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srv.mux.Handle(pattern, join(&amp;relay.Handler&#123;Schema: schema&#125;, &amp;authenticator&#123;&#125;))</span><br></pre></td></tr></table></figure><p>登录接入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srv.mux.Handle(pattern, &amp;loginHandler&#123;&#125;)</span><br></pre></td></tr></table></figure><p>以上4点就完成认证功能，详细代码查看<a href="https://github.com/boltmq/console/tree/master/admin/server">console-server</a></p><p>还需功能</p><ul><li>dataloader</li></ul><p>对比<a href="https://github.com/graphql-go/graphql">graphql-go</a>库，graphql-go更佳灵活，当抽象程度差一些。根据自己情况自行选择。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;上篇文章&lt;a href=&quot;graphql/graphql-golang-20180123.html&quot;&gt;《GraphQL查询语言学习笔记》&lt;/a&gt;学习了GraphQL的语法和介绍Golang的库。最近再使用Golang编写一款分布式消息队列&lt;a href=&quot;https://github.com/boltmq/boltmq&quot;&gt;BoltMQ&lt;/a&gt;，我将GraphQL用到BoltMQ的web管理UI上，这样更进一步了解GraphQL。&lt;/p&gt;</summary>
    
    
    
    <category term="graphql" scheme="https://luoji.live/categories/graphql/"/>
    
    
    <category term="golang" scheme="https://luoji.live/tags/golang/"/>
    
    <category term="graphql" scheme="https://luoji.live/tags/graphql/"/>
    
    <category term="graphiql" scheme="https://luoji.live/tags/graphiql/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack O版 安装部署及问题解决</title>
    <link href="https://luoji.live/openstack/opentstack-o-deploy-20180131.html"/>
    <id>https://luoji.live/openstack/opentstack-o-deploy-20180131.html</id>
    <published>2018-01-31T02:30:26.000Z</published>
    <updated>2021-01-05T16:26:11.372Z</updated>
    
    <content type="html"><![CDATA[<p>OpenStack项目是由Rackspace和NASA（美国国家航空航天局）共同发起的。它是一个开源软件，它提供了一个部署云的平台。为虚拟计算或存储服务的公有/私有云，提供可扩展的、灵活的云计算。是一个旨在为公共及私有云的建设与管理提供软件的开源项目。OpenStack目前版本Pike并在持续更新中，本文选用Ocata版本进行部署，并记录部署过程中遇到的问题。</p><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p><strong>操作系统</strong><br>Centos7.2.1151 mini(国内mirrors没有，<a href="http://vault.centos.org/7.2.1511/isos/x86_64/">官方下载</a>)</p><p><strong>服务节点</strong><br>本文使用三个节点部署stand-one方式，按照官方文档进行部署，高可用部署之后文章会跟进。</p><ul><li>controller节点</li><li>computer节点</li><li>block storage节点</li></ul><p><strong>网络说明</strong> </p><ul><li>Manage network 管理网络，OpenStack各个模块之间的交互，连接数据库，连接Message Queue都是通过这个网络来进行。</li><li>Private network 私有网络，虚拟机之间的数据传输通过这个网络来进行，虚拟机要连接虚拟路由都是通过这个网络来进行。</li><li>External network 外部网络，无论是用户调用OpenStack的API，还是创建出来的虚拟机要访问外网，或者外网要ssh到虚拟机，都用这个网络。</li></ul><p>OpenStack将三个网络进行隔离，一方面是安全，在虚拟机里面，干扰的都仅仅是Private Network，都不可能访问到我的数据库。一方面是流量分离，Manage Network的流量不是很大的，而且一般都会比较优雅的使用，而Prviate Network和External Network就需要有流量控制策略。</p><p>| 节点 | Manage network | Private network | External network |<br>| :—: | :— | :—: | :—: | :—: |<br>| controller | 10.50.1.11 | 10.50.1.11 | 10.112.1.116 |<br>| computer | 10.50.1.10 | 10.50.1.11 | 10.112.1.117(临时) |<br>| block storage | 10.50.1.12 | 10.50.1.12 | 10.112.1.118(临时) |</p><p>注意：非高可用环境采用Manage Private同网方式，computer和block storage节点的External network的外网用于安装环境的。</p><p><strong>配置节点别名</strong> </p><p>修改/etc/hostname的主机名称，修改每个节点的**/etc/hosts**</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.50.1.11 controller</span><br><span class="line">10.50.1.10 computer</span><br><span class="line">10.50.1.12 blokstorage</span><br></pre></td></tr></table></figure><p><strong>Yum下载源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><p>请参看<a href="https://docs.openstack.org/ocata/install-guide-rdo/common/conventions.html">官方Ocata版本安装向导</a>进行安装。请一步一步进行安装，官方文档已经非常详尽了，这里就不在重复写了，我会我部署过程中的问题中列举出来并记录。</p><h3 id="安装问题及解决方案"><a href="#安装问题及解决方案" class="headerlink" title="安装问题及解决方案"></a>安装问题及解决方案</h3><p><strong>编码unknown locale: UTF-8</strong><br>在进行同步数据库命令时，有时会出现<code>unknown locale: UTF-8</code>错误并同步失败。终端中输入以下命令后再执行同步命令即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><p><strong>连接不上rabbitmq的问题</strong><br>其它节点连接不上rabbitmq并提示<strong>127.0.0.1:5672</strong>(/var/log/下的日志)，文档中已经明确配置了<strong>transport_url = rabbit://openstack:RABBIT_PASS@controller</strong>，这里的rabbitmq的主机是controller而不是127.0.0.1。问题在于配置中还有rabbit_host参数指定，配置<strong>rabbit_host=controller</strong>重启服务即可。</p><p><strong>chrony时间同步问题</strong><br>参看各个节点的时区是否一致，可使用<code>timedatectl</code>命令进行查看与修改。如果chrony没有能同步时间，请使用命令修改系统时间后再<code>systemctl restart chrony</code>。如果时间没有同步，会导致controller检查block storage的cinder-volume服务一直为down状态。controller节点使用命令<strong>openstack volume service list</strong>查看。</p><p>设置时区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><p><strong>重启机器后无法访问web的问题</strong><br>重启后mysql、rabbitmq服务可能没有启动，需要检查并启动。启动后先需要重启http和memcached.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl start rabbitmq-server.service</span><br><span class="line">systemctl restart httpd.service memcached.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;OpenStack项目是由Rackspace和NASA（美国国家航空航天局）共同发起的。它是一个开源软件，它提供了一个部署云的平台。为虚拟计算或存储服务的公有/私有云，提供可扩展的、灵活的云计算。是一个旨在为公共及私有云的建设与管理提供软件的开源项目。OpenStack目前版本Pike并在持续更新中，本文选用Ocata版本进行部署，并记录部署过程中遇到的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="openstack" scheme="https://luoji.live/categories/openstack/"/>
    
    
    <category term="虚拟化" scheme="https://luoji.live/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    <category term="openstack" scheme="https://luoji.live/tags/openstack/"/>
    
    <category term="云计算" scheme="https://luoji.live/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="centos7.2" scheme="https://luoji.live/tags/centos7-2/"/>
    
    <category term="ocata" scheme="https://luoji.live/tags/ocata/"/>
    
  </entry>
  
</feed>
